<?xml version="1.0" encoding="UTF-8"?>
<project name="compile.targets" basedir=".">

  <dirname property="compile.targets.basedir" file="${ant.file.compile.targets}"/>
  <property name="compile.targets.thirdparty.dir" location="${compile.targets.basedir}/../../../ThirdParty"/>

  <import file="compile.properties.xml" />

  <target name="compile.help">

  </target>

  <target name="compile.clean">
    <delete dir="${build.dir.root}" failonerror="true" />
  </target>
  
  <target name="-quick.compile.source" depends="-compile.source"/>

  <target name="-compile.source">
    <echo message="compile.source for ${project.name}" level="info"/>

    <call target="compile.javac" />
    <call target="compile.resources" />
  </target>

  <target name="compile.javac">
    <mkdir dir="${build.classes.dir}" />

    <path id="source.class.files" />

    <for param="classpath.item">
      <path refid="build.classpath" />
      <sequential>
        <var name="classpath.item" value="@{classpath.item}" />
        <if>
          <scriptcondition language="javascript">
                        // import statements
                        //
                        importPackage(java.io);
                        importClass(java.io.File);
                        var thing = new
                        File(project.getProperty("classpath.item"));
                        self.setValue(thing.isDirectory());
          </scriptcondition>
          <then>
            <addfilesettopath refid="source.class.files">
              <fileset dir="${classpath.item}">
                <include name="compilesource.flag" />
              </fileset>
            </addfilesettopath>
          </then>
        </if>
      </sequential>
    </for>

    <path id="sourcefiles">
      <path refid="build.classpath" />
      <path refid="source.class.files" />
    </path>

    <var unset="true" name="sourcefiles" />
    <pathconvert targetos="${os.family}" property="sourcefiles"
            refid="sourcefiles" />

    <outofdate verbose="${debug}">
      <sourcefiles>
        <pathelement path="${sourcefiles}" />
      </sourcefiles>
      <targetfiles path="${build.classes.dir}/compilesource.flag"/>
      <sequential>
        <echo>Project is out-of-date compared to it's dependencies...</echo>
        <delete includeemptydirs="true">
          <fileset dir="${build.classes.dir}">
            <include name="**/*.class" />
          </fileset>
        </delete>
        <mkdir dir="${build.classes.dir}" />
        <echo file="${build.classes.dir}/compilesource.flag" append="false"/>
      </sequential>
    </outofdate>

    <javac updatedProperty="compile.updated" debug="${compile.debug}" debuglevel="lines,vars,source" srcdir="${source.dir}" destdir="${build.classes.dir}" includes="**/*.java">
        <classpath refid="build.classpath" />
        <classpath>
            <fileset dir="${compile.targets.thirdparty.dir}/AntExtraLibs">
                <include name="*.jar"/>
            </fileset>
        </classpath>
    </javac>

    <if>
      <istrue value="${compile.updated}"/>
      <then>
        <echo file="${build.classes.dir}/compile.javac.flag" append="false"/>
        <var unset="true" name="compile.updated"/>
      </then>
    </if>

    <if>
      <or>
        <istrue value="${unittest.hasTests}" />
        <istrue value="${webtest.hasTests}" />
        <istrue value="${integrationtest.hasTests}" />
      </or>
      <then>
        <mkdir dir="${build.unittest.classes.dir}" />
        <javac debug="${compile.debug}" debuglevel="lines,vars,source"
                    srcdir="${unittest.source.dir}" destdir="${build.unittest.classes.dir}"
                    includes="**/*.java">
          <classpath>
            <path refid="build.classpath" />
            <pathelement path="${build.classes.dir}" />
            <fileset refid="classpath.test" />
          </classpath>
        </javac>
      </then>
    </if>
  </target>

  <target name="compile.resources">
    <mkdir dir="${build.classes.dir}" />

    <available file="${source.webcontent.dir}" property="hasWebContent" />
    <if>
      <isset property="hasWebContent" />
      <then>
        <path id="source.webcontent.fileset">
          <fileset dir="${source.webcontent.dir}">
            <include name="**/*" />
          </fileset>
        </path>
      </then>
      <else>
        <path id="source.webcontent.fileset" />
      </else>
    </if>

    <path id="sourcefiles">
      <fileset dir="${source.resources.dir}">
        <include name="**/*" />
      </fileset>
      <fileset dir="${source.dir}">
        <include name="**/*" />
        <exclude name="**/*.java" />
      </fileset>
      <path refid="source.webcontent.fileset" />
    </path>

    <var unset="true" name="sourcefiles" />
    <pathconvert targetos="${os.family}" property="sourcefiles"
            refid="sourcefiles" />

    <outofdate verbose="${debug}">
      <sourcefiles>
        <pathelement path="${sourcefiles}" />
      </sourcefiles>
      <targetfiles path="${build.dir.root}/copyresource.flag"/>
      <sequential>
        <mkdir dir="${build.classes.dir}" />
        <copy todir="${build.classes.dir}" overwrite="true" verbose="${debug}">
          <fileset dir="${source.dir}">
            <include name="**/*" />
            <exclude name="**/*.java" />
            <exclude name="${source.xml.resources.dir}/*" />
          </fileset>
        </copy>
        <copy todir="${build.classes.dir}" overwrite="true" verbose="${debug}">
          <fileset dir="${source.resources.dir}">
            <include name="**/*.xml" />
            <include name="**/*.MF" />
            <include name="**/*.properties" />
            <exclude name="**/*xml-resources*" />
          </fileset>
        </copy>
        <if>
          <equals arg1="${dist.type}" arg2="war" />
          <then>
            <copy todir="${build.dist.root}" overwrite="true" verbose="${debug}">
              <fileset dir="${source.webcontent.dir}">
                <include name="**/*" />
              </fileset>
            </copy>                     
          </then>
        </if>
        <if>
          <isset property="copy.wsdl.to.webinf"/>
          <then>
            <runtarget target="copy.wsdl.to.web-inf"/>
          </then>
        </if>
        <echo file="${build.dir.root}/copyresource.flag" append="false"/>
      </sequential>
    </outofdate>

    <if>
      <or>
        <istrue value="${unittest.hasTests}" />
        <istrue value="${webtest.hasTests}" />
        <istrue value="${integrationtest.hasTests}" />
      </or>
      <then>
        <mkdir dir="${build.unittest.classes.dir}" />

        <path id="sourcefiles">
          <fileset dir="${unittest.resources.dir}">
            <include name="**/*" />
          </fileset>
          <fileset dir="${unittest.source.dir}">
            <include name="**/*" />
            <exclude name="**/*.java" />
          </fileset>
        </path>

        <var unset="true" name="sourcefiles" />
        <pathconvert targetos="${os.family}" property="sourcefiles"
                    refid="sourcefiles" />

        <path id="targetfiles">
          <fileset dir="${build.unittest.classes.dir}">
            <include name="**/*" />
            <exclude name="**/*.class" />
          </fileset>
        </path>

        <var unset="true" name="targetfiles" />
        <pathconvert targetos="${os.family}" property="targetfiles"
                    refid="targetfiles" />

        <outofdate verbose="${debug}">
          <sourcefiles>
            <pathelement path="${sourcefiles}" />
          </sourcefiles>
          <targetfiles>
            <pathelement path="${targetfiles}" />
          </targetfiles>
          <mapper type="identity" />
          <sequential>
            <copy todir="${build.unittest.classes.dir}" overwrite="true"
                            verbose="${debug}">
              <fileset dir="${unittest.source.dir}">
                <include name="**/*" />
                <exclude name="**/*.java" />
              </fileset>
            </copy>
            <copy todir="${build.unittest.classes.dir}" overwrite="true"
                            verbose="${debug}">
              <fileset dir="${unittest.resources.dir}">
                <include name="**/*" />
              </fileset>
            </copy>
          </sequential>
        </outofdate>
      </then>
    </if>
  </target>

 <target name="copy.wsdl.to.web-inf">
    <if>
      <equals arg1="${dist.type}" arg2="war"/>
      <then>
        <var name="copy.wsdl.to" value="WEB-INF/wsdl"/>
      </then>
      <else>
        <var name="copy.wsdl.to" value="META-INF/wsdl"/>
      </else>
    </if>
    <echo message="Copy wsdl and schema files to ${copy.wsdl.to}"/>
    <for param="wsdl.item">
      <path>
        <dirset dir="${source.wsdl.resources.dir}">
          <include name="**/wsdl"/>
        </dirset>
      </path>
      <sequential>    
        <var name="wsdl.item" value="@{wsdl.item}" />
        <propertyregex property="wsdlfile"
                              input="${wsdl.item}"
                              regexp="[^\${file.separator}+]+(?=\${file.separator}[^\${file.separator}]+$)"
                              select="\0"
                              casesensitive="false"
                              override="yes" />

        <mkdir dir="${build.dist.root}/${copy.wsdl.to}/${wsdlfile}"/>
        <mkdir dir="${build.dist.root}/${copy.wsdl.to}/schemas"/>

        <copy todir="${build.dist.root}/${copy.wsdl.to}/${wsdlfile}" overwrite="true" verbose="${debug}">
          <fileset dir="${source.wsdl.resources.dir}/${wsdlfile}/wsdl">
            <include name="**/*.wsdl" />
          </fileset>
        </copy>
        <copy todir="${build.dist.root}/${copy.wsdl.to}/schemas" overwrite="true" verbose="${debug}">
          <fileset dir="${source.wsdl.resources.dir}/${wsdlfile}/schemas">
            <include name="**/*" />
          </fileset>
        </copy>
      </sequential>
    </for>
  </target>

</project>
