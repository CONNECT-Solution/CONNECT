<?xml version="1.0" encoding="UTF-8"?>
<project name="build.targets" basedir=".">

    <dirname property="build.targets.basedir" file="${ant.file.build.targets}"/>
    <property name="build.targets.basedir.location" location="${build.targets.basedir}"/>
    <property name="build.targets.thirdparty.dir" location="${build.targets.basedir}/../../ThirdParty"/>

    <script language="javascript">
        <![CDATA[
        importClass(Packages.com.agilex.ant.TargetListener);

        var targetListener = new TargetListener();
        project.setProjectReference(targetListener);
        project.addBuildListener(targetListener);
    ]]>
        <classpath>
            <fileset dir="${build.targets.thirdparty.dir}/AntExtraLibs">
                <include name="agilex-ant-tasks.jar"/>
            </fileset>
        </classpath>
    </script>

    <import file="properties.build.xml" />
    <import file="common.build.xml" />
    <import file="build.macros.xml"/>

    <import file="package/package.targets.xml"/>
    <import file="${build.targets.basedir.location}/../Install/deploy.xml"/>
    <import file="licensetool/license.targets.xml"/>

    <property name="calling.anttarget.from.netbeans" value="false"/>
    <!-- The above property is read from netbeans configuration file -->
    <if>
        <equals arg1="${calling.anttarget.from.netbeans}" arg2="true"/>
        <then>
            <echo message="loading........"/>
            <import file="netbeans/netbeans.targets.xml" />
        </then>
    </if>

    <target name="deploy">
        <call target="create.deploy.list.xml" if="${deploy.isDeployable}"/>
        <call target="copy.deployable.artifacts" if="${deploy.isDeployable}"/>
        <call target="deploy.to.production" if="${deploy.isDeployable}"/>
    </target>

    <target name="just.deploy" description="Deploy the project, does not call dependent targets...">
        <property name="just.deploy" value="true"/>
        <call target="deploy.to.production" if="${deploy.isDeployable}"/>
    </target>

    <target name="undeploy">
        <call target="create.deploy.list.xml" if="${deploy.isDeployable}"/>
        <call target="copy.deployable.artifacts" if="${deploy.isDeployable}"/>
        <call target="undeploy.from.production" if="${deploy.isDeployable}"/>
    </target>

    <target name="create.deploy.list.xml">
        <xmltask dest="${deploy.application.list.file.path}" outputter="simple:3">
            <insert path="/" xml="&lt;applications&gt;&lt;wars/&gt;&lt;shared/&gt;&lt;ejbs/&gt;&lt;execs/&gt;&lt;/applications&gt;"/>
        </xmltask>
    </target>

    <target name="addentry.deploy.list.xml">
        <xmltask source="${root.project.directory.path}/projects.xml">
            <copy path="/projects/project/name[text()='${project.name}']/../should.deploy/text()" property="project.${project.name}.should.deploy"/>
        </xmltask>
        <propertycopy name="should.deploy" from="project.${project.name}.should.deploy" />
        <if>
            <istrue value="${should.deploy}"/>
            <then>
                <var name="deploy.should.deploy" value="true"/>
            </then>
            <else>
                <var name="deploy.should.deploy" value="false"/>
            </else>
        </if>
        <if>
            <istrue value="${deploy.isDeployable}"/>
            <then>
                <switch value="${deploy.type}">
                    <case value="war">
                        <var name="deploy.list.entry.xpath" value="/applications/wars"/>
                        <var name="deploy.should.deploy.entry.xpath" value="/applications/wars/war/name[text()='${project.name}']"/>
                        <var name="deploy.list.entry" value="&lt;war&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/war&gt;"/>
                        <runtarget target="insert.entry.to.deploy.app.list"/>
                    </case>
                    <case value="shared">
                        <var name="deploy.list.entry.xpath" value="/applications/shared"/>
                        <var name="deploy.should.deploy.entry.xpath" value="/applications/shared/lib/name[text()='${project.name}']"/>
                        <var name="deploy.list.entry" value="&lt;lib&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/lib&gt;"/>
                        <runtarget target="insert.entry.to.deploy.app.list"/>
                    </case>
                    <case value="ejb">
                        <var name="deploy.list.entry.xpath" value="/applications/ejbs"/>
                        <var name="deploy.should.deploy.entry.xpath" value="/applications/ejbs/ejb/name[text()='${project.name}']"/>
                        <var name="deploy.list.entry" value="&lt;ejb&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/ejb&gt;"/>
                        <runtarget target="insert.entry.to.deploy.app.list"/>
                    </case>
                    <case value="executable">
                        <var name="deploy.list.entry.xpath" value="/applications/execs"/>
                        <var name="deploy.should.deploy.entry.xpath" value="/applications/execs/executable/name[text()='${project.name}']"/>
                        <var name="deploy.list.entry" value="&lt;executable&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/executable&gt;"/>
                        <runtarget target="insert.entry.to.deploy.app.list"/>
                    </case>
                    <default>
                        <fail message="Deploy type ${deploy.type} is not supported."/>
                    </default>
                </switch>
            </then>
        </if>
    </target>

    <target name="insert.entry.to.deploy.app.list">
        <xmltask  source="${deploy.application.list.file.path}" dest="${deploy.application.list.file.path}" outputter="simple:3">
            <insert path="${deploy.list.entry.xpath}" xml="${deploy.list.entry}"/>
        </xmltask>
        <if>
            <istrue value="${deploy.should.deploy}"/>
            <then>
                <var name="deploy.should.deploy.entry" value="&lt;should.deploy&gt;true&lt;/should.deploy&gt;"/>
            </then>
            <else>
                <var name="deploy.should.deploy.entry" value="&lt;should.deploy&gt;false&lt;/should.deploy&gt;"/>
            </else>
        </if>
        <xmltask  source="${deploy.application.list.file.path}" dest="${deploy.application.list.file.path}" outputter="simple:3">
            <insert path="${deploy.should.deploy.entry.xpath}" xml="${deploy.should.deploy.entry}" position="after"/>
        </xmltask>
    </target>

    <target name="copy.deployable.artifacts">
        <call target="addentry.deploy.list.xml" if="${deploy.isDeployable}"/>
        <call target="copy.artifacts.to.development" if="${deploy.isDeployable}"/>
    </target>

    <target name="clean" description="Clean the project: run ant help for more info...">
        <dependcalls target="clean" />
        <call target="just.clean"/>
    </target>

    <target name="just.clean" description="Clean the project, does not call dependent targets..." depends="just.quick.clean"/>

    <target name="just.quick.clean" description="Clean the project, does not call dependent targets...">
        <call target="compile.clean"/>
        <call target="package.clean"/>
        <call target="junit.clean"/>
        <call target="coverage.clean"/>
        <call target="soapui.clean"/>
    </target>

    <target name="package.create" description="Create the jar|war|ear for the project: run ant help for more info...">
        <dependcalls target="package.create"/>
        <call target="just.package.create"/>
    </target>

    <target name="quick.package.create">
        <dependcalls target="quick.package.create"/>
        <call target="just.quick.package.create"/>
    </target>

    <target name="just.package.create" description="Create the jar|war|ear for the project, does not call any dependent targets...">
        <call target="just.source.compile" once="true"/>
        <call target="-package.create"/>
        <call target="coverage.instrument.package"/>
    </target>

    <target name="just.quick.package.create">
        <call target="just.quick.source.compile" once="true"/>
        <call target="-package.create"/>
        <call target="coverage.instrument.package"/>
    </target>

    <target name="scratch.files">
        <exec dir="${project.dir}" osfamily="windows" executable="cmd.exe" inputstring="">
            <arg line='/C svn move ${project.dir}/build_new.xml ${project.dir}/build.xml'/>
        </exec>
    </target>

</project>