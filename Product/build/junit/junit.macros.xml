<?xml version="1.0" encoding="UTF-8"?>
<project name="junit.macros" basedir=".">

  <dirname property="junit.macros.basedir" file="${ant.file.junit.macros}"/>
  <property name="junit.macros.thirdparty.dir" location="${junit.macros.basedir}/../../../ThirdParty"/>

  <macrodef name="run.if.unit.tests.are.out.of.date">
    <element name="extra-source" optional="true"/>
    <element name="do"/>
    <sequential>
      <echo message="check if tests are out of date" />
      <mkdir dir="${unittest.report.dir}"/>

      <path id="sourcefiles" >
        <fileset dir="${build.dist.root}">
          <include name="**/*" />
        </fileset>
        <fileset dir="${build.dir}/test">
          <include name="**/*" />
        </fileset>
        <extra-source/>
      </path>

      <var unset="true" name="sourcefiles"/>
      <pathconvert targetos="${os.family}" property="sourcefiles" refid="sourcefiles" />

      <var unset="true" name="has.some"/>
      <pathconvert property="has.some" setonempty="false">
        <path>
          <fileset dir="${unittest.report.dir}" includes="*"/>
        </path>
      </pathconvert>

      <if>
        <isset property="unittests.force"/>
        <else>
        <if>
           <isset property="has.some"/>
              <then>
                 <var name="unittests.force" value="false"/>
              </then>
              <else>
                <var name="unittests.force" value="true"/>
             </else>
         </if>
       </else>
     </if>

      <outofdate verbose="${debug}" force="${unittests.force}" >
        <sourcefiles>
          <pathelement path="${sourcefiles}"/>
        </sourcefiles>
        <targetfiles path="${unittest.report.dir}/test.flag"/>
        <sequential>
          <do/>
        </sequential>
      </outofdate>
    </sequential>
  </macrodef>

  <macrodef name="junitrun">
    <attribute name="reportfile" />
    <attribute name="testtype" />
    <attribute name="verbose" default="false" />
    <attribute name="genreport" default="${called.from.main.build}" />
    <attribute name="classpathrefid" default="junitrun.classpath"/>
    <attribute name="nhinc.properties.dir"/>
    <element name="tests"/>
    <sequential>
      <var unset="true" name="reportdir" />
      <var unset="true" name="reportfilename" />
      <var unset="true" name="junit.basedir" />
      <basename property="reportfilename" file="@{reportfile}" />
      <dirname property="reportdir" file="@{reportfile}" />
      <dirname property="junit.basedir" file="${reportdir}" />

      <delete dir="${reportdir}" />
      <mkdir dir="${reportdir}" />

      <property name="coverage.file" location="${coverage.classes.report.file}"/>
      <property name="cp" refid="@{classpathrefid}"/>
	  
      <var unset="true" name="unittest.failure"/>
      <junitrunner dir="${junit.basedir}" failureproperty="unittest.failure" printSummary="yes" fork="true" showoutput="true" forkmode="once" maxmemory="512m">
        <sysproperty key="basedir" value="${junit.basedir}" />
        <sysproperty key="net.sourceforge.cobertura.datafile" file="${coverage.file}" />

        <env key="CLASSPATH" value="${cp}"/>
        <jvmarg value="-XX:-UseSplitVerifier"/>
        <jvmarg value="-Dnhinc.properties.dir=@{nhinc.properties.dir}"/>        
        <formatter type="xml" />
        <formatter usefile="false" type="plain" />

        <batchtest todir="${reportdir}">
          <tests/>
        </batchtest>
        <classpath>
          <path refid="junitrun.classpath"></path>
          <fileset dir="${junit.macros.thirdparty.dir}/JUnit">
            <include name="junit-*.jar"/>
          </fileset>
        </classpath>
      </junitrunner>
      
      <if>
        <isset property="unittest.failure"/>
        <then>
          <mkdir dir="${root.project.directory.path}/@{testtype}-test-reports"/>
          <echo message="${project.name}${line.separator}" file="${root.project.directory.path}/@{testtype}-test-reports/unittest.check.failure"/>
          <echo file="${reportdir}/test.flag" append="false" message="failed"/>
          <if>
            <isfalse value="@{genreport}" />
            <then>
              <fail message="Atleast one @{testtype} test has failed! You can run the target unittest.write.html.report to create an html report in this projects directory unit-test-reports." />
            </then>
          </if>
        </then>
        <else>
            <echo file="${reportdir}/test.flag" append="false" message="passed"/>
        </else>
      </if>
    </sequential>
  </macrodef>

  <macrodef name="junitreportplus">
    <attribute name="reportfile" />
    <attribute name="testtype" />
    <element name="xmlreports" />
    <sequential>
      <var unset="true" name="reportdir" />
      <var unset="true" name="reportfilename" />
      <basename property="reportfilename" file="@{reportfile}" />
      <dirname property="reportdir" file="@{reportfile}" />

      <mkdir dir="${reportdir}" />
      <delete dir="@{reportfile}" />

      <junitreport todir="${reportdir}" tofile="${reportfilename}">
        <xmlreports />
        <report format="frames" todir="${reportdir}" />
      </junitreport>

      <available file="@{reportfile}" property="test.report.exists" value="true" />
      <if>
        <isset property="test.report.exists" />
        <then>
          <xmltask source="@{reportfile}">
            <call path="/">
              <param name="has.errors" path="boolean(/testsuites//testsuite[@errors>0] or /testsuites//testsuite[@failures>0])" />
              <actions>
                <if>
                  <istrue value="@{has.errors}" />
                  <then>
                    <fail message="Atleast one @{testtype} test has failed!" />
                  </then>
                </if>
              </actions>
            </call>
          </xmltask>
        </then>
        <else>
          <fail message="It doesn't look like any @{testtype} were run, so the build was failed!" />
        </else>
      </if>
    </sequential>
  </macrodef>


</project>
