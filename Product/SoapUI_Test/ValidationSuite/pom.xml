<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.connectopensource</groupId>
        <artifactId>SoapUI_Test</artifactId>
        <version>4.4.0-SNAPSHOT</version>
    </parent>
    <artifactId>ValidationSuite</artifactId>
    <packaging>jar</packaging>
    <name>Maven 3 soapUI ValidationSuite</name>
    <properties>
        <skip.unpack>false</skip.unpack>
        <soapui.testFailIgnore>true</soapui.testFailIgnore>
    </properties>
    <pluginRepositories>
        <pluginRepository>
            <id>eviwarePluginRepository</id>
            <url>http://www.soapui.org/repository/maven2/</url>
        </pluginRepository>
    </pluginRepositories>
    <profiles>
        <profile>
            <id>validation-testing</id>
            <activation>
                <property>
                    <name>!validation.skip</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                    <groupId>com.github.redfish4ktc.soapui</groupId>
                    <artifactId>maven-soapui-extension-plugin</artifactId>
                    <version>4.5.1.2</version>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>5.1.6</version>
                        </dependency>
                        <dependency>
                            <groupId>org.connectopensource</groupId>
                            <artifactId>CONNECTCommonTypesLib</artifactId>
                            <version>4.0.7</version>
                        </dependency>
                        <dependency>
                            <groupId>org.connectopensource</groupId>
                            <artifactId>FileUtils</artifactId>
                            <version>4.4.0-SNAPSHOT</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <settingsFile>${basedir}/src/main/resources/soapui-settings.xml</settingsFile>
                        <outputFolder>${basedir}/target/soapui/output/</outputFolder>
                        <soapuiProperties>
                            <property>
                                <name>soapui.logroot</name>
                                <value>${project.build.directory}/soapui/my_custom_logs/</value>
                            </property>
                            <property>
                                <name>soapui.scripting.library</name>
                                <value>${basedir}/src/main/resources/groovy_scripts</value>
                            </property>
                            <property>
                                <name>soapui.ext.libraries</name>
                                <value>${basedir}/src/main/resources/ext</value>
                            </property>
                        </soapuiProperties>
                        <exportAll>true</exportAll>
                        <printReport>true</printReport>
                        <junitReport>true</junitReport>
                        <coverage>false</coverage>
                        <testFailIgnore>${soapui.testFailIgnore}</testFailIgnore>
                        <saveAfterRun>false</saveAfterRun>
                        <host>${host}:${port}</host>
                        <testSuite>${test.suite}</testSuite>
                        <testCase>${test.case}</testCase>
                        <projectProperties>
                            <value>GatewayPropDir=${properties.dir}</value>
                            <value>DBHost=${db.host}</value>
                            <value>DBPass=${db.password}</value>
                            <value>DBPort=${db.port}</value>
                            <value>DBUser=${db.user}</value>
                        </projectProperties>
                    </configuration>
                    <executions>
                            <execution>
                                <id>ConnectValidation-soapui-project.xml</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <projectFile>${basedir}/ConnectValidation-soapui-project.xml</projectFile>
                                    <outputFolder>${project.build.directory}/soapui/output/ConnectValidation</outputFolder>
                                </configuration>
                            </execution>
                            <execution>
                                <id>test-verify</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>test-verify</goal>
                                </goals>
                            </execution>
                        </executions>
                </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>embedded-testing</id>
            <activation>
                <property>
                    <name>!standalone</name>
                </property>
            </activation>
            <properties>
                <properties.dir>${project.build.directory}/nhinc-properites-dir</properties.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!-- Used to pull XSD files from the JAR -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dependency-validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${endorsed.dir}</outputDirectory>
                                    <silent>true</silent>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>javax</groupId>
                                            <artifactId>javaee-endorsed-api</artifactId>
                                            <version>6.0</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>dependency-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>properties</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>unpack-nhin-properties</id>
                                <!-- Using the initialize phase because it
                                    is before the generate sources phase -->
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.unpack}</skip>
                                    <artifactItems>
                                        <artifactItem>
                                            <!-- Artifact that Holds our
                                                custom templates -->
                                            <groupId>org.connectopensource</groupId>
                                            <artifactId>Properties</artifactId>
                                            <version>${project.parent.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <includes>**/*</includes>
                                    <outputDirectory>${project.build.directory}/nhinc-properites-dir/</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-mysql-conn-to-lib</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/domain1/lib/</outputDirectory>
                                    <silent>true</silent>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>mysql</groupId>
                                            <artifactId>mysql-connector-java</artifactId>
                                            <version>5.1.10</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-Connect-Properties-jar-to-lib</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/domain1/lib/</outputDirectory>
                                    <silent>true</silent>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.connectopensource</groupId>
                                            <artifactId>Properties</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources-embedded-glassfish-domain</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/domain1/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/test/resources/domain1/</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-gateway.properties</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/domain1/config/nhin/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.testOutputDirectory}</directory>
                                            <includes>
                                                <include>gateway.properties</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-docroot</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/domain1/docroot/" />
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>setup-selfsigned-certs</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/domain1/config" />
                                        <copy file="${project.build.directory}/test-classes/chaincerts/gateway.jks" todir="${project.build.directory}/domain1/config/" />
                                        <copy file="${project.build.directory}/test-classes/chaincerts/cacerts.jks" todir="${project.build.directory}/domain1/config/" />
                                        <copy file="${project.build.directory}/test-classes/chaincerts/gateway.jks" todir="${project.build.directory}/domain1/lib/classes/" />
                                        <copy file="${project.build.directory}/test-classes/chaincerts/cacerts.jks" todir="${project.build.directory}/domain1/lib/classes/" />
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>setup-direct-smtp-agent-config</id>
                                <!-- using "compile" because it must come after process-resources (where the properties files are expanded) -->
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property name="temp.dir" value="${basedir}/.validationsuite.temp" />
                                        <property name="cert.key.algorithm" value="RSA" />
                                        <property name="cert.key.size" value="1024" />
                                        <property name="cert.keypass" value="changeit" />
                                        <property name="cert.validity.length" value="365" />
                                        <property name="cert.storepass" value="changeit" />
                                        <property name="direct.anchor.store" value="anchors" />
                                        <property name="direct.trust.store" value="example-store" />
                                        <property name="direct.key.store" value="example-key" />

                                        <!-- Direct stores -->
                                        <mkdir dir="${temp.dir}" />
                                        <delete>
                                            <fileset dir="${temp.dir}">
                                                <include name="**/*" />
                                            </fileset>
                                        </delete>
                                        <exec failonerror="true" executable="keytool" dir="${temp.dir}">
                                            <arg line="-v -genkey -keyalg ${cert.key.algorithm} -keysize ${cert.key.size} -keystore ${direct.key.store}.jks -keypass ${cert.keypass} -storepass ${cert.storepass} -validity ${cert.validity.length} -alias direct.example.com -dname &quot;cn=direct.example.com&quot;" />
                                        </exec>
                                        <exec failonerror="true" executable="keytool" dir="${temp.dir}">
                                            <arg line="-v -export -rfc -alias direct.example.com -file example.cer -keystore ${direct.key.store}.jks -keypass ${cert.keypass} -storepass ${cert.storepass}" />
                                        </exec>
                                        <exec failonerror="true" executable="keytool" dir="${temp.dir}">
                                            <arg line="-v -import -keypass ${cert.keypass} -noprompt -trustcacerts -alias direct.example.com -file example.cer -keystore ${direct.trust.store}.jks -storepass ${cert.storepass}" />
                                        </exec>
                                        <!-- Use the same trust store for the anchor store -->
                                        <exec failonerror="true" executable="keytool" dir="${temp.dir}">
                                            <arg line="-v -import -keypass ${cert.keypass} -noprompt -trustcacerts -alias direct.example.com -file example.cer -keystore ${direct.anchor.store}.jks -storepass ${cert.storepass}" />
                                        </exec>
                                        <copy todir="${project.build.directory}/domain1/config" overwrite="true">
                                            <fileset dir="${temp.dir}">
                                                <include name="${direct.key.store}.jks" />
                                                <include name="${direct.trust.store}.jks" />
                                                <include name="${direct.anchor.store}.jks" />
                                            </fileset>
                                        </copy>

                                        <copy file="${project.build.directory}/nhinc-properites-dir/smtp.agent.config.template.xml" tofile="${project.build.directory}/nhinc-properites-dir/smtp.agent.config.xml" filtering="yes" overwrite="yes">
                                            <filterset>
                                                <filter token="ANCHOR_STORE_JKS" value="${project.build.directory}/domain1/config/${direct.anchor.store}.jks" />
                                                <filter token="PUBLIC_STORE_JKS" value="${project.build.directory}/domain1/config/${direct.trust.store}.jks" />
                                                <filter token="PRIVATE_STORE_JKS" value="${project.build.directory}/domain1/config/${direct.key.store}.jks" />
                                            </filterset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-sql-scripts</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.unpack}</skip>
                                    <artifactItems>
                                        <artifactItem>
                                            <!-- Artifact that Holds our
                                                SQL scripts -->
                                            <groupId>org.connectopensource</groupId>
                                            <artifactId>DBScripts</artifactId>
                                            <version>${project.parent.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <includes>**/*</includes>
                                    <outputDirectory>${project.build.directory}/DBScripts/</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.1.10</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://${db.host}</url>
                            <username>root</username>
                            <password>${mysql.root.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <srcFiles>
                                        <srcFile>${project.build.directory}/DBScripts/nhincdb/dropall.sql</srcFile>
                                        <srcFile>${project.build.directory}/DBScripts/nhincdb/nhincdb.sql</srcFile>
                                        <srcFile>${project.build.directory}/DBScripts/nhincdb/populateTestData.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.glassfish.embedded</groupId>
                        <artifactId>maven-embedded-glassfish-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-glassfish</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>glassfish-deploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>glassfish-undeploy</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-glassfish</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
