<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="AuditLogging-Passthrough" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" id="e66381c9-fb5e-41d2-9709-c19456143493" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entityadmindistribution}AdministrativeDistribution_Binding_Soap12" definition="../../../target/wsdl/EntityAdminDist_g1.wsdl" name="AdministrativeDistribution_Binding_Soap12_g1" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="32f903e4-a429-4ad5-9b47-0eb4aba7cf9e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/AdminDistribution/2_0/AdministrativeDistribution_Service</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:oasis:names:tc:emergency:EDXL:DE:1.0:SendAlertMessage" bindingOperationName="SendAlertMessage" inputName="" isOneWay="false" name="SendAlertMessage" sendsAttachments="false" type="One-Way" id="6f44de70-677a-457f-84fe-44872be47da6">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr}EntityXDR_Binding" definition="../../../target/wsdl/EntityXDR.wsdl" name="EntityXDR_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="42b67b15-6802-4fd6-9319-8cf844805eb0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionUnsecured</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTGateway/EntityService/EntityDocSubmissionUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation action="" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-b" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-b" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="ba007cf5-27e8-49ec-a4f4-b6f6d6589ba2">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr}EntityXDR_Binding" definition="../../../target/wsdl/EntityXDR.wsdl" name="EntityXDR_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="42b67b15-6802-4fd6-9319-8cf844805eb0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-XDSEntity}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTGateway/EntityService/EntityDocDataSubmissionUnsecured</con:endpoint>
    </con:endpoints><con:operation action="" anonymous="optional" bindingOperationName="RegisterDocumentSet-b" inputName="" isOneWay="false" name="RegisterDocumentSet-b" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="ba007cf5-27e8-49ec-a4f4-b6f6d6589ba2">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr:async:response}EntityXDRAsyncResponse_Binding" definition="../../../target/wsdl/EntityXDRResponse.wsdl" name="EntityXDRAsyncResponse_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="02bae5b0-fdd3-424d-97ba-22f868fbc706" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRAsyncResponse</con:endpoint>
    </con:endpoints>
    <con:operation action="" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-bAsyncResponse" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-bAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="738a3cba-fda2-4c2e-8fe2-1bf76a59e4bc">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request}EntityXDRAsyncRequest_Binding" definition="../../../target/wsdl/EntityXDRRequest.wsdl" name="EntityXDRAsyncRequest_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="0e7b5cf5-2d39-4318-8bdd-26e61a12acee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRAsyncRequest</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRRequest</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:endpoint>
    </con:endpoints>
    <con:operation action="tns:ProvideAndRegisterDocumentSet-bAsyncRequest" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-bAsyncRequest" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-bAsyncRequest" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="d623ef14-38ee-44fe-9c54-7e924388d433">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscovery}EntityPatientDiscoveryBindingSoap" definition="../../../target/wsdl/EntityPatientDiscovery.wsdl" name="EntityPatientDiscoveryBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="b027fdbf-8aed-40ff-839f-7df75035bc45" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTGateway/EntityPatientDiscovery</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitypatientdiscovery:RespondingGateway_PRPA_IN201305UV02RequestMessage" bindingOperationName="RespondingGateway_PRPA_IN201305UV02" inputName="RespondingGateway_PRPA_IN201305UV02Request" isOneWay="false" name="RespondingGateway_PRPA_IN201305UV02" outputName="RespondingGateway_PRPA_IN201306UV02Response" receivesAttachments="false" sendsAttachments="false" type="Request-Response" anonymous="optional" id="2ef75d2a-f0b1-476e-9eee-fc89793693ba">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq}EntityPatientDiscoveryAsyncReqBindingSoap" definition="../../../target/wsdl/EntityPatientDiscoveryAsyncReq.wsdl" name="EntityPatientDiscoveryAsyncReqBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="cff47755-070d-49bb-8b2a-f8b835ad1d31" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
      <con:endpoint>http://localhost/NhinConnect/EntityPatientDiscoveryAsyncReq</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:ProcessPatientDiscoveryAsyncReq" anonymous="optional" bindingOperationName="ProcessPatientDiscoveryAsyncReq" inputName="ProcessPatientDiscoveryAsyncReqAsyncRequest" isOneWay="false" name="ProcessPatientDiscoveryAsyncReq" outputName="ProcessPatientDiscoveryAsyncReqAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="c1cd94e9-7f2a-4c2e-9f6e-3234195dc14d">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitydocretrieve}EntityDocRetrieveBindingSoap" definition="../../../target/wsdl/EntityDocRetrieve.wsdl" name="EntityDocRetrieveBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="64e75e27-74a1-4ec7-a95d-dbb0ff2a5fa6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentRetrieve/2_0/EntityService/EntityDocRetrieve</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityDocRetrieve</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitydocretrieve:RespondingGateway_CrossGatewayRetrieveRequestMessage" anonymous="optional" bindingOperationName="RespondingGateway_CrossGatewayRetrieve" inputName="RespondingGateway_CrossGatewayRetrieveRequest" isOneWay="false" name="RespondingGateway_CrossGatewayRetrieve" outputName="RespondingGateway_CrossGatewayRetrieveResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="5204cc86-6322-458f-a6b3-817e7d1eaa06">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp}EntityPatientDiscoveryAsyncRespBindingSoap" definition="../../../target/wsdl/EntityPatientDiscoveryAsyncResp.wsdl" name="EntityPatientDiscoveryAsyncRespBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="66a139bf-9f5e-4ca7-9e11-7249bfbcfedb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
      <con:endpoint>http://localhost/NhinConnect/EntityPatientDiscoveryAsyncResp</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation action="" bindingOperationName="ProcessPatientDiscoveryAsyncResp" inputName="ProcessPatientDiscoveryAsyncRespAsyncRequest" isOneWay="false" name="ProcessPatientDiscoveryAsyncResp" outputName="ProcessPatientDiscoveryAsyncRespAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" anonymous="optional" id="20bb0f3d-0f6a-40ff-9ab5-1099410289c8">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitydocquery}EntityDocQueryBindingSoap" definition="../../../target/wsdl/EntityDocQuery.wsdl" name="EntityDocQueryBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="2b0a8d6f-a949-42a3-8161-b422f81b1430" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentQuery/2_0/EntityService/EntityDocQueryUnsecured</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityDocQuery</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitydocquery:RespondingGateway_CrossGatewayQueryRequest" anonymous="optional" bindingOperationName="RespondingGateway_CrossGatewayQuery" inputName="RespondingGateway_CrossGatewayQueryRequest" isOneWay="false" name="RespondingGateway_CrossGatewayQuery" outputName="RespondingGateway_CrossGatewayQueryResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="b7104074-9327-4f37-9e5d-e864a2ac794e">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AdministrativeDistribution_Binding_Soap12_g0" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entityadmindistribution}AdministrativeDistribution_Binding_Soap12" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityAdminDist.wsdl" id="788e2ed0-9c39-47c8-ae30-f0fbd4558163" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/AdminDistribution/1_0/AdministrativeDistribution_Service</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="urn:oasis:names:tc:emergency:EDXL:DE:1.0:SendAlertMessage" name="SendAlertMessage" bindingOperationName="SendAlertMessage" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional" id="e7048622-197d-47b8-8b7f-a8c518ea62de">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AdapterPatientDiscoveryBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:adapterpatientdiscovery}AdapterPatientDiscoveryBindingSoap" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/AdapterPatientDiscovery.wsdl" id="b31b34a3-2e5e-4756-b26f-b066329a2e9b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>https://localhost:${HttpsDefaultPort}/Adapter/PatientDiscovery/A_0/AdapterPatientDiscovery</con:endpoint>
    </con:endpoints><con:operation isOneWay="false" action="urn:RespondingGateway_PRPA_IN201305UV02" name="RespondingGateway_PRPA_IN201305UV02" bindingOperationName="RespondingGateway_PRPA_IN201305UV02" type="Request-Response" outputName="RespondingGateway_PRPA_IN201306UV02Response" inputName="RespondingGateway_PRPA_IN201305UV02Request" receivesAttachments="false" sendsAttachments="false" id="bac85853-25c7-48a6-9101-5169a3899082">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EntityCOREGenericBatchTransactionSoapBinding" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhincentitycore}EntityCOREGenericBatchTransactionSoapBinding" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityCORERule2.2.0GenericBatch.wsdl" id="114b3833-1d19-45eb-a735-938983da345a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-X12GenericBatch}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/COREGenericBatchTransaction/EntityService/EntityCOREGenericBatchTransactionUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="BatchSubmitTransaction" name="BatchSubmitTransaction" bindingOperationName="BatchSubmitTransaction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="692dbf28-be82-4271-a42f-4f580dafcf15">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EntityCORETransactionSoapBinding" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhincentitycore}EntityCORETransactionSoapBinding" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityCORERule2.2.0RealTime.wsdl" id="b216aef5-33cc-4f38-9f3e-53b99c3fb3bd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/CORETransaction/EntityService/EntityCORETransactionUnsecured</con:endpoint>
      <con:endpoint>http://localhost:8080/Gateway/CORETransaction/EntityService/EntityCORETransactionUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="RealTimeTransaction" name="RealTimeTransaction" bindingOperationName="RealTimeTransaction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6dbe57ed-8eb8-4b57-825e-8e5bdd0ada24">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="fb759f29-b158-4b27-9046-a33472e583e4" wsaVersion="NONE" name="EntityXDS_Binding" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entityxds}EntityXDS_Binding" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityDDS.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/>
  <con:endpoints>
<con:endpoint>http://localhost:/Gateway/DocumentDataSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:endpoint></con:endpoints>
<con:operation id="19ce6a8c-d66a-4c1e-8644-5fea08cdc9ec" isOneWay="false" action="" name="RegisterDocumentSet-b" bindingOperationName="RegisterDocumentSet-b" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation>
</con:interface><con:interface xsi:type="con:WsdlInterface" id="8f19ad4b-657c-4915-9075-2d20c20ea625" wsaVersion="NONE" name="EntityPatientLocationQueryBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientlocationquery}EntityPatientLocationQueryBindingSoap" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityPatientLocationQuery.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientLocationQuery</con:endpoint></con:endpoints><con:operation id="fb390ab2-a222-4c45-9517-88b1369ec834" isOneWay="false" action="urn:gov:hhs:fha:nhinc:entitypatientlocationquery:RespondingGateway_PatientLocationQueryRequestMessage" name="RespondingGateway_PatientLocationQuery" bindingOperationName="RespondingGateway_PatientLocationQuery" type="Request-Response" outputName="RespondingGateway_PatientLocationQueryResponse" inputName="RespondingGateway_PatientLocationQueryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0b6865d6-a503-4301-ae22-64e74c71fef0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientLocationQuery</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:ihe:iti:xcpd:2009" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon">\r
   <soap:Header/>\r
   <soap:Body>\r
      <urn:RespondingGateway_PatientLocationQueryRequest>\r
         <urn1:PatientLocationQueryRequest>\r
            <urn1:RequestedPatientId nullFlavor="?" root="?" extension="?" assigningAuthorityName="?" displayable="?"/>\r
         </urn1:PatientLocationQueryRequest>\r
         <urn:assertion>\r
            <!--Optional:-->\r
            <urn2:address>\r
               <urn2:addressType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:addressType>\r
               <urn2:city>?</urn2:city>\r
               <urn2:country>?</urn2:country>\r
               <urn2:state>?</urn2:state>\r
               <urn2:streetAddress>?</urn2:streetAddress>\r
               <urn2:zipCode>?</urn2:zipCode>\r
            </urn2:address>\r
            <!--Optional:-->\r
            <urn2:dateOfBirth>?</urn2:dateOfBirth>\r
            <!--Optional:-->\r
            <urn2:explanationNonClaimantSignature>?</urn2:explanationNonClaimantSignature>\r
            <!--Optional:-->\r
            <urn2:haveSecondWitnessSignature>?</urn2:haveSecondWitnessSignature>\r
            <!--Optional:-->\r
            <urn2:haveSignature>?</urn2:haveSignature>\r
            <!--Optional:-->\r
            <urn2:haveWitnessSignature>?</urn2:haveWitnessSignature>\r
            <urn2:homeCommunity>\r
               <!--Optional:-->\r
               <urn2:description>?</urn2:description>\r
               <urn2:homeCommunityId>?</urn2:homeCommunityId>\r
               <!--Optional:-->\r
               <urn2:name>?</urn2:name>\r
            </urn2:homeCommunity>\r
            <!--Optional:-->\r
            <urn2:nationalProviderId>?</urn2:nationalProviderId>\r
            <!--Optional:-->\r
            <urn2:personName>\r
               <urn2:familyName>?</urn2:familyName>\r
               <urn2:givenName>?</urn2:givenName>\r
               <urn2:nameType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:nameType>\r
               <urn2:secondNameOrInitials>?</urn2:secondNameOrInitials>\r
               <urn2:fullName>?</urn2:fullName>\r
               <urn2:prefix>?</urn2:prefix>\r
               <urn2:suffix>?</urn2:suffix>\r
            </urn2:personName>\r
            <!--Optional:-->\r
            <urn2:phoneNumber>\r
               <urn2:areaCode>?</urn2:areaCode>\r
               <urn2:countryCode>?</urn2:countryCode>\r
               <urn2:extension>?</urn2:extension>\r
               <urn2:localNumber>?</urn2:localNumber>\r
               <urn2:phoneNumberType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:phoneNumberType>\r
            </urn2:phoneNumber>\r
            <!--Optional:-->\r
            <urn2:secondWitnessAddress>\r
               <urn2:addressType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:addressType>\r
               <urn2:city>?</urn2:city>\r
               <urn2:country>?</urn2:country>\r
               <urn2:state>?</urn2:state>\r
               <urn2:streetAddress>?</urn2:streetAddress>\r
               <urn2:zipCode>?</urn2:zipCode>\r
            </urn2:secondWitnessAddress>\r
            <!--Optional:-->\r
            <urn2:secondWitnessName>\r
               <urn2:familyName>?</urn2:familyName>\r
               <urn2:givenName>?</urn2:givenName>\r
               <urn2:nameType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:nameType>\r
               <urn2:secondNameOrInitials>?</urn2:secondNameOrInitials>\r
               <urn2:fullName>?</urn2:fullName>\r
               <urn2:prefix>?</urn2:prefix>\r
               <urn2:suffix>?</urn2:suffix>\r
            </urn2:secondWitnessName>\r
            <!--Optional:-->\r
            <urn2:secondWitnessPhone>\r
               <urn2:areaCode>?</urn2:areaCode>\r
               <urn2:countryCode>?</urn2:countryCode>\r
               <urn2:extension>?</urn2:extension>\r
               <urn2:localNumber>?</urn2:localNumber>\r
               <urn2:phoneNumberType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:phoneNumberType>\r
            </urn2:secondWitnessPhone>\r
            <!--Optional:-->\r
            <urn2:SSN>?</urn2:SSN>\r
            <!--Zero or more repetitions:-->\r
            <urn2:uniquePatientId>?</urn2:uniquePatientId>\r
            <!--Optional:-->\r
            <urn2:witnessAddress>\r
               <urn2:addressType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:addressType>\r
               <urn2:city>?</urn2:city>\r
               <urn2:country>?</urn2:country>\r
               <urn2:state>?</urn2:state>\r
               <urn2:streetAddress>?</urn2:streetAddress>\r
               <urn2:zipCode>?</urn2:zipCode>\r
            </urn2:witnessAddress>\r
            <!--Optional:-->\r
            <urn2:witnessName>\r
               <urn2:familyName>?</urn2:familyName>\r
               <urn2:givenName>?</urn2:givenName>\r
               <urn2:nameType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:nameType>\r
               <urn2:secondNameOrInitials>?</urn2:secondNameOrInitials>\r
               <urn2:fullName>?</urn2:fullName>\r
               <urn2:prefix>?</urn2:prefix>\r
               <urn2:suffix>?</urn2:suffix>\r
            </urn2:witnessName>\r
            <!--Optional:-->\r
            <urn2:witnessPhone>\r
               <urn2:areaCode>?</urn2:areaCode>\r
               <urn2:countryCode>?</urn2:countryCode>\r
               <urn2:extension>?</urn2:extension>\r
               <urn2:localNumber>?</urn2:localNumber>\r
               <urn2:phoneNumberType>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:phoneNumberType>\r
            </urn2:witnessPhone>\r
            <urn2:userInfo>\r
               <urn2:personName>\r
                  <urn2:familyName>?</urn2:familyName>\r
                  <urn2:givenName>?</urn2:givenName>\r
                  <urn2:nameType>\r
                     <urn2:code>?</urn2:code>\r
                     <!--Optional:-->\r
                     <urn2:codeSystem>?</urn2:codeSystem>\r
                     <!--Optional:-->\r
                     <urn2:codeSystemName>?</urn2:codeSystemName>\r
                     <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                     <urn2:displayName>?</urn2:displayName>\r
                     <urn2:originalText>?</urn2:originalText>\r
                     <!--Zero or more repetitions:-->\r
                     <urn2:translation/>\r
                  </urn2:nameType>\r
                  <urn2:secondNameOrInitials>?</urn2:secondNameOrInitials>\r
                  <urn2:fullName>?</urn2:fullName>\r
                  <urn2:prefix>?</urn2:prefix>\r
                  <urn2:suffix>?</urn2:suffix>\r
               </urn2:personName>\r
               <urn2:userName>?</urn2:userName>\r
               <urn2:org>\r
                  <!--Optional:-->\r
                  <urn2:description>?</urn2:description>\r
                  <urn2:homeCommunityId>?</urn2:homeCommunityId>\r
                  <!--Optional:-->\r
                  <urn2:name>?</urn2:name>\r
               </urn2:org>\r
               <urn2:roleCoded>\r
                  <urn2:code>?</urn2:code>\r
                  <!--Optional:-->\r
                  <urn2:codeSystem>?</urn2:codeSystem>\r
                  <!--Optional:-->\r
                  <urn2:codeSystemName>?</urn2:codeSystemName>\r
                  <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
                  <urn2:displayName>?</urn2:displayName>\r
                  <urn2:originalText>?</urn2:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn2:translation/>\r
               </urn2:roleCoded>\r
            </urn2:userInfo>\r
            <urn2:authorized>?</urn2:authorized>\r
            <urn2:purposeOfDisclosureCoded>\r
               <urn2:code>?</urn2:code>\r
               <!--Optional:-->\r
               <urn2:codeSystem>?</urn2:codeSystem>\r
               <!--Optional:-->\r
               <urn2:codeSystemName>?</urn2:codeSystemName>\r
               <urn2:codeSystemVersion>?</urn2:codeSystemVersion>\r
               <urn2:displayName>?</urn2:displayName>\r
               <urn2:originalText>?</urn2:originalText>\r
               <!--Zero or more repetitions:-->\r
               <urn2:translation/>\r
            </urn2:purposeOfDisclosureCoded>\r
            <!--Optional:-->\r
            <urn2:acpAttribute>?</urn2:acpAttribute>\r
            <!--Optional:-->\r
            <urn2:instanceAcpAttribute>?</urn2:instanceAcpAttribute>\r
            <!--Optional:-->\r
            <urn2:samlConditions>\r
               <urn2:notBefore>?</urn2:notBefore>\r
               <urn2:notOnOrAfter>?</urn2:notOnOrAfter>\r
            </urn2:samlConditions>\r
            <!--Optional:-->\r
            <urn2:samlAuthnStatement>\r
               <urn2:authInstant>?</urn2:authInstant>\r
               <!--Optional:-->\r
               <urn2:sessionIndex>?</urn2:sessionIndex>\r
               <urn2:authContextClassRef>?</urn2:authContextClassRef>\r
               <!--Optional:-->\r
               <urn2:subjectLocalityAddress>?</urn2:subjectLocalityAddress>\r
               <!--Optional:-->\r
               <urn2:subjectLocalityDNSName>?</urn2:subjectLocalityDNSName>\r
            </urn2:samlAuthnStatement>\r
            <!--Optional:-->\r
            <urn2:samlAuthzDecisionStatement>\r
               <!--Optional:-->\r
               <urn2:decision>?</urn2:decision>\r
               <!--Optional:-->\r
               <urn2:resource>?</urn2:resource>\r
               <!--Optional:-->\r
               <urn2:action>?</urn2:action>\r
               <!--Optional:-->\r
               <urn2:evidence>\r
                  <!--Optional:-->\r
                  <urn2:assertion>\r
                     <!--Optional:-->\r
                     <urn2:id>?</urn2:id>\r
                     <!--Optional:-->\r
                     <urn2:issueInstant>?</urn2:issueInstant>\r
                     <!--Optional:-->\r
                     <urn2:version>?</urn2:version>\r
                     <!--Optional:-->\r
                     <urn2:issuer>?</urn2:issuer>\r
                     <!--Optional:-->\r
                     <urn2:issuerFormat>?</urn2:issuerFormat>\r
                     <!--Optional:-->\r
                     <urn2:subject>?</urn2:subject>\r
                     <!--Optional:-->\r
                     <urn2:conditions>\r
                        <!--Optional:-->\r
                        <urn2:notBefore>?</urn2:notBefore>\r
                        <!--Optional:-->\r
                        <urn2:notOnOrAfter>?</urn2:notOnOrAfter>\r
                     </urn2:conditions>\r
                     <!--Zero or more repetitions:-->\r
                     <urn2:accessConsentPolicy>?</urn2:accessConsentPolicy>\r
                     <!--Zero or more repetitions:-->\r
                     <urn2:instanceAccessConsentPolicy>?</urn2:instanceAccessConsentPolicy>\r
                  </urn2:assertion>\r
               </urn2:evidence>\r
            </urn2:samlAuthzDecisionStatement>\r
            <!--Optional:-->\r
            <urn2:samlSignature>\r
               <!--Optional:-->\r
               <urn2:keyInfo>\r
                  <!--Optional:-->\r
                  <urn2:rsaKeyValueModulus>cid:728254810106</urn2:rsaKeyValueModulus>\r
                  <!--Optional:-->\r
                  <urn2:rsaKeyValueExponent>cid:301025852723</urn2:rsaKeyValueExponent>\r
               </urn2:keyInfo>\r
               <!--Optional:-->\r
               <urn2:signatureValue>cid:1100236730053</urn2:signatureValue>\r
            </urn2:samlSignature>\r
            <!--Optional:-->\r
            <urn2:samlIssuer>\r
               <!--Optional:-->\r
               <urn2:issuer>?</urn2:issuer>\r
               <!--Optional:-->\r
               <urn2:issuerFormat>?</urn2:issuerFormat>\r
            </urn2:samlIssuer>\r
            <!--Zero or more repetitions:-->\r
            <urn2:samlSubjectConfirmations>\r
               <urn2:method>?</urn2:method>\r
               <!--Optional:-->\r
               <urn2:subjectCondition>\r
                  <urn2:notBefore>?</urn2:notBefore>\r
                  <urn2:notOnOrAfter>?</urn2:notOnOrAfter>\r
               </urn2:subjectCondition>\r
               <!--Optional:-->\r
               <urn2:recipient>?</urn2:recipient>\r
               <!--Optional:-->\r
               <urn2:inResponseTo>?</urn2:inResponseTo>\r
               <!--Optional:-->\r
               <urn2:address>?</urn2:address>\r
            </urn2:samlSubjectConfirmations>\r
            <!--Optional:-->\r
            <urn2:messageId>?</urn2:messageId>\r
            <!--Zero or more repetitions:-->\r
            <urn2:relatesToList>?</urn2:relatesToList>\r
            <!--Optional:-->\r
            <urn2:implementsSpecVersion>?</urn2:implementsSpecVersion>\r
            <!--Optional:-->\r
            <urn2:transactionTimeout>-1</urn2:transactionTimeout>\r
            <!--Optional:-->\r
            <urn2:keepAlive>?</urn2:keepAlive>\r
            <!--Zero or more repetitions:-->\r
            <urn2:CONNECTCustomHttpHeaders>\r
               <urn2:headerName>?</urn2:headerName>\r
               <urn2:headerValue>?</urn2:headerValue>\r
            </urn2:CONNECTCustomHttpHeaders>\r
         </urn:assertion>\r
         <!--Optional:-->\r
         <urn:NhinTargetCommunities>\r
            <!--1 or more repetitions:-->\r
            <urn2:nhinTargetCommunity>\r
               <urn2:homeCommunity>\r
                  <!--Optional:-->\r
                  <urn2:description>?</urn2:description>\r
                  <urn2:homeCommunityId>?</urn2:homeCommunityId>\r
                  <!--Optional:-->\r
                  <urn2:name>?</urn2:name>\r
               </urn2:homeCommunity>\r
               <!--Optional:-->\r
               <urn2:list>?</urn2:list>\r
               <!--Optional:-->\r
               <urn2:region>?</urn2:region>\r
            </urn2:nhinTargetCommunity>\r
            <!--Optional:-->\r
            <urn2:useSpecVersion>?</urn2:useSpecVersion>\r
            <!--Optional:-->\r
            <urn2:exchangeName>?</urn2:exchangeName>\r
         </urn:NhinTargetCommunities>\r
      </urn:RespondingGateway_PatientLocationQueryRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:entitypatientlocationquery:RespondingGateway_PatientLocationQueryRequestMessage"/></con:call></con:operation></con:interface><con:testSuite name="g1" id="ecf5915f-e009-4f02-8561-b161f3a78e77"><con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Req" searchProperties="true" id="7e685188-254a-4e21-9f18-98674d0f4a82">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="1d350e63-03ba-4ec6-be9f-800424753cd7">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="82629046-1237-469a-a73f-1bc22dade2c4">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Req" type="request" id="bb127108-2de3-48c0-8524-4be0016f3b41">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncRequest_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncRequest</con:operation>
          <con:request incomingWss="" name="Doc Submission Deferred Req" outgoingWss="" useWsAddressing="true" wssPasswordType="" id="6acb2156-0237-4fcc-abe5-b4d013fb398f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Submission Deferred Req">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->
  
               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList> 

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="9b296a96-24aa-4b51-b089-cca064f2f541"/>
            <con:assertion type="SOAP Fault Assertion" id="a300ee8d-4b52-4644-ab77-2d941bb2a684"/>
            <con:assertion name="Match content of [@status]" type="XPath Match" id="4cbfbfa6-51c5-49a9-87a6-ca2190a394b4">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
							//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:RequestAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="82c3d04e-e99f-41a2-b11d-285d7805f548">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request:ProvideAndRegisterDocumentSet-bAsyncRequest_RequestMessage" generateMessageId="true" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="ddba1ffe-374b-448f-82cf-1032f85869c2">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="92119199-812d-4282-9182-b3f3e4ebac54">
        <con:settings/>
        <con:config>
          <script>if ( nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if ( nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="16d5f0cf-e7f2-4d72-93f2-efb7632593dc">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for Human Requestor details
if (!parsedXmlMessage.ActiveParticipant[0].UserID.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

// ParticipantObjectIdentification Patient details
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
// check for  ParticipantObjectIdentification Submission Set details
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	assert(!node.@ParticipantObjectID.isEmpty())
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	
		assert(!node.@ParticipantObjectIDTypeCode.isEmpty())		 
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="b4d5e62a-4143-42ce-929b-4d6a71018598">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
    	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="8d5104a8-b623-4cf7-8e87-37e6cc70f97f">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:33:23Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:23:23</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:23:23Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Resp" searchProperties="true" id="28f122a1-cdca-487c-ba68-f9d985f97826">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="ff672c94-d97b-4054-abe8-8247f6508a8a">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="31429a16-b3d7-4402-a537-61a94fe8686a">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Resp" type="request" id="2849140e-e4a5-48ff-8d87-093fef199d05">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncResponse_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncResponse</con:operation>
          <con:request name="Doc Submission Deferred Resp" id="97c9c4e7-a5b9-4333-81ac-96ae15b32ee5">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
   <soap:Header/>
   <soap:Body>
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
               <urn1:prefix>Ms.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>?addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                     <!--Zero or more repetitions:-->
                     <urn1:translation/>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Karl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>?</urn1:prefix>
                  <urn1:suffix>?</urn1:suffix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <!--Optional:-->
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy notes</urn1:originalText>
               <!--Zero or more repetitions:-->
               <urn1:translation/>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <!--Optional:-->
                     <urn1:version>2.0</urn1:version>
                     <!--Optional:-->
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <!--Optional:-->
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <!--Optional:-->
                     <urn1:conditions>
                        <!--Optional:-->
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <!--Optional:-->
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <!--Zero or more repetitions:-->
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <!--Zero or more repetitions:-->
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:721645965035</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:146207300753</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:783710993742</urn1:signatureValue>
            </urn1:samlSignature>
            <!--Optional:-->
            <urn1:samlIssuer>
               <!--Optional:-->
               <urn1:issuer>?</urn1:issuer>
               <!--Optional:-->
               <urn1:issuerFormat>?</urn1:issuerFormat>
            </urn1:samlIssuer>
            <!--Optional:-->
            <urn1:messageId>?</urn1:messageId>
            <!--1 or more repetitions:-->
           <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn:RegistryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" requestId="?"><!--Optional:-->
            <urn2:ResponseSlotList>
               <!--Zero or more repetitions:-->
               <urn3:Slot name="?" slotType="?">
                  <urn3:ValueList>
                     <urn3:Value>?</urn3:Value>
                  </urn3:ValueList>
               </urn3:Slot>
            </urn2:ResponseSlotList>
            <!--Optional:-->
            <urn2:RegistryErrorList highestSeverity="?">
               <!--1 or more repetitions:-->
               <urn2:RegistryError codeContext="?" errorCode="?" severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" location="?">?</urn2:RegistryError>
            </urn2:RegistryErrorList>
         </urn:RegistryResponse>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="2b1c7645-3e53-43ec-a6fd-8b92b6fd2da4"/>
            <con:assertion type="Schema Compliance" id="d6acd771-c118-4c6a-a822-0425a2a592e2">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="3381c947-fc64-4c85-b74f-ef5be747b506"/>
            <con:assertion type="XPath Match" id="6ebb7b59-45a2-4219-968e-43d324bbb223">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
					//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:ResponseAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="2655acf7-3273-40f1-b504-eac31b477872">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="8d894511-06da-4f8c-b281-7637f7fe3c56">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="f461b706-ef06-4808-ac24-f04f5a46cbc8">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound =  sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	  
	   	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
   }
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="02394526-7d20-40bd-877b-122284e3cc05">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound   = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
  }
}



nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="31d18e7e-9a00-4a25-b219-2bb97588ad0e">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:34:19Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:24:19</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:24:19Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission" searchProperties="true" id="bfb21e63-366d-4679-9fe6-33293702838f">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="cecb38d3-259e-439f-8344-20deb68e3650">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="8821658b-299c-4e4d-8af5-d37955cff148">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission" type="request" id="efed7670-fb06-4951-958e-4af171f6007f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDR_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-b</con:operation>
          <con:request incomingWss="" name="Doc Submission" outgoingWss="" wssPasswordType="" id="09886b09-6a6f-4b37-b9e6-8fb42749a919">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Submission">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->
  
               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList> 

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="ba128bc3-c9e4-4de3-9601-91e3fc940355"/>
            <con:assertion type="SOAP Fault Assertion" id="998f3460-0291-4c6a-9aac-9ed47b6441f9"/>
            <con:assertion type="XPath Match" id="a140b353-3943-421c-bc0a-5c071893268b">
              <con:configuration>
                <path>declare namespace ns11='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
							//ns11:RegistryResponse[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="2c244ed8-97af-4659-8ea0-54e589839082">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{urn:gov:hhs:fha:nhinc:nhincentityxdr}ProvideAndRegisterDocumentSet-b" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="a0e49006-b8f9-4dd1-a20a-cf3a010ddbd9">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="d9e498c1-9552-498c-baa1-0ff26cf9d1ff">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="c65b1955-2680-4452-97b4-e1805471b86b">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="98cc9038-7c38-4890-be5e-a7dbbfbccbc6">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="93f8c3e7-f021-4d36-b014-7081891b75ad">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:34:58Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>SubSetID_UniqueID01</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:24:58</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:24:58Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Data Submission" searchProperties="true" id="bfb21e63-366d-4679-9fe6-33293702838f">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="cecb38d3-259e-439f-8344-20deb68e3650">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="c2a47bc6-4865-49df-8122-d65b308a1046">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Data Submission" type="request" id="efed7670-fb06-4951-958e-4af171f6007f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDS_Binding</con:interface>
          <con:operation>RegisterDocumentSet-b</con:operation>
          <con:request incomingWss="" name="Doc Data Submission" outgoingWss="" wssPasswordType="" id="09886b09-6a6f-4b37-b9e6-8fb42749a919">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/Gateway/DocumentDataSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Data Submission">
      <urn:RespondingGateway_RegisterDocumentSetRequest>
      <urn:assertion>
        <urn1:messageId>${#Project#messageID}</urn1:messageId>
        <urn1:address>
          <urn1:addressType>
            <urn1:code>AddrCode</urn1:code>
            <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>AddrCode</urn1:displayName>
            <urn1:originalText>AddrCode</urn1:originalText>
          </urn1:addressType>
          <urn1:city>AddrCity</urn1:city>
          <urn1:country>AddrCountry</urn1:country>
          <urn1:state>AddrState</urn1:state>
          <urn1:streetAddress>AddrStreet</urn1:streetAddress>
          <urn1:zipCode>AddrZip</urn1:zipCode>
        </urn1:address>
        <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
        <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
        <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
        <urn1:haveSignature>false</urn1:haveSignature>
        <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
        <urn1:homeCommunity>
          <urn1:description>${#Project#LocalHCDescription}</urn1:description>
          <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
          <urn1:name>${#Project#LocalHCDescription}</urn1:name>
        </urn1:homeCommunity>
        <urn1:personName>
          <urn1:familyName>Smith</urn1:familyName>
          <urn1:givenName>Sandy</urn1:givenName>
          <urn1:nameType>
            <urn1:code>nameCode</urn1:code>
            <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>nameCode</urn1:displayName>
            <urn1:originalText>nameCode</urn1:originalText>
          </urn1:nameType>
          <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
          <urn1:fullName>Sandy S. Smith</urn1:fullName>
        </urn1:personName>
        <urn1:phoneNumber>
          <urn1:areaCode>321</urn1:areaCode>
          <urn1:countryCode>1</urn1:countryCode>
          <urn1:extension>5436</urn1:extension>
          <urn1:localNumber>253-6849</urn1:localNumber>
          <urn1:phoneNumberType>
            <urn1:code>phoneCode</urn1:code>
            <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>phoneCode</urn1:displayName>
            <urn1:originalText>phoneCode</urn1:originalText>
          </urn1:phoneNumberType>
        </urn1:phoneNumber>
        <urn1:secondWitnessAddress>
          <urn1:addressType>
            <urn1:code>AddrCode</urn1:code>
            <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>AddrCode</urn1:displayName>
            <urn1:originalText>AddrCode</urn1:originalText>
          </urn1:addressType>
          <urn1:city>Addr2City</urn1:city>
          <urn1:country>Addr2Country</urn1:country>
          <urn1:state>Addr2State</urn1:state>
          <urn1:streetAddress>Addr2Street</urn1:streetAddress>
          <urn1:zipCode>Addr2Zip</urn1:zipCode>
        </urn1:secondWitnessAddress>
        <urn1:secondWitnessName>
          <urn1:familyName>Smith</urn1:familyName>
          <urn1:givenName>Sammy</urn1:givenName>
          <urn1:nameType>
            <urn1:code>nameCode</urn1:code>
            <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>nameCode</urn1:displayName>
            <urn1:originalText>nameCode</urn1:originalText>
          </urn1:nameType>
          <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
          <urn1:fullName>Sammy S. Smith</urn1:fullName>
        </urn1:secondWitnessName>
        <urn1:secondWitnessPhone>
          <urn1:areaCode>321</urn1:areaCode>
          <urn1:countryCode>1</urn1:countryCode>
          <urn1:extension>5424</urn1:extension>
          <urn1:localNumber>542-6823</urn1:localNumber>
          <urn1:phoneNumberType>
            <urn1:code>phoneCode</urn1:code>
            <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>phoneCode</urn1:displayName>
            <urn1:originalText>phoneCode</urn1:originalText>
          </urn1:phoneNumberType>
        </urn1:secondWitnessPhone>
        <urn1:SSN>253-98-7546</urn1:SSN>
        <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
        <urn1:witnessAddress>
          <urn1:addressType>
            <urn1:code>addrCode</urn1:code>
            <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>addrCode</urn1:displayName>
            <urn1:originalText>addrCode</urn1:originalText>
          </urn1:addressType>
          <urn1:city>Burnell</urn1:city>
          <urn1:country>USA</urn1:country>
          <urn1:state>FL</urn1:state>
          <urn1:streetAddress>825 North</urn1:streetAddress>
          <urn1:zipCode>32184</urn1:zipCode>
        </urn1:witnessAddress>
        <urn1:witnessName>
          <urn1:familyName>Smith</urn1:familyName>
          <urn1:givenName>Scott</urn1:givenName>
          <urn1:nameType>
            <urn1:code>nameCode</urn1:code>
            <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>nameCode</urn1:displayName>
            <urn1:originalText>nameCode</urn1:originalText>
          </urn1:nameType>
          <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
          <urn1:fullName>Scott S. Smith</urn1:fullName>
        </urn1:witnessName>
        <urn1:witnessPhone>
          <urn1:areaCode>321</urn1:areaCode>
          <urn1:countryCode>1</urn1:countryCode>
          <urn1:extension>8432</urn1:extension>
          <urn1:localNumber>985-2239</urn1:localNumber>
          <urn1:phoneNumberType>
            <urn1:code>phoneCode</urn1:code>
            <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
            <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>phoneCode</urn1:displayName>
            <urn1:originalText>phoneCode</urn1:originalText>
          </urn1:phoneNumberType>
        </urn1:witnessPhone>
        <urn1:userInfo>
          <urn1:personName>
            <urn1:familyName>Skagerberg</urn1:familyName>
            <urn1:givenName>Karl</urn1:givenName>
            <urn1:nameType>
              <urn1:code>nameCode</urn1:code>
              <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
              <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
              <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
              <urn1:displayName>nameCode</urn1:displayName>
              <urn1:originalText>nameCode</urn1:originalText>
            </urn1:nameType>
            <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
            <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
          </urn1:personName>
          <urn1:userName>kskagerb</urn1:userName>
          <urn1:org>
            <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
            <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
            <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
          </urn1:org>
          <urn1:roleCoded>
            <urn1:code>307969004</urn1:code>
            <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
            <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
            <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
            <urn1:displayName>Public Health</urn1:displayName>
            <urn1:originalText>Public Health</urn1:originalText>
          </urn1:roleCoded>
        </urn1:userInfo>
        <urn1:authorized>true</urn1:authorized>
        <urn1:purposeOfDisclosureCoded>
          <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
          <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
          <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
          <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
          <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
          <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
        </urn1:purposeOfDisclosureCoded>
        <urn1:samlAuthnStatement>
          <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
          <urn1:sessionIndex>987</urn1:sessionIndex>
          <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
          <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
          <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
        </urn1:samlAuthnStatement>
        <urn1:samlAuthzDecisionStatement>
          <urn1:decision>Permit</urn1:decision>
          <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
          <urn1:action>TestSaml</urn1:action>
          <urn1:evidence>
            <urn1:assertion>
              <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
              <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
              <urn1:version>2.0</urn1:version>
              <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
              <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
              <urn1:conditions>
                <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
              </urn1:conditions>
              <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
              <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
            </urn1:assertion>
          </urn1:evidence>
        </urn1:samlAuthzDecisionStatement>
      </urn:assertion>
      <urn:nhinTargetCommunities>
        <urn1:nhinTargetCommunity>
          <urn1:homeCommunity>
            <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
            <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
            <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
          </urn1:homeCommunity>
        </urn1:nhinTargetCommunity>
      </urn:nhinTargetCommunities>
      <urn:RegisterDocumentSetRequest>
        <urn2:SubmitObjectsRequest id="123" comment="commet">
          <!--Optional:-->
          <urn4:RegistryObjectList>
            <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
              <urn4:Slot name="creationTime">
                <urn4:ValueList>
                  <urn4:Value>20051224</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Slot name="languageCode">
                <urn4:ValueList>
                  <urn4:Value>en-us</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Slot name="serviceStartTime">
                <urn4:ValueList>
                  <urn4:Value>200412230800</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Slot name="serviceStopTime">
                <urn4:ValueList>
                  <urn4:Value>200412230801</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Slot name="sourcePatientId">
                <urn4:ValueList>
                  <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Slot name="sourcePatientInfo">
                <urn4:ValueList>
                  <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                  <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                  <urn4:Value>PID-7|19560527</urn4:Value>
                  <urn4:Value>PID-8|M</urn4:Value>
                  <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Name>
                <urn4:LocalizedString value="Physical"/>
              </urn4:Name>
              <urn4:Description/>
              <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                <urn4:Slot name="authorPerson">
                  <urn4:ValueList>
                    <urn4:Value>Gerald Smitty</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorInstitution">
                  <urn4:ValueList>
                    <urn4:Value>Cleveland Clinic</urn4:Value>
                    <urn4:Value>Parma Community</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorRole">
                  <urn4:ValueList>
                    <urn4:Value>Attending</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorSpecialty">
                  <urn4:ValueList>
                    <urn4:Value>Orthopedic</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
              </urn4:Classification>
              <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="History and Physical"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="Clinical-Staff"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="Outpatient"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="General Medicine"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>LOINC</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                <urn4:Name>
                  <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                </urn4:Name>
              </urn4:ExternalIdentifier>
              <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                <urn4:Name>
                  <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                </urn4:Name>
              </urn4:ExternalIdentifier>
            </urn4:ExtrinsicObject>
            <urn4:RegistryPackage id="SubmissionSet01">
              <urn4:Slot name="submissionTime">
                <urn4:ValueList>
                  <urn4:Value>20041225235050</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
              <urn4:Name>
                <urn4:LocalizedString value="Physical"/>
              </urn4:Name>
              <urn4:Description>
                <urn4:LocalizedString value="Annual physical"/>
              </urn4:Description>
              <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                <urn4:Slot name="authorPerson">
                  <urn4:ValueList>
                    <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorInstitution">
                  <urn4:ValueList>
                    <urn4:Value>Cleveland Clinic</urn4:Value>
                    <urn4:Value>Berea Community</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorRole">
                  <urn4:ValueList>
                    <urn4:Value>Purn4ary Surgon</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Slot name="authorSpecialty">
                  <urn4:ValueList>
                    <urn4:Value>Orthopedic</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
              </urn4:Classification>
              <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                <urn4:Slot name="codingScheme">
                  <urn4:ValueList>
                    <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                  </urn4:ValueList>
                </urn4:Slot>
                <urn4:Name>
                  <urn4:LocalizedString value="History and Physical"/>
                </urn4:Name>
              </urn4:Classification>
              <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="SubSetID_UniqueID01">
                <urn4:Name>
                  <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                </urn4:Name>
              </urn4:ExternalIdentifier>
              <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                <urn4:Name>
                  <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                </urn4:Name>
              </urn4:ExternalIdentifier>
              <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                <urn4:Name>
                  <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                </urn4:Name>
              </urn4:ExternalIdentifier>
            </urn4:RegistryPackage>
            <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
            <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
              <urn4:Slot name="SubmissionSetStatus">
                <urn4:ValueList>
                  <urn4:Value>Original</urn4:Value>
                </urn4:ValueList>
              </urn4:Slot>
            </urn4:Association>
          </urn4:RegistryObjectList>
        </urn2:SubmitObjectsRequest>         
      </urn:RegisterDocumentSetRequest>
    </urn:RespondingGateway_RegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="ba128bc3-c9e4-4de3-9601-91e3fc940355"/>
            <con:assertion type="SOAP Fault Assertion" id="998f3460-0291-4c6a-9aac-9ed47b6441f9"/>
            <con:assertion type="XPath Match" id="a140b353-3943-421c-bc0a-5c071893268b">
              <con:configuration>
                <path>declare namespace ns11='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
							//ns11:RegistryResponse[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="2c244ed8-97af-4659-8ea0-54e589839082">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{urn:gov:hhs:fha:nhinc:nhincentityxdr}ProvideAndRegisterDocumentSet-b" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="dc590e6f-2766-47fa-bb8f-a1da8efa7ee3">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="d9e498c1-9552-498c-baa1-0ff26cf9d1ff">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocDataSubmission', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocDataSubmission', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="bd4ebfca-25a7-4b30-881b-1267ee25998a">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocDataSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocDataSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="8b1fe034-dbc4-4758-a389-e77edc64a82f">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocDataSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocDataSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocDataSubmission',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="096f10a5-88fc-4b56-8621-c771b5a4ef40">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentDataSubmissionAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentDataSubmission/1_0/DocumentRegistryXDS_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentDataSubmission/1_0/DocumentRegistryXDS_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:35:41Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-42</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>SubSetID_UniqueID01</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:25:41</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:25:41Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Req" searchProperties="true" id="722d7a11-28b2-47ff-93a2-1393fc42abb3">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="31f6c58e-4b81-438b-8ce2-52f5cdf834cf">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Clear Audit Logs" id="1a1e1543-4db4-4317-838c-41c6e010284f">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Req" type="request" id="0c821937-6034-4309-8285-07b913f76725">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncReqBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncReq</con:operation>
          <con:request name="Patient Discovery Deferred Req" useWsAddressing="true" id="28055db0-7781-4de9-b606-fc23bc78ea47">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery Deferred Req">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#RemoteHCID}" extension="-abd3453dcd24wkkks545"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#LocalPatientID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:address>            
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>            
            <urn1:authorized>authorized</urn1:authorized>
            <!--Optional:-->
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="a1d16356-5d1d-41a3-9847-56b980c7b041"/>
            <con:assertion type="SOAP Fault Assertion" id="7f5e01e6-aee7-4f65-8b6a-2e8a403c62ea"/>
            <con:assertion name="Verify Receiver" type="XPath Match" id="ecb6174e-085c-4f0f-a365-9ff760ffefa6">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:receiver[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>1.1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Sender" type="XPath Match" id="ee9af3f0-d36c-412c-85cb-d1951bc5d5b1">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:sender[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>2.2</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Message" type="XPath Match" id="0ee20a37-df47-40a2-b406-9876c231fcd6">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:acknowledgement[1]/ns3:acknowledgementDetail[1]/ns3:text[1]/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify RelatesTo" type="XPath Match" id="b4da8ba5-95c5-41ec-8f56-3ba03cef3a95">
              <con:configuration>
                <path>declare namespace ns1='http://www.w3.org/2005/08/addressing';
							//ns1:RelatesTo[1]/text()</path>
                <content>uuid:6666666666.66666.666.66</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="7dd2dce1-54ae-4cdc-81a1-1d0fb0c93366">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq:ProcessPatientDiscoveryAsyncReqAsyncRequest" addDefaultTo="true" messageID="uuid:6666666666.66666.666.66" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="f4d843d0-8850-43d4-818f-d41429fe352d">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="a581ace1-eeb4-477c-8344-bd95926a0eaf">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="ec6156ef-06e4-4e5d-80bd-53c40615a1a6">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="32f33473-b7bc-40b5-94a4-60d860dcdf00">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound  = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }

     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty()){
	// Patient details will not be populated for PD Deferred 
 }
 
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="f13cb698-36f9-4bb7-8ddf-308d89486e01">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncReq</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:45:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:35:36</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:35:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Resp" searchProperties="true" id="1bb2218d-381d-4724-8ba6-a019f2532778">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="86fbb477-996a-4279-8bbf-e6b6b86b15e5">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Clear Audit Logs" id="cbcbb7e3-d9c3-4d94-9254-8e08ca969529">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Resp" type="request" id="2c897726-977c-47f6-be07-e3ce1977cd53">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncRespBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncResp</con:operation>
          <con:request name="Patient Discovery Deferred Resp" id="cb980336-8447-4587-adfe-c052e429865f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header xmlns:add="SoapUI_Test/ValidationSuite/2-EndToEndSelfTest-soapui-project.xml">
      <add:Action>urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp:ProcessPatientDiscoveryAsyncRespAsyncRequest</add:Action>
      <add:MessageID>uuid:12bcfc1e-f422-4d1d-af99-ff83d050313e</add:MessageID>
      <add:RelatesTo>uuid:6666666666.66666.666.66</add:RelatesTo>
      <add:To>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</add:To>
   </soap:Header>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery Deferred Resp">
      <urn:RespondingGateway_PRPA_IN201306UV02Request>
         <urn:PRPA_IN201306UV02 ITSVersion="XML_1.0">
            <urn:id root="2.2" extension="-5a3e95b1:11d1fa33d45:-8e45"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <!--1 or more repetitions:-->
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:code codeSystem="2.16.840.1.113883.1.6" code="PRPA_TE201306UV"/>
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="2.2"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:subject typeCode="SUBJ">
                  <urn:registrationEvent classCode="REG" moodCode="EVN">
                     <urn:id nullFlavor="NA"/>
                     <urn:statusCode code="active"/>
                     <urn:subject1 typeCode="SBJ">
                        <urn:patient classCode="PAT">
                           <urn:id extension="D123402" root="2.2"/>
                           <urn:statusCode code="SD"/>
                           <urn:patientPerson>
                              <urn:name>
                                 <urn:family partType="FAM">Younger</urn:family>
                                 <urn:given partType="GIV">Gallow</urn:given>
                              </urn:name>
                              <urn:administrativeGenderCode code="M"/>
                              <urn:birthTime value="19630804"/>
                              <urn:addr>
                                 <urn:city>LEESBURG</urn:city>
                                 <urn:state>VA</urn:state>
                                 <urn:postalCode>20176</urn:postalCode>
                              </urn:addr>
                           </urn:patientPerson>
                           <urn:providerOrganization determinerCode="" classCode="">
                              <urn:id root="2.2"/>
                              <urn:contactParty xsi:nil="true" classCode="CON" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </urn:providerOrganization>
                        </urn:patient>
                     </urn:subject1>
                     <urn:custodian typeCode="">
                        <urn:assignedEntity classCode="">
                           <urn:id root="2.2"/>
                        </urn:assignedEntity>
                     </urn:custodian>
                  </urn:registrationEvent>
               </urn:subject>
               <urn:queryAck>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:queryResponseCode code="OK"/>
                  <urn:resultTotalQuantity value="1"/>
                  <urn:resultCurrentQuantity value="1"/>
                  <urn:resultRemainingQuantity value="0"/>
               </urn:queryAck>
               <urn:queryByParameter>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="M"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="19630804"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectId>
                        <urn:value extension="D123401" root="1.1"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">Younger</urn:family>
                           <urn:given partType="GIV">Gallow</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201306UV02>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>Test HCID1</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>HCID1</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>            
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201306UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="3ef84b36-dab7-4fe0-8bcb-9fa6fe673f88"/>
            <con:assertion type="SOAP Fault Assertion" id="58c1e9d5-c728-4d68-8a65-96cc1d2ef366"/>
            <con:assertion name="Match content of [typeCode/@code]" type="XPath Match" id="ae63ed07-7e26-44c1-8543-4eba448a0690">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:typeCode[1]/@code</path>
                <content>CA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Match content of [acknowledgementDetail/text/text()]" type="XPath Match" id="d815a09b-94fc-49c7-b56e-90b7f8091413">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:acknowledgementDetail[1]/ns2:text/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="09316e81-c52e-44d3-a8f3-4aca7df11236">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="9bb84fab-fbf5-43e8-a28a-ae877d1f96a1">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="82f1d25c-add6-4cf8-8851-9522bf94bc4b">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK" id="e9482e5f-86f4-4495-bd04-5bfad369c8e1">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
//check for Query Parameters ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="9910a092-96e6-4f40-849e-0fa2f2087386">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

//assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
//check for Query Parameter ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="117e47d7-0182-4817-abc8-49f73456a7d2">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncResp</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:36:33Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:26:33</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:26:33Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery" searchProperties="true" id="c7e1d2d1-838b-4836-afa3-1c655cf5c329">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="78b0ddbb-e77a-451d-8ebf-c37a97b89ed8">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Clear Audit Logs" id="ec64be14-f23f-4cc7-b284-a0a5411860b5">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Up PassThru" id="22829d23-344f-4e67-add1-519774f6d335">
        <con:settings/>
        <con:config>
          <script>log.info "Setting Patient Discovery Adapter to unsecured";
def dir = context.findProperty('GatewayPropDir');
nhinc.FileUtils.backupFile(dir, "PatientDiscoveryProxyConfig.xml", log);
def alias = 'adapterpatientdiscovery'
def aliasName= 'adapterpatientdiscoverywssecured';
def replaceAlias = 'adapterpatientdiscoverywsunsecured';

nhinc.FileUtils.updateSpringConfig(dir, "PatientDiscoveryProxyConfig.xml",
	alias, aliasName, replaceAlias, log);
/**
def pdConfigFile = new File(dir + "/" + "PatientDiscoveryProxyConfig.xml");
def pdConfigFileNew = new File(dir + "/" + "PatientDiscoveryProxyConfig.xml.NEW");
pdConfigFile.eachLine() {
	line ->
	if(line.contains(alias)) {
		pdConfigFileNew &lt;&lt; replaceAlias + ln;
	} else {
		pdConfigFileNew &lt;&lt; line + ln;
	}
}

pdConfigFile.delete();
pdConfigFileNew.renameTo(new File(dir + "/" + "PatientDiscoveryProxyConfig.xml"));
**/
log.info "Modifying internalExchangeInfo for adapterpatientdiscovery mock."

nhinc.FileUtils.createOrUpdateConnection("internalExchangeInfo.xml", dir, "1.1",
	"adapterpatientdiscovery", "http://localhost:1720/MockPDAdapter", "2.0",
	log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery" type="request" id="10de75b4-417a-4055-9326-26140810ca1c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:request name="Patient Discovery" id="5d85b2ba-801c-46db-bd47-16066b4cd339">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscovery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#LocalHCID}" extension="${#TestCase#queryId.@extension}"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#SubjectID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>${#Project#City}</urn1:city>
               <urn1:country>${#Project#Country}</urn1:country>
               <urn1:state>${#Project#State}</urn1:state>
               <urn1:streetAddress>${#Project#StreetAddress}</urn1:streetAddress>
               <urn1:zipCode>${#Project#ZipCode}</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>${#Project#DOB}</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>${#Project#FamilyName}</urn1:familyName>
               <urn1:givenName>${#Project#GivenName}</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>${#Project#SSN}</urn1:SSN>
            <urn1:uniquePatientId>${#Project#UniquePatientId}</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>            
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTH</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="bea4831e-b970-4a4a-8155-43eda0ffdba9"/>
            <con:assertion disabled="true" type="Schema Compliance" id="b108e16b-754a-4cc4-a5a4-7537c166f1d5">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="930f126f-5b82-451d-80a1-500a45bf0f35"/>
            <con:assertion name="Check for existance of [ns3:controlActProcess]" type="XPath Match" id="00df1ca6-c482-43db-bf26-3671495d6ac8">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
				exists( //ns3:PRPA_IN201306UV02/ns3:controlActProcess)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Given Name XPath Match" type="XPath Match" id="94a53985-c0e2-436f-af0a-c6d6e197bb1c">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:given[1]</path>
                <content>${#Project#GivenName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Family Name XPath Match" type="XPath Match" id="35114777-b644-420e-befb-4faa3199ace4">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:family[1]</path>
                <content>${#Project#FamilyName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="mockresponse" name="Mock Response" id="1236a3f0-83b7-4210-8b40-29226f0a22ad">
        <con:settings/>
        <con:config xsi:type="con:MockResponseStep" startStep="Patient Discovery" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdapterPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:path>/MockPDAdapter</con:path>
          <con:port>1720</con:port>
          <con:response id="d4766a35-ae31-4714-8a75-c61bd5f3707c">
            <con:settings/>
            <con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3">
   <soap:Header/>
   <soap:Body>
      <PRPA_IN201306UV02 ITSVersion="XML_1.0" xmlns="urn:hl7-org:v3" xmlns:ns2="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ns3="http://www.w3.org/2005/08/addressing" xmlns:ns4="urn:gov:hhs:fha:nhinc:common:patientcorrelationfacade">
         <id root="1.1" extension="13318247:13b4e0b839b:-7ff4"/>
         <creationTime value="20121129212833"/>
         <interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <receiver typeCode="RCV">
            <device classCode="DEV" determinerCode="INSTANCE">
               <id root="1.2.345.678.999"/>
               <asAgent classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="1.1"/>
                  </representedOrganization>
               </asAgent>
            </device>
         </receiver>
         <sender typeCode="SND">
            <device classCode="DEV" determinerCode="INSTANCE">
               <id root="2.2"/>
               <asAgent classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="2.2"/>
                  </representedOrganization>
               </asAgent>
            </device>
         </sender>
         <acknowledgement>
            <typeId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <typeCode code="AA"/>
            <targetMessage xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </acknowledgement>
         <controlActProcess classCode="CACT" moodCode="EVN">
            <code code="PRPA_TE201306UV" codeSystem="2.16.840.1.113883.1.6"/>
            <subject typeCode="SUBJ">
               <registrationEvent classCode="REG" moodCode="EVN">
                  <id nullFlavor="NA"/>
                  <statusCode code="active"/>
                  <subject1 typeCode="SBJ">
                     <patient classCode="PAT">
                        <id root="1.1" extension="D123401"/>
                        <statusCode code="SD"/>
                        <patientPerson classCode="PSN" determinerCode="INSTANCE">
                           <name>
                              <family partType="FAM">Younger</family>
                              <given partType="GIV">Gallow</given>
                           </name>
                           <telecom value="tel:+1-888-555-1234"/>
                           <administrativeGenderCode code="M"/>
                           <birthTime value="19630804"/>
                           <addr>
                              <city>LEESBURG</city>
                              <state>VA</state>
                              <postalCode>20176</postalCode>
                           </addr>
                           <asOtherIDs classCode="SD">
                              <id root="2.16.840.1.113883.4.1" extension="999123401"/>
                              <scopingOrganization classCode="ORG" determinerCode="INSTANCE">
                                 <id root="2.16.840.1.113883.4.1"/>
                              </scopingOrganization>
                           </asOtherIDs>
                        </patientPerson>
                        <providerOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id root="1.1"/>
                           <contactParty xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                        </providerOrganization>
                        <subjectOf1>
                           <queryMatchObservation classCode="CASE" moodCode="EVN">
                              <code code="IHE_PDQ"/>
                              <value xsi:type="INT" value="100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </queryMatchObservation>
                        </subjectOf1>
                     </patient>
                  </subject1>
                  <custodian typeCode="CST">
                     <assignedEntity classCode="ASSIGNED">
                        <id root="1.1"/>
                        <code code="NotHealthDataLocator" codeSystem="1.3.6.1.4.1.19376.1.2.27.2"/>
                     </assignedEntity>
                  </custodian>
               </registrationEvent>
            </subject>
            <queryAck>
               <queryId root="1.1" extension="-abd3453dcd24wkkks545"/>
               <queryResponseCode code="OK"/>
            </queryAck>
            <queryByParameter>
               <queryId root="1.1" extension="-abd3453dcd24wkkks545"/>
               <statusCode code="new"/>
               <responseModalityCode code="R"/>
               <responsePriorityCode code="I"/>
               <parameterList>
                  <livingSubjectAdministrativeGender>
                     <value code="M"/>
                     <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                  </livingSubjectAdministrativeGender>
                  <livingSubjectBirthTime>
                     <value value="19630804"/>
                     <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                  </livingSubjectBirthTime>
                  <livingSubjectId>
                     <value root="1.1" extension="1111"/>
                     <urn:semanticsText representation="TXT">livingSubjectId</urn:semanticsText>
                  </livingSubjectId>
                  <livingSubjectName>
                     <value>
                        <family partType="FAM">Younger</family>
                        <given partType="GIV">Gallow</given>
                     </value>
                     <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                  </livingSubjectName>
               </parameterList>
            </queryByParameter>
         </controlActProcess>
      </PRPA_IN201306UV02>
   </soap:Body>
</soap:Envelope>]]></con:responseContent>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
          </con:response>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="ab9da431-dc8a-4c49-9ac6-1bf02eba542b">
        <con:settings/>
        <con:config>
          <delay>25000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="91fb646d-64ae-45b2-83a0-8190c122bfe6">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="001c1e4f-950e-4d90-a5d5-934e31410693">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound  = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="d15143cc-d5cb-43c9-baa9-8ffbe7b8b8ca">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	    	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Responder.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
	}
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="4ab8ff91-bf85-4758-8346-d51acf1d950c">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:36:49Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>1111^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0idXJuOmdvdjpoaHM6ZmhhOm5oaW5jOmNvbW1vbjpwYXRpZW50Y29ycmVsYXRpb25mYWNhZGUiIHhtbG5zOm5zNT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query_Response.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PGxpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PHZhbHVlIHZhbHVlPSIxOTYzMDgwNCIvPjxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiLz48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgCQk8L3ZhbHVlPjxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiLz48L2xpdmluZ1N1YmplY3ROYW1lPjwvcGFyYW1ldGVyTGlzdD48L3F1ZXJ5QnlQYXJhbWV0ZXI+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:26:49</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:26:49Z</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Query" searchProperties="true" id="8271858b-0d6d-4d2f-81e5-d8591b2274ae">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="c9b5ee21-6621-44fe-b6f0-1f429f497c2a">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="update config" type="groovy" id="517a5ef2-81f6-4ab5-a12c-6d02d2217db6">
        <con:settings/>
        <con:config>
          <script>nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'), "gateway.properties", "documentQueryQuerySelf", "false", log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear Correlation Table &amp; Add Correlation" type="groovy" id="416e9943-a3d6-4611-93d9-7bfb757f04d7">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		def table = context.findProperty('PatientCorrelationTable')

		sql.execute('delete from ' + table)

		def localAA = context.findProperty( "LocalAA" )
		def localPatientID = context.findProperty("LocalPatientID")
		def remoteAA = context.findProperty( "RemoteAA" )
		def remotePatientID = context.findProperty("RemotePatientID")
		def insertSql = "insert into " + table + " (correlationId, PatientAssigningAuthorityId, PatientId, CorrelatedPatientAssignAuthId, CorrelatedPatientId) " + 
		"values (1, ?, ?, ?, ?)"
		sql.executeUpdate(insertSql, [localAA, localPatientID, remoteAA, remotePatientID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear AA Mapping Table &amp; Add Mapping" type="groovy" id="d17e483f-c701-4124-85a0-84052887ac26">
        <con:settings/>
        <con:config>
          <script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, ?, ?)"
		sql.executeUpdate(insertSql, [remoteAA, remoteHCID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Clear Audit Logs" id="f17aa145-b9f0-4f7d-bf36-d86c14abbe5a">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Query" type="request" id="bef3b45f-7008-4720-8945-372ae9c2c487">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocQueryBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayQuery</con:operation>
          <con:request name="Document Query" id="1790802b-1176-47b4-a80d-599abef82685">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocQuery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Query">
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="LeafClass" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'${#Project#DQPatientID}^^^&amp;${#Project#LocalAA}&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
         <urn2:Slot name="$XDSDocumentEntryClassCode">
            <urn2:ValueList>
                    <urn2:Value>34133-9</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryClassCodeScheme">
                  <urn2:ValueList>
                     <urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:messageId>${#Project#MessageID}</urn3:messageId>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>AddrCity</urn3:city>
               <urn3:country>AddrCountry</urn3:country>
               <urn3:state>AddrState</urn3:state>
               <urn3:streetAddress>AddrStreet</urn3:streetAddress>
               <urn3:zipCode>AddrZip</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>06/04/1959 05:21:00</urn3:dateOfBirth>
            <urn3:explanationNonClaimantSignature>Electronic</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>false</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>false</urn3:haveSignature>
            <urn3:haveWitnessSignature>false</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>${#Project#LocalHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#LocalHCDescription}</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sandy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
               <urn3:fullName>Sandy S. Smith</urn3:fullName>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5436</urn3:extension>
               <urn3:localNumber>253-6849</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Addr2City</urn3:city>
               <urn3:country>Addr2Country</urn3:country>
               <urn3:state>Addr2State</urn3:state>
               <urn3:streetAddress>Addr2Street</urn3:streetAddress>
               <urn3:zipCode>Addr2Zip</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sammy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>s</urn3:secondNameOrInitials>
               <urn3:fullName>Sammy S. Smith</urn3:fullName>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5424</urn3:extension>
               <urn3:localNumber>542-6823</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>253-98-7546</urn3:SSN>
            <urn3:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>addrCode</urn3:code>
                  <urn3:codeSystem>addrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>addrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>addrCode</urn3:displayName>
                  <urn3:originalText>addrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Burnell</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>FL</urn3:state>
               <urn3:streetAddress>825 North</urn3:streetAddress>
               <urn3:zipCode>32184</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Scott</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S.</urn3:secondNameOrInitials>
               <urn3:fullName>Scott S. Smith</urn3:fullName>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>8432</urn3:extension>
               <urn3:localNumber>985-2239</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>Skagerberg</urn3:familyName>
                  <urn3:givenName>Karl</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>nameCode</urn3:code>
                     <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                     <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                     <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                     <urn3:displayName>nameCode</urn3:displayName>
                     <urn3:originalText>nameCode</urn3:originalText>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
                  <urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
               </urn3:personName>
               <urn3:userName>kskagerberg</urn3:userName>
               <urn3:org>
                  <urn3:description>${#Project#LocalHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#LocalHCDescription}</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>307969004</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Public Health</urn3:displayName>
                  <urn3:originalText>Public Health</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PUBLICHEALTH</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:samlAuthnStatement>
               <urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
               <urn3:sessionIndex>987</urn3:sessionIndex>
               <urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
               <urn3:subjectLocalityAddress>1.1.1.1</urn3:subjectLocalityAddress>
               <urn3:subjectLocalityDNSName>connectopensource.org</urn3:subjectLocalityDNSName>
            </urn3:samlAuthnStatement>
         <urn3:samlAuthzDecisionStatement>
               <urn3:decision>Permit</urn3:decision>
               <urn3:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
               <urn3:action>TestSaml</urn3:action>
               <urn3:evidence>
                  <urn3:assertion>
                     <urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
                     <urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
                     <urn3:version>2.0</urn3:version>
                     <urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
                     <urn3:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn3:issuer>
                     <urn3:conditions>
                        <urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
                        <urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
                     </urn3:conditions>
                     <urn3:accessConsentPolicy>urn:oid:1.2.3.4</urn3:accessConsentPolicy>
                     <urn3:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn3:instanceAccessConsentPolicy>
                  </urn3:assertion>
               </urn3:evidence>
            </urn3:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn3:nhinTargetCommunity>
               <urn3:homeCommunity>
                  <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
               </urn3:homeCommunity>
            </urn3:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="34e4e5bc-a53f-4f9a-bfa6-b75cd75e4c93"/>
            <con:assertion type="Schema Compliance" id="dcab11df-5157-4401-8adf-3350dd09fc33">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="33955b6f-52c9-48f9-93b6-5768b2f1f698"/>
            <con:assertion name="DocID Match" type="GroovyScriptAssertion" id="344b0bb6-c65f-4ac7-acbd-c5202eab1284" disabled="true">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
				def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
				holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
				holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

				def documentID = context.findProperty('DQDocID')
				def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
				assert (documentID == msgDocID)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="e4f6c854-0c28-43fe-90ee-529adea9fd7e">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="6f291114-5eef-4421-8d37-d77a36023952">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="bbd78a77-0fc3-4553-bba0-b69c14a5f7d7">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	    	if(!node.@UserName.isEmpty()){	    
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	    	}
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	    	     
     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	 }
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->		
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	
	     log.info "participant object id " + node.@ParticipantObjectID    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )   
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
   	    	
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )    	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )	     
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

	 	byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   		def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
   		assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		  		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="cf21811f-3897-4017-8e54-9025f0788adb">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )      
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
		assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
     	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

		if(!node.ParticipantObjectQuery.text().isEmpty()){    
    			byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))  
   			assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		}   		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def localHCID = testRunner.testCase.testSuite.project.getPropertyValue("LocalHCID")
	 		def localHCIDWithPrefix 
	 		if(localHCID.startsWith("urn:oid:")){
	 			localHCIDWithPrefix= localHCID
	 		}
	 		else{
	 			localHCIDWithPrefix = "urn:oid:"+localHCID
	 		}
  			assert decodedData2 == localHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="47fcf87e-b9a1-4a99-81aa-ba2e663bf505">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/QueryDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--RESPONDER--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:37:56Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FullPatientID</con:name>
          <con:value>'D123401^^^&amp;amp;1.1&amp;amp;ISO'</con:value>
        </con:property>
        <con:property>
          <con:name>parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>QueryEncoding</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>UTF-8</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>urn:ihe:iti:xca:2010:homeCommunityId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxBZGhvY1F1ZXJ5UmVxdWVzdCB4bWx....</con:value>
        </con:property>
        <con:property>
          <con:name>ResponderActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:27:56</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:27:56Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Retrieve" searchProperties="true" id="aaab3ed0-71f1-4f72-83f0-cc840ec185cd">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="1bd08534-fa84-4e68-bedf-c85bb4c1b62b">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Clear Audit Logs" id="329c02ce-8923-48f8-b3e4-824fe56736e5">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Retrieve" type="request" id="224217e3-1d69-4bd2-8a34-4a6832fd39cb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocRetrieveBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayRetrieve</con:operation>
          <con:request incomingWss="" name="Document Retrieve" outgoingWss="" wssPasswordType="" id="59beeafd-ed47-4c05-aa54-038e103d4fbe">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocRetrieve}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:ihe:iti:xds-b:2007" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Retrieve">
      <urn:RespondingGateway_CrossGatewayRetrieveRequest>
         <urn1:RetrieveDocumentSetRequest>
            <urn1:DocumentRequest>
               <urn1:HomeCommunityId>urn:oid:${#Project#RemoteHCID}</urn1:HomeCommunityId>
               <urn1:RepositoryUniqueId>${#Project#DRRepoID}</urn1:RepositoryUniqueId>
               <urn1:DocumentUniqueId>${#Project#DRDocID}</urn1:DocumentUniqueId>
            </urn1:DocumentRequest>
         </urn1:RetrieveDocumentSetRequest>
         <urn:assertion>
            <urn2:messageId>${#Project#MessageID}</urn2:messageId>
            <urn2:address>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>AddrCity</urn2:city>
               <urn2:country>AddrCountry</urn2:country>
               <urn2:state>AddrState</urn2:state>
               <urn2:streetAddress>AddrStreet</urn2:streetAddress>
               <urn2:zipCode>AddrZip</urn2:zipCode>
            </urn2:address>
            <urn2:dateOfBirth>06/04/1959 05:21:00</urn2:dateOfBirth>
            <urn2:explanationNonClaimantSignature>Electronic</urn2:explanationNonClaimantSignature>
            <urn2:haveSecondWitnessSignature>false</urn2:haveSecondWitnessSignature>
            <urn2:haveSignature>false</urn2:haveSignature>
            <urn2:haveWitnessSignature>false</urn2:haveWitnessSignature>
            <urn2:homeCommunity>
               <urn2:description>${#Project#LocalHCDescription}</urn2:description>
               <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
               <urn2:name>${#Project#LocalHCDescription}</urn2:name>
            </urn2:homeCommunity>
            <urn2:personName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sandy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
               <urn2:fullName>Sandy S. Smith</urn2:fullName>
            </urn2:personName>
            <urn2:phoneNumber>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5436</urn2:extension>
               <urn2:localNumber>253-6849</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:phoneNumber>
            <urn2:secondWitnessAddress>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Addr2City</urn2:city>
               <urn2:country>Addr2Country</urn2:country>
               <urn2:state>Addr2State</urn2:state>
               <urn2:streetAddress>Addr2Street</urn2:streetAddress>
               <urn2:zipCode>Addr2Zip</urn2:zipCode>
            </urn2:secondWitnessAddress>
            <urn2:secondWitnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sammy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>s</urn2:secondNameOrInitials>
               <urn2:fullName>Sammy S. Smith</urn2:fullName>
            </urn2:secondWitnessName>
            <urn2:secondWitnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5424</urn2:extension>
               <urn2:localNumber>542-6823</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:secondWitnessPhone>
            <urn2:SSN>253-98-7546</urn2:SSN>
            <urn2:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn2:uniquePatientId>
            <urn2:witnessAddress>
               <urn2:addressType>
                  <urn2:code>addrCode</urn2:code>
                  <urn2:codeSystem>addrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>addrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>addrCode</urn2:displayName>
                  <urn2:originalText>addrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Burnell</urn2:city>
               <urn2:country>USA</urn2:country>
               <urn2:state>FL</urn2:state>
               <urn2:streetAddress>825 North</urn2:streetAddress>
               <urn2:zipCode>32184</urn2:zipCode>
            </urn2:witnessAddress>
            <urn2:witnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Scott</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S.</urn2:secondNameOrInitials>
               <urn2:fullName>Scott S. Smith</urn2:fullName>
            </urn2:witnessName>
            <urn2:witnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>8432</urn2:extension>
               <urn2:localNumber>985-2239</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:witnessPhone>
            <urn2:userInfo>
               <urn2:personName>
                  <urn2:familyName>Skagerberg</urn2:familyName>
                  <urn2:givenName>Karl</urn2:givenName>
                  <urn2:nameType>
                     <urn2:code>nameCode</urn2:code>
                     <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                     <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                     <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                     <urn2:displayName>nameCode</urn2:displayName>
                     <urn2:originalText>nameCode</urn2:originalText>
                  </urn2:nameType>
                  <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
                  <urn2:fullName>Kasrl S. Skagerberg</urn2:fullName>
               </urn2:personName>
               <urn2:userName>kskagerb</urn2:userName>
               <urn2:org>
                  <urn2:description>${#Project#LocalHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#LocalHCDescription}</urn2:name>
               </urn2:org>
               <urn2:roleCoded>
                  <urn2:code>307969004</urn2:code>
                  <urn2:codeSystem>2.16.840.1.113883.6.96</urn2:codeSystem>
                  <urn2:codeSystemName>SNOMED_CT</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>Public Health</urn2:displayName>
                  <urn2:originalText>Public Health</urn2:originalText>
               </urn2:roleCoded>
            </urn2:userInfo>
            <urn2:authorized>true</urn2:authorized>
            <urn2:purposeOfDisclosureCoded>
               <urn2:code>PUBLICHEALTH</urn2:code>
               <urn2:codeSystem>2.16.840.1.113883.3.18.7.1</urn2:codeSystem>
               <urn2:codeSystemName>nhin-purpose</urn2:codeSystemName>
               <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
               <urn2:displayName>Use or disclosure of Psychotherapy Notes</urn2:displayName>
               <urn2:originalText>Use or disclosure of Psychotherapy Notes</urn2:originalText>
            </urn2:purposeOfDisclosureCoded>
            <urn2:samlAuthnStatement>
               <urn2:authInstant>2009-04-16T13:15:39Z</urn2:authInstant>
               <urn2:sessionIndex>987</urn2:sessionIndex>
               <urn2:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn2:authContextClassRef>
               <urn2:subjectLocalityAddress>1.1.1.1</urn2:subjectLocalityAddress>
               <urn2:subjectLocalityDNSName>connectopensource.org</urn2:subjectLocalityDNSName>
            </urn2:samlAuthnStatement>
            <urn2:samlAuthzDecisionStatement>
               <urn2:decision>Permit</urn2:decision>
               <urn2:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn2:resource>
               <urn2:action>TestSaml</urn2:action>
               <urn2:evidence>
                  <urn2:assertion>
                     <urn2:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn2:id>
                     <urn2:issueInstant>2009-04-16T13:10:39.093Z</urn2:issueInstant>
                     <urn2:version>2.0</urn2:version>
                     <urn2:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn2:issuerFormat>
                     <urn2:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn2:issuer>
                     <urn2:conditions>
                        <urn2:notBefore>2009-04-16T13:10:39.093Z</urn2:notBefore>
                        <urn2:notOnOrAfter>2009-12-31T12:00:00.000Z</urn2:notOnOrAfter>
                     </urn2:conditions>
                     <urn2:accessConsentPolicy>urn:oid:1.2.3.4</urn2:accessConsentPolicy>
                     <urn2:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn2:instanceAccessConsentPolicy>
                  </urn2:assertion>
               </urn2:evidence>
            </urn2:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn2:nhinTargetCommunity>
               <urn2:homeCommunity>
                  <urn2:description>${#Project#RemoteHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#RemoteHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#RemoteHCDescription}</urn2:name>
               </urn2:homeCommunity>
            </urn2:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayRetrieveRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="06702b01-a8e2-4210-9a29-733bc7c24207"/>
            <con:assertion type="SOAP Fault Assertion" id="9dd76088-a662-447e-a054-f1713b81ee95"/>
            <con:assertion type="Schema Compliance" disabled="true" id="16218fc3-54ff-4be6-87ca-b3e5ecaf5499">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc Repository ID" type="XPath Match" id="9f7c53ce-f058-453a-a067-6d2f7782c5ca">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:RepositoryUniqueId[1]</path>
                <content>${#Project#DRRepoID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc ID" type="XPath Match" id="2921e2e6-c1ad-402f-b98f-152db8ce7867">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:DocumentUniqueId[1]</path>
                <content>${#Project#DRDocID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Document Data" type="GroovyScriptAssertion" id="ba60540a-33a2-4f20-bd28-fb1daa6af416">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
					def holder = groovyUtils.getXmlHolder( messageExchange.responseContent )
					holder.namespaces["ns"]="urn:ihe:iti:xds-b:2007"
					def docData = holder["//ns:RetrieveDocumentSetResponse[1]/ns:DocumentResponse[1]/ns:Document[1]"]
					log.info docData.toString()
					assert (docData.size() != 0)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitydocretrieve/EntityDocRetrievePortType/RespondingGateway_CrossGatewayRetrieveRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="7139b70a-755b-47fc-9c7c-a66aaa6bd161">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="96c4a100-2609-4b9a-a62c-d38f44ff3a2d">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="ba71607f-1501-4394-b35c-54f466c01336">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g1.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){
	     	//commented out until code updated to return correct value as per spec	     	
	     	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
     }	
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
         	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )	 		
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	    
      } 
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="4818d268-7e13-49de-8cd0-f3a8438252c8">
        <con:settings/>
        <con:config>
          <script><![CDATA[import java.util.regex.*
context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g1.@UserID" )
	     }
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}	
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
  			def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	  
	}
 }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="f2719af7-a9c6-4d3b-820e-5109020b8fdf">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/RetrieveDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/2_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>CorrectedRemoteHCID</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:39:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-39</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Retrieve</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>500000000^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>ihe:RepositoryUniqueId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_1.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_1.@value</con:name>
          <con:value>homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@value</con:name>
          <con:value>homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Report Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:29:00</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:29:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>auditLogStatus</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>AuditOff</con:name>
          <con:value>false</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Distribution" searchProperties="true" id="5783cde4-97f8-4dfb-bdda-ea9d97aee5d1">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="d16e6d2a-7da7-43a5-9159-339b5ca5ef1d">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Admin Distribution" type="request" id="f39baeff-efb0-4db9-a12c-87ce87f7144c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdministrativeDistribution_Binding_Soap12_g1</con:interface>
          <con:operation>SendAlertMessage</con:operation>
          <con:request name="Admin Distribution" id="0e6c3350-2012-4ec0-a125-efb4147025d3">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityAdminDist}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:emergency:EDXL:DE:1.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Admin Distribution">
      <urn:RespondingGateway_SendAlertMessage>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253987546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>${#TestCase#UserId}</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>80584001</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Psychiatrist</urn1:displayName>
                  <urn1:originalText>Psychiatrist</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PSYCHOTHERAPY</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-09-01T13:00:00.000Z</urn1:authInstant>
               <urn1:sessionIndex>mySessionIndex</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>mySubjectLocalityAddress</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>mySubjectLocalityDns</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>myAuthzDecisionStatementResource</urn1:resource>
               <urn1:action>myAuthzDecisionStatementAction</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>AuthzDecisionStatementEvidenceAssertionId</urn1:id>
                     <urn1:issueInstant>2009-09-02T14:00:00.000Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuer>CN=Mr Saml User,OU=SU,O=Mr SAML Org,L=Chantilly,ST=VA,C=US</urn1:issuer>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>urn:oid:1.2.3.4</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:243113487404</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:159355901562</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:383675305350</urn1:signatureValue>
            </urn1:samlSignature>
            </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn2:EDXLDistribution>
            <urn2:distributionID>633990682441061250</urn2:distributionID>
            <urn2:senderID>actor@2.16.840.1.113883.3.166</urn2:senderID>
            <urn2:dateTimeSent>2010-08-14T12:18:13.512375-08:00</urn2:dateTimeSent>
            <urn2:distributionStatus>Actual</urn2:distributionStatus>
            <urn2:distributionType>Update</urn2:distributionType>
            <urn2:combinedConfidentiality>Public</urn2:combinedConfidentiality>
            <!--Optional:-->
            <urn2:language>?</urn2:language>
            <!--Zero or more repetitions:-->
            <urn2:senderRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:senderRole>
            <!--Zero or more repetitions:-->
            <urn2:recipientRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:recipientRole>
            <!--Zero or more repetitions:-->
            <urn2:keyword>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:keyword>
            <!--Zero or more repetitions:-->
            <urn2:distributionReference>?</urn2:distributionReference>
            <!--Zero or more repetitions:-->
            <urn2:explicitAddress>
               <urn2:explicitAddressScheme>modified_IHEIntendedRecipient</urn2:explicitAddressScheme>
               <!--1 or more repetitions:-->
               <urn2:explicitAddressValue>^^^^^^^^^2.16.840.1.113883.3.166|0000000001</urn2:explicitAddressValue>
            </urn2:explicitAddress>
            <!--Zero or more repetitions:-->
            <urn2:targetArea>
               <!--Zero or more repetitions:-->
               <urn2:circle>?</urn2:circle>
               <!--Zero or more repetitions:-->
               <urn2:polygon>?</urn2:polygon>
               <!--Zero or more repetitions:-->
               <urn2:country>?</urn2:country>
               <!--Zero or more repetitions:-->
               <urn2:subdivision>?</urn2:subdivision>
               <!--Zero or more repetitions:-->
               <urn2:locCodeUN>?</urn2:locCodeUN>
            </urn2:targetArea>
            <!--Zero or more repetitions:-->
            <urn2:contentObject>
               <!--Optional:-->
               <urn2:contentDescription>PH Alert Message</urn2:contentDescription>
               <!--Zero or more repetitions:-->
               <urn2:contentKeyword>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:contentKeyword>
               <!--Optional:-->
               <urn2:incidentID>TEST</urn2:incidentID>
               <!--Optional:-->
               <urn2:incidentDescription>This is a test message</urn2:incidentDescription>
               <!--Zero or more repetitions:-->
               <urn2:originatorRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:originatorRole>
               <!--Zero or more repetitions:-->
               <urn2:consumerRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:consumerRole>
               <!--Optional:-->
               <urn2:confidentiality>Public</urn2:confidentiality>
               <!--You have a CHOICE of the next 2 items at this level-->
		<urn2:nonXMLContent>
                  <urn2:mimeType>application/pdf</urn2:mimeType>
                  <!--Optional:-->
                  <urn2:size>19</urn2:size>
                  <!--Optional:-->
                  <urn2:digest>?</urn2:digest>
                  <!--Optional:-->
                  <urn2:uri>?</urn2:uri>
                  <!--Optional:-->
                  <urn2:contentData>LDLIHAPIISDALKDF902383K1182K4J49DFNF3KR0482HJ1029F393</urn2:contentData>
               </urn2:nonXMLContent>
               <!--You may enter ANY elements at this point-->
            </urn2:contentObject>
         </urn2:EDXLDistribution>
      </urn:RespondingGateway_SendAlertMessage>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7dbf574a-10d3-45c2-8c4d-dd2c4b020d30">
              <con:configuration>
                <codes>202</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="Delay" type="delay" id="980aa96b-29dc-43f8-9474-77adcb985c23">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="98bbdb59-a048-46cd-9072-1d982341c7c9">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 1 and direction="Nhin Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 2 and direction="Nhin Inbound" and remoteHcid="1.1"')[0]
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T14:30:06Z</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T14:40:06Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 14:30:06</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="f95bf17b-ee3b-4feb-939c-476092a74c9c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Location Query" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clear Audit Logs" id="40d53941-fd0e-49ce-903c-418405167b05">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep><con:testStep type="delay" name="Wait to Clear Audit logs" id="e914c97a-5a41-4bbc-b96f-d22a277fed1c">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep><con:testStep type="request" name="Patient Location Query" id="65a8a192-7fd7-4267-a391-ad158691169e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EntityPatientLocationQueryBindingSoap</con:interface><con:operation>RespondingGateway_PatientLocationQuery</con:operation><con:request name="Patient Location Query" id="e056ce76-14bd-4dcc-8556-d6c89f914df7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientLocationQuery</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn2="urn:ihe:iti:xcpd:2009" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">\r
   <soap:Header/>\r
   <soap:Body>\r
      <urn:RespondingGateway_PatientLocationQueryRequest>\r
         <urn2:PatientLocationQueryRequest>\r
            <urn2:RequestedPatientId root="${#Project#LocalAA}" extension="${#Project#SubjectID}"/>\r
         </urn2:PatientLocationQueryRequest>\r
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PatientLocationQueryRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b89bd683-ea32-49f2-a4e0-7f1c2cb39b18"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Wait for Audit table to populate" id="78ad5b78-b1ba-4455-bf53-d698df810774">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Audit Logs" id="083fcd61-71b9-4336-8540-5de9297fe3dc">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientLocationQuery', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientLocationQuery', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="eac277b7-7ec5-4af2-844d-7483b1e21792">
        <con:settings/>
        <con:config><script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePatientLocationQuery') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePatientLocationQuery') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script></con:config>
      </con:testStep><con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="3236c72c-5a73-4f8c-abad-d96d198deff7">
        <con:settings/>
        <con:config><script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePatientLocationQuery') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePatientLocationQuery') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientLocationQuery',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script></con:config>
      </con:testStep><con:testStep type="groovy" name="Success" id="641c61be-97c7-4cd2-b2ac-9cab2f7ee0d2">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep><con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientLocationQueryAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript><con:properties><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name><con:value>110153</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name><con:value>false</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>&lt;!--Destination--></con:name><con:value/></con:property><con:property><con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@UserID</con:name><con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientLocationQuery</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name><con:value>Patient Location Query</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name><con:value>false</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@code</con:name><con:value>ITI-56</con:value></con:property><con:property><con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name><con:value>1010</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name><con:value>IHE Transactions</con:value></con:property><con:property><con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ActiveParticipant.@UserIsRequestor</con:name><con:value>true</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name><con:value>ITI-56</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name><con:value>PatientLocationQueryRequest</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name><con:value>Destination</con:value></con:property><con:property><con:name>&lt;!--Human</con:name><con:value>Requestor--></con:value></con:property><con:property><con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name><con:value>localhost</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name><con:value>Patient Number</con:value></con:property><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name><con:value>Source</con:value></con:property><con:property><con:name>ActiveParticipant.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name><con:value>192.168.1.2</con:value></con:property><con:property><con:name>&lt;!--ParticipantObjectIdentification</con:name><con:value>Query --></con:value></con:property><con:property><con:name>EventIdentification.@EventActionCode</con:name><con:value>E</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name><con:value>110152</con:value></con:property><con:property><con:name>EventIdentification.EventID.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name><con:value>DoD</con:value></con:property><con:property><con:name>EventIdentification.EventID.@displayName</con:name><con:value>Query</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name><con:value>1</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name><con:value>SNOMED_CT</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@displayName</con:name><con:value>Patient Location Query</con:value></con:property><con:property><con:name>EventIdentification.EventID.@code</con:name><con:value>110112</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@code</con:name><con:value>307969004</con:value></con:property><con:property><con:name>EventIdentification.@EventDateTime</con:name><con:value>2015-04-02T13:47:30.199Z</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name><con:value>24</con:value></con:property><con:property><con:name>EventIdentification.@EventOutcomeIndicator</con:name><con:value>0</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name><con:value>RFC-3881</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserIsRequestor</con:name><con:value>true</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@displayName</con:name><con:value>Public Health</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserID</con:name><con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value></con:property><con:property><con:name>AuditMessage.xmlns</con:name><con:value>http://nhinc.services.com/schema/auditmessage</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name><con:value>2</con:value></con:property><con:property><con:name>&lt;!--Source--></con:name><con:value/></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name><con:value>1111^^^&amp;1.1&amp;ISO</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name><con:value>IHE Transactions</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name><con:value>1.1</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name><con:value>D123401^^^&amp;1.1&amp;ISO</con:value></con:property><con:property><con:name>AuditSourceIdentification.@AuditSourceID</con:name><con:value>urn:oid:1.1</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant.@UserID</con:name><con:value>kskagerb</con:value></con:property></con:properties></con:testCase><con:properties>
      <con:property>
        <con:name>Endpoint-DocRetrieve</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentRetrieve/3_0/EntityService/EntityDocRetrieve</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DSDeferredResp</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityAdminDist</con:name>
        <con:value>http://localhost:8080/Gateway/AdminDistribution/2_0/AdministrativeDistribution_Service</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityXDRRequest</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDREntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionUnsecured</con:value>
      </con:property>
     <con:property>
        <con:name>Endpoint-XDSEntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentDataSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DocQuery</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentQuery/3_0/EntityService/EntityDocQueryUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscovery</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
      </con:property>
    </con:properties>
    <con:setupScript/>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="g0" id="4e893316-566a-4ecf-8554-43ee3fdce482">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Req" searchProperties="true" id="94e4f365-297e-4c77-aba9-1de42c5decb5">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="3b82f913-f848-42d1-b207-8dab37373e55">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="f2f6d1cf-2929-4334-8e35-29ed3eb8f943">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Req" type="request" id="2cf077da-15d5-42a3-a5d7-3ab233476557">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncRequest_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncRequest</con:operation>
          <con:request incomingWss="" name="Doc Submission Deferred Req" outgoingWss="" useWsAddressing="true" wssPasswordType="" id="8c05b9ec-33c5-43ad-aa54-da0d9b462a9a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission Deferred Request">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->

               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList>

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="c135761f-088b-432e-9d15-bf4e15a474e3"/>
            <con:assertion type="SOAP Fault Assertion" id="7943ad3d-e12e-490f-aff3-a3c53c1e874c"/>
            <con:assertion name="Match content of [@status]" type="XPath Match" id="16f3e4c6-3a7c-4760-8bc9-5229d4d7bf07">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
							//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:RequestAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="ac620171-47cc-412c-adb4-152c3ce7c7da">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="77a8c969-3460-4f45-9f2c-2af6ef6d3c32">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request:ProvideAndRegisterDocumentSet-bAsyncRequest_RequestMessage" generateMessageId="true" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="510c55bf-f307-47a2-b328-01934e367d24">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="f48a57a8-e26c-40a0-9de4-1245b744f953">
        <con:settings/>
        <con:config>
          <script>if ( nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if ( nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="cbf37907-8c69-4545-a7a8-c6fdf223a017">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for Human Requestor details
if (!parsedXmlMessage.ActiveParticipant[0].UserID.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

// ParticipantObjectIdentification Patient details
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
// check for  ParticipantObjectIdentification Submission Set details
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	assert(!node.@ParticipantObjectID.isEmpty())
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	
		assert(!node.@ParticipantObjectIDTypeCode.isEmpty())		 
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="3e1b53ce-d99c-490a-97b7-19502f935c61">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
    	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="8e1dff73-f4ca-49b1-93a0-fd8592a0ce8f">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:45:52Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:35:52</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:35:52Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Resp" searchProperties="true" id="fffd46f0-f42b-442d-a5f4-3c91df14ea93">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="52aace50-3a33-43f7-8737-843b250c96a8">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="0fe83a26-e411-4be0-9279-ccbb8183496f">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Resp" type="request" id="dc79d4f4-99b4-4ea6-bccc-c9d269226f61">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncResponse_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncResponse</con:operation>
          <con:request name="Doc Submission Deferred Resp" id="77d6e75e-0e38-44c9-a707-c18602ca1f34">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission Deferred Resp">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
               <urn1:prefix>Ms.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>?addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                     <!--Zero or more repetitions:-->
                     <urn1:translation/>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Karl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>?</urn1:prefix>
                  <urn1:suffix>?</urn1:suffix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <!--Optional:-->
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy notes</urn1:originalText>
               <!--Zero or more repetitions:-->
               <urn1:translation/>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <!--Optional:-->
                     <urn1:version>2.0</urn1:version>
                     <!--Optional:-->
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <!--Optional:-->
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <!--Optional:-->
                     <urn1:conditions>
                        <!--Optional:-->
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <!--Optional:-->
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <!--Zero or more repetitions:-->
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <!--Zero or more repetitions:-->
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:721645965035</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:146207300753</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:783710993742</urn1:signatureValue>
            </urn1:samlSignature>
            <!--Optional:-->
            <urn1:samlIssuer>
               <!--Optional:-->
               <urn1:issuer>?</urn1:issuer>
               <!--Optional:-->
               <urn1:issuerFormat>?</urn1:issuerFormat>
            </urn1:samlIssuer>
            <!--Optional:-->
            <urn1:messageId>?</urn1:messageId>
            <!--1 or more repetitions:-->
          <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn:RegistryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" requestId="?"><!--Optional:-->
            <urn2:ResponseSlotList>
               <!--Zero or more repetitions:-->
               <urn3:Slot name="?" slotType="?">
                  <urn3:ValueList>
                     <urn3:Value>?</urn3:Value>
                  </urn3:ValueList>
               </urn3:Slot>
            </urn2:ResponseSlotList>
            <!--Optional:-->
            <urn2:RegistryErrorList highestSeverity="?">
               <!--1 or more repetitions:-->
               <urn2:RegistryError codeContext="?" errorCode="?" severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" location="?">?</urn2:RegistryError>
            </urn2:RegistryErrorList>
         </urn:RegistryResponse>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="e9271f66-1c16-4e04-b4fc-e75ffbe855bc"/>
            <con:assertion type="Schema Compliance" id="c3a91ecd-33f4-462e-b59b-5959109ee0c8">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="cf8374f6-21f9-4efd-a6f3-446dc47a1ca6"/>
            <con:assertion type="XPath Match" id="194c8473-9e38-4545-9177-54a63d757147">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:ResponseAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="b7ce140a-e3be-4273-9f22-4fa3190b23ea">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="55485d23-b657-4913-8606-4bc6d4b94c67">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="e554619e-c35f-419f-938c-e594af83c87a">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
		
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
   }
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="73ed48c8-2520-4723-ae9e-1e66e392f44b">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="2b0488d4-8cd2-43a5-a836-b2424df0ee7e">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:46:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:36:36</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:36:36Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission" searchProperties="true" id="fb0a6077-5978-4615-ae36-a77a19ceef7d">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="846da1f9-7f09-4c32-9bd3-85f84710f03e">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="93dfc97e-476c-44c1-aa25-855a7a2ad1e1">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission" type="request" id="20b3c101-a2f1-4c1f-88dd-56fe0e5c480a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDR_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-b</con:operation>
          <con:request incomingWss="" name="Doc Submission" outgoingWss="" wssPasswordType="" id="0eabbc2a-875b-4cee-ac85-9cd43072f50f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->

               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList>

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="3acd8f4e-1d63-4379-9e95-536a6ba35923"/>
            <con:assertion type="SOAP Fault Assertion" id="62de05d0-17a3-4a3d-9f5d-b2bf91d283c4"/>
            <con:assertion type="XPath Match" id="571b27f2-a64d-4da3-b9fa-b97550c08c1d">
              <con:configuration>
                <path>declare namespace ns11='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
							//ns11:RegistryResponse[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="f562b376-b1d9-4cd9-8f45-cf1f26fdf956">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{urn:gov:hhs:fha:nhinc:nhincentityxdr}ProvideAndRegisterDocumentSet-b" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="a2e616b7-91e5-408a-b1f5-f00d374668fd">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="6846903e-4c2f-4c34-8b95-8c7f7804f568">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="b0362d7f-7157-4807-8314-80de6081a3ba">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="c2a41970-eb18-441a-85d4-e56c08805c02">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="cb576e4c-fb62-4193-8639-cb2536fcd052">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:47:30Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>SubSetID_UniqueID01</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:37:30</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:37:30Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Req" searchProperties="true" id="2d01ba9b-8e2f-4495-9afb-0df274e6ff49">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="70f78d10-bbfa-4602-abf8-c69b7928b7be">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="a19dd5a2-19a2-4d1c-8c67-6934411136b9">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Req" type="request" id="39c72b7c-1cb3-4668-9929-d767963ea8e2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncReqBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncReq</con:operation>
          <con:request name="Patient Discovery Deferred Req" useWsAddressing="true" id="2fdb1ed4-ccbb-4a80-8311-52b95c65c98b">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery Deferred Req">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#RemoteHCID}" extension="-abd3453dcd24wkkks545"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#LocalPatientID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:authorized>authorized</urn1:authorized>
            <!--Optional:-->
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="2ff2ec76-d428-41da-bf6a-38d0a76638c2"/>
            <con:assertion type="SOAP Fault Assertion" id="568ddbfe-ecf6-46ae-9965-f969a6fc3a9f"/>
            <con:assertion name="Verify Receiver" type="XPath Match" id="47c9f36c-46c2-4860-b5af-69a7bbedebc7">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:receiver[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>1.1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Sender" type="XPath Match" id="21877acd-a0b1-4384-adb6-a8e6e3ebbec2">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:sender[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>2.2</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Message" type="XPath Match" id="33ba6bf3-78c1-43d3-acfc-963d57a6cde2">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:acknowledgement[1]/ns3:acknowledgementDetail[1]/ns3:text[1]/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify RelatesTo" type="XPath Match" id="476b48d5-f76c-44e3-922d-9f80e4f6f5a7">
              <con:configuration>
                <path>declare namespace ns1='http://www.w3.org/2005/08/addressing';
							//ns1:RelatesTo[1]/text()</path>
                <content>uuid:6666666666.66666.666.66</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="a44b72f4-32af-40f1-a683-704668c06ba3">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq:ProcessPatientDiscoveryAsyncReqAsyncRequest" addDefaultTo="true" messageID="uuid:6666666666.66666.666.66" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="21544fcc-8298-4cdf-aeec-fd87c64fdb8b">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="bdb61b25-6dfb-4d39-b46b-b612e3894c49">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="ac43da56-c276-4ac3-8097-84b8dbd38c5a">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="6e9bcbc7-ae62-4338-bf2f-0133da603c8f">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }

     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty()){
	// Patient details will not be populated for PD Deferred 
 }
 
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="c8f7d05b-0f9e-49f2-964a-5029c7fa3253">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncReq</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:48:11Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:38:11</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:38:11Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
        <con:property>
          <con:name>auditLogStatus</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>AuditOff</con:name>
          <con:value>false</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Resp" searchProperties="true" id="62a59f14-2e37-40a3-90c8-4afd3041d32d">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="145b23f4-ba0d-4974-8f02-2d9de6a8a7d5">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="90d462ef-f6f0-4177-8b44-5a71d6955f01">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Resp" type="request" id="d4b958b7-b678-4810-97d5-cd9bf9cd77f2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncRespBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncResp</con:operation>
          <con:request name="Patient Discovery Deferred Resp" id="22837983-b963-41c3-8efb-7df8735dc886">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header xmlns:add="SoapUI_Test/ValidationSuite/2-EndToEndSelfTest-soapui-project.xml">
      <add:Action>urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp:ProcessPatientDiscoveryAsyncRespAsyncRequest</add:Action>
      <add:MessageID>uuid:12bcfc1e-f422-4d1d-af99-ff83d050313e</add:MessageID>
      <add:RelatesTo>uuid:6666666666.66666.666.66</add:RelatesTo>
      <add:To>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</add:To>
   </soap:Header>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery Deferred Resp">
      <urn:RespondingGateway_PRPA_IN201306UV02Request>
         <urn:PRPA_IN201306UV02 ITSVersion="XML_1.0">
            <urn:id root="2.2" extension="-5a3e95b1:11d1fa33d45:-8e45"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <!--1 or more repetitions:-->
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:code codeSystem="2.16.840.1.113883.1.6" code="PRPA_TE201306UV"/>
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="2.2"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:subject typeCode="SUBJ">
                  <urn:registrationEvent classCode="REG" moodCode="EVN">
                     <urn:id nullFlavor="NA"/>
                     <urn:statusCode code="active"/>
                     <urn:subject1 typeCode="SBJ">
                        <urn:patient classCode="PAT">
                           <urn:id extension="D123402" root="2.2"/>
                           <urn:statusCode code="SD"/>
                           <urn:patientPerson>
                              <urn:name>
                                 <urn:family partType="FAM">Younger</urn:family>
                                 <urn:given partType="GIV">Gallow</urn:given>
                              </urn:name>
                              <urn:administrativeGenderCode code="M"/>
                              <urn:birthTime value="19630804"/>
                              <urn:addr>
                                 <urn:city>LEESBURG</urn:city>
                                 <urn:state>VA</urn:state>
                                 <urn:postalCode>20176</urn:postalCode>
                              </urn:addr>
                           </urn:patientPerson>
                           <urn:providerOrganization determinerCode="" classCode="">
                              <urn:id root="2.2"/>
                              <urn:contactParty xsi:nil="true" classCode="CON" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </urn:providerOrganization>
                        </urn:patient>
                     </urn:subject1>
                     <urn:custodian typeCode="">
                        <urn:assignedEntity classCode="">
                           <urn:id root="2.2"/>
                        </urn:assignedEntity>
                     </urn:custodian>
                  </urn:registrationEvent>
               </urn:subject>
               <urn:queryAck>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:queryResponseCode code="OK"/>
                  <urn:resultTotalQuantity value="1"/>
                  <urn:resultCurrentQuantity value="1"/>
                  <urn:resultRemainingQuantity value="0"/>
               </urn:queryAck>
               <urn:queryByParameter>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="M"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="19630804"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectId>
                        <urn:value extension="D123401" root="1.1"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">Younger</urn:family>
                           <urn:given partType="GIV">Gallow</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201306UV02>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>Test HCID1</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>HCID1</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>            
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201306UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="65888124-d47e-4ceb-b854-7dc5c8dfd26a"/>
            <con:assertion type="SOAP Fault Assertion" id="8b1bccec-f700-4256-89fe-ef44cc906fce"/>
            <con:assertion name="Match content of [typeCode/@code]" type="XPath Match" id="10065034-8960-440a-92a8-b4c877687d8b">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:typeCode[1]/@code</path>
                <content>CA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Match content of [acknowledgementDetail/text/text()]" type="XPath Match" id="bd605e34-ed6e-49ce-8052-e365b45b79cc">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:acknowledgementDetail[1]/ns2:text/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="a8e645c3-cab9-4120-9302-5bc64965ea10">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="a51b5400-a85e-4fb3-b438-7acb56516425">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="51e31a14-520c-4ebe-9d91-1614db33b08d">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK" id="8d0937c0-bd57-4e08-98ed-864661e10889">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
//check for Query Parameters ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="6367da24-9d58-46e5-871c-da167006abf3">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

//assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
//check for Query Parameter ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="2dd7c19a-11d8-4717-98c9-0f1143fc4796">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncResp</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:49:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:39:36</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:39:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
        <con:property>
          <con:name>auditLogStatus</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>AuditOff</con:name>
          <con:value>false</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery" searchProperties="true" id="a2f144ec-2c70-4d77-a7ea-81f9a550fee7">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="fea57aac-75c7-4ca6-94c1-ef00a6c4b1ff">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="f7ecfb67-49e4-4a09-8990-4d4b1933cee3">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Up PassThru" id="caff061a-5bd3-4a12-a6df-a994848bd800">
        <con:settings/>
        <con:config>
          <script>log.info "Setting Patient Discovery Adapter to unsecured";
def dir = context.findProperty('GatewayPropDir');
nhinc.FileUtils.backupFile(dir, "PatientDiscoveryProxyConfig.xml", log);
def alias = 'adapterpatientdiscovery'
def aliasName= 'adapterpatientdiscoverywssecured';
def replaceAlias = 'adapterpatientdiscoverywsunsecured';

nhinc.FileUtils.updateSpringConfig(dir, "PatientDiscoveryProxyConfig.xml",
	alias, aliasName, replaceAlias, log);
/**
def pdConfigFile = new File(dir + "/" + "PatientDiscoveryProxyConfig.xml");
def pdConfigFileNew = new File(dir + "/" + "PatientDiscoveryProxyConfig.xml.NEW");
pdConfigFile.eachLine() {
	line ->
	if(line.contains(alias)) {
		pdConfigFileNew &lt;&lt; replaceAlias + ln;
	} else {
		pdConfigFileNew &lt;&lt; line + ln;
	}
}

pdConfigFile.delete();
pdConfigFileNew.renameTo(new File(dir + "/" + "PatientDiscoveryProxyConfig.xml"));
**/
log.info "Modifying internalExchangeInfo for adapterpatientdiscovery mock."

nhinc.FileUtils.createOrUpdateConnection("internalExchangeInfo.xml", dir, "1.1",
	"adapterpatientdiscovery", "http://localhost:1720/MockPDAdapter", "2.0",
	log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery" type="request" id="d34a6d5d-56b4-4894-a7c4-7533179a36cd">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:request name="Patient Discovery" id="323e4811-1326-40d6-81b9-3dd30b35794f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscovery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#LocalHCID}" extension="${#TestCase#queryId.@extension}"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#SubjectID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>${#Project#City}</urn1:city>
               <urn1:country>${#Project#Country}</urn1:country>
               <urn1:state>${#Project#State}</urn1:state>
               <urn1:streetAddress>${#Project#StreetAddress}</urn1:streetAddress>
               <urn1:zipCode>${#Project#ZipCode}</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>${#Project#DOB}</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>${#Project#FamilyName}</urn1:familyName>
               <urn1:givenName>${#Project#GivenName}</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>${#Project#SSN}</urn1:SSN>
            <urn1:uniquePatientId>${#Project#UniquePatientId}</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTH</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
               <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="d45fe198-e9fc-41d3-ab61-f177836451dd"/>
            <con:assertion disabled="true" type="Schema Compliance" id="23bba6b5-c8c4-45a6-bec7-672a368ceae0">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="b84010c1-6bc9-42a8-86b6-72224111b5f9"/>
            <con:assertion name="Check for existance of [ns3:controlActProcess]" type="XPath Match" id="3fd9213c-db4a-4649-aba3-5f6aa7124498">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
				exists( //ns3:PRPA_IN201306UV02/ns3:controlActProcess)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Given Name XPath Match" type="XPath Match" id="1194fb88-4117-46f3-b538-cb74a1df659b">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:given[1]</path>
                <content>${#Project#GivenName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Family Name XPath Match" type="XPath Match" id="c8ace521-7aae-4605-b9bd-dd75b3b261f3">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:family[1]</path>
                <content>${#Project#FamilyName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="mockresponse" name="Mock Response" id="7957ba9b-8230-4dd9-a8ed-523e6e716c0a">
        <con:settings/>
        <con:config xsi:type="con:MockResponseStep" startStep="Clear Audit Logs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdapterPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:path>/MockPDAdapter</con:path>
          <con:port>1720</con:port>
          <con:response id="7a222c56-8188-4369-a504-f18bc664a66d">
            <con:settings/>
            <con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3">
   <soap:Header/>
   <soap:Body>
      <PRPA_IN201306UV02 ITSVersion="XML_1.0" xmlns="urn:hl7-org:v3" xmlns:ns2="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ns3="http://www.w3.org/2005/08/addressing" xmlns:ns4="urn:gov:hhs:fha:nhinc:common:patientcorrelationfacade">
         <id root="1.1" extension="13318247:13b4e0b839b:-7ff4"/>
         <creationTime value="20121129212833"/>
         <interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
         <processingCode code="P"/>
         <processingModeCode code="T"/>
         <acceptAckCode code="NE"/>
         <receiver typeCode="RCV">
            <device classCode="DEV" determinerCode="INSTANCE">
               <id root="1.2.345.678.999"/>
               <asAgent classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="1.1"/>
                  </representedOrganization>
               </asAgent>
            </device>
         </receiver>
         <sender typeCode="SND">
            <device classCode="DEV" determinerCode="INSTANCE">
               <id root="2.2"/>
               <asAgent classCode="AGNT">
                  <representedOrganization classCode="ORG" determinerCode="INSTANCE">
                     <id root="2.2"/>
                  </representedOrganization>
               </asAgent>
            </device>
         </sender>
         <acknowledgement>
            <typeId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <typeCode code="AA"/>
            <targetMessage xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </acknowledgement>
         <controlActProcess classCode="CACT" moodCode="EVN">
            <code code="PRPA_TE201306UV" codeSystem="2.16.840.1.113883.1.6"/>
            <subject typeCode="SUBJ">
               <registrationEvent classCode="REG" moodCode="EVN">
                  <id nullFlavor="NA"/>
                  <statusCode code="active"/>
                  <subject1 typeCode="SBJ">
                     <patient classCode="PAT">
                        <id root="1.1" extension="D123401"/>
                        <statusCode code="SD"/>
                        <patientPerson classCode="PSN" determinerCode="INSTANCE">
                           <name>
                              <family partType="FAM">Younger</family>
                              <given partType="GIV">Gallow</given>
                           </name>
                           <telecom value="tel:+1-888-555-1234"/>
                           <administrativeGenderCode code="M"/>
                           <birthTime value="19630804"/>
                           <addr>
                              <city>LEESBURG</city>
                              <state>VA</state>
                              <postalCode>20176</postalCode>
                           </addr>
                           <asOtherIDs classCode="SD">
                              <id root="2.16.840.1.113883.4.1" extension="999123401"/>
                              <scopingOrganization classCode="ORG" determinerCode="INSTANCE">
                                 <id root="2.16.840.1.113883.4.1"/>
                              </scopingOrganization>
                           </asOtherIDs>
                        </patientPerson>
                        <providerOrganization classCode="ORG" determinerCode="INSTANCE">
                           <id root="1.1"/>
                           <contactParty xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                        </providerOrganization>
                        <subjectOf1>
                           <queryMatchObservation classCode="CASE" moodCode="EVN">
                              <code code="IHE_PDQ"/>
                              <value xsi:type="INT" value="100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </queryMatchObservation>
                        </subjectOf1>
                     </patient>
                  </subject1>
                  <custodian typeCode="CST">
                     <assignedEntity classCode="ASSIGNED">
                        <id root="1.1"/>
                        <code code="NotHealthDataLocator" codeSystem="1.3.6.1.4.1.19376.1.2.27.2"/>
                     </assignedEntity>
                  </custodian>
               </registrationEvent>
            </subject>
            <queryAck>
               <queryId root="1.1" extension="-abd3453dcd24wkkks545"/>
               <queryResponseCode code="OK"/>
            </queryAck>
            <queryByParameter>
               <queryId root="1.1" extension="-abd3453dcd24wkkks545"/>
               <statusCode code="new"/>
               <responseModalityCode code="R"/>
               <responsePriorityCode code="I"/>
               <parameterList>
                  <livingSubjectAdministrativeGender>
                     <value code="M"/>
                     <semanticsText representation="TXT"/>
                  </livingSubjectAdministrativeGender>
                  <livingSubjectBirthTime>
                     <value value="19630804"/>
                     <semanticsText representation="TXT"/>
                  </livingSubjectBirthTime>
                  <livingSubjectId>
                     <value root="1.1" extension="1111"/>
                     <semanticsText representation="TXT"/>
                  </livingSubjectId>
                  <livingSubjectName>
                     <value>
                        <family partType="FAM">Younger</family>
                        <given partType="GIV">Gallow</given>
                     </value>
                     <semanticsText representation="TXT"/>
                  </livingSubjectName>
               </parameterList>
            </queryByParameter>
         </controlActProcess>
      </PRPA_IN201306UV02>
   </soap:Body>
</soap:Envelope>]]></con:responseContent>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
          </con:response>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="efa9c0fa-3efd-4490-8152-0ffd2406b062">
        <con:settings/>
        <con:config>
          <delay>25000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="64fe5440-433b-4a61-9595-325885f88e42">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="0647dd2c-2597-46df-925d-474be4ec84c4">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGatewayGateway(2.2)" id="f1fca21a-bb28-4d95-ae63-6afd7b90f4da">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	    	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Responder.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
	}
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				//SemanticsText is an optional value in response
				//assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				//SemanticsText is an optional value in response
				//assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				//SemanticsText is an optional value in response
				//assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				//SemanticsText is an optional value in response
				//assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="936a57b8-aa37-46ea-ad67-878d9d5e425f">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:50:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>1111^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0idXJuOmdvdjpoaHM6ZmhhOm5oaW5jOmNvbW1vbjpwYXRpZW50Y29ycmVsYXRpb25mYWNhZGUiIHhtbG5zOm5zNT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query_Response.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PGxpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PHZhbHVlIHZhbHVlPSIxOTYzMDgwNCIvPjxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiLz48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgCQk8L3ZhbHVlPjxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiLz48L2xpdmluZ1N1YmplY3ROYW1lPjwvcGFyYW1ldGVyTGlzdD48L3F1ZXJ5QnlQYXJhbWV0ZXI+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:40:42</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:40:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Query" searchProperties="true" id="9ef7d334-39f5-4693-a2ce-bc5609f8a972">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="5e4814c9-59f6-4fbc-bea0-c8eee1a21aad">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="8cb9ec31-beb3-4349-8850-169c01b19ea8">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="update config" type="groovy" id="a8567aa6-bd18-48da-9992-0788937c45cb">
        <con:settings/>
        <con:config>
          <script>nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'), "gateway.properties", "documentQueryQuerySelf", "false", log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear Correlation Table &amp; Add Correlation" type="groovy" id="38895fb5-bdc1-498e-92b0-ca328a66ea79">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		def table = context.findProperty('PatientCorrelationTable')

		sql.execute('delete from ' + table)

		def localAA = context.findProperty( "LocalAA" )
		def localPatientID = context.findProperty("LocalPatientID")
		def remoteAA = context.findProperty( "RemoteAA" )
		def remotePatientID = context.findProperty("RemotePatientID")
		def insertSql = "insert into " + table + " (correlationId, PatientAssigningAuthorityId, PatientId, CorrelatedPatientAssignAuthId, CorrelatedPatientId) " + 
		"values (1, ?, ?, ?, ?)"
		sql.executeUpdate(insertSql, [localAA, localPatientID, remoteAA, remotePatientID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear AA Mapping Table &amp; Add Mapping" type="groovy" id="701e7eb3-d04f-4216-8f1b-f44c70813fe8">
        <con:settings/>
        <con:config>
          <script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, ?, ?)"
		sql.executeUpdate(insertSql, [remoteAA, remoteHCID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Query" type="request" id="e6c0ecff-9271-4ee5-b650-e9cbd259e5bd">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocQueryBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayQuery</con:operation>
          <con:request name="Document Query" id="a6bd3768-b2c4-4e7b-b821-ee43eea72da5">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocQuery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Query">
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="LeafClass" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'${#Project#DQPatientID}^^^&amp;${#Project#LocalAA}&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
         <urn2:Slot name="$XDSDocumentEntryClassCode">
            <urn2:ValueList>
                    <urn2:Value>34133-9</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryClassCodeScheme">
                  <urn2:ValueList>
                     <urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:messageId>${#Project#MessageID}</urn3:messageId>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>AddrCity</urn3:city>
               <urn3:country>AddrCountry</urn3:country>
               <urn3:state>AddrState</urn3:state>
               <urn3:streetAddress>AddrStreet</urn3:streetAddress>
               <urn3:zipCode>AddrZip</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>06/04/1959 05:21:00</urn3:dateOfBirth>
            <urn3:explanationNonClaimantSignature>Electronic</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>false</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>false</urn3:haveSignature>
            <urn3:haveWitnessSignature>false</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>${#Project#LocalHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#LocalHCDescription}</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sandy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
               <urn3:fullName>Sandy S. Smith</urn3:fullName>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5436</urn3:extension>
               <urn3:localNumber>253-6849</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Addr2City</urn3:city>
               <urn3:country>Addr2Country</urn3:country>
               <urn3:state>Addr2State</urn3:state>
               <urn3:streetAddress>Addr2Street</urn3:streetAddress>
               <urn3:zipCode>Addr2Zip</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sammy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>s</urn3:secondNameOrInitials>
               <urn3:fullName>Sammy S. Smith</urn3:fullName>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5424</urn3:extension>
               <urn3:localNumber>542-6823</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>253-98-7546</urn3:SSN>
            <urn3:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>addrCode</urn3:code>
                  <urn3:codeSystem>addrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>addrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>addrCode</urn3:displayName>
                  <urn3:originalText>addrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Burnell</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>FL</urn3:state>
               <urn3:streetAddress>825 North</urn3:streetAddress>
               <urn3:zipCode>32184</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Scott</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S.</urn3:secondNameOrInitials>
               <urn3:fullName>Scott S. Smith</urn3:fullName>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>8432</urn3:extension>
               <urn3:localNumber>985-2239</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>Skagerberg</urn3:familyName>
                  <urn3:givenName>Karl</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>nameCode</urn3:code>
                     <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                     <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                     <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                     <urn3:displayName>nameCode</urn3:displayName>
                     <urn3:originalText>nameCode</urn3:originalText>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
                  <urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
               </urn3:personName>
               <urn3:userName>kskagerberg</urn3:userName>
               <urn3:org>
                  <urn3:description>${#Project#LocalHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#LocalHCDescription}</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>307969004</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Public Health</urn3:displayName>
                  <urn3:originalText>Public Health</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PUBLICHEALTH</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:samlAuthnStatement>
               <urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
               <urn3:sessionIndex>987</urn3:sessionIndex>
               <urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
               <urn3:subjectLocalityAddress>1.1.1.1</urn3:subjectLocalityAddress>
               <urn3:subjectLocalityDNSName>connectopensource.org</urn3:subjectLocalityDNSName>
            </urn3:samlAuthnStatement>
         <urn3:samlAuthzDecisionStatement>
               <urn3:decision>Permit</urn3:decision>
               <urn3:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
               <urn3:action>TestSaml</urn3:action>
               <urn3:evidence>
                  <urn3:assertion>
                     <urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
                     <urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
                     <urn3:version>2.0</urn3:version>
                     <urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
                     <urn3:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn3:issuer>
                     <urn3:conditions>
                        <urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
                        <urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
                     </urn3:conditions>
                     <urn3:accessConsentPolicy>urn:oid:1.2.3.4</urn3:accessConsentPolicy>
                     <urn3:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn3:instanceAccessConsentPolicy>
                  </urn3:assertion>
               </urn3:evidence>
            </urn3:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn3:nhinTargetCommunity>
               <urn3:homeCommunity>
                  <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
               </urn3:homeCommunity>
            </urn3:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="67eee8eb-5228-4797-b70e-6d5e36b83b8b"/>
            <con:assertion type="Schema Compliance" id="6eff808b-6959-48d4-bba4-2fd0d7b4d78c">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="7b665ce0-1f2c-49f2-b696-08b15a9f9251"/>
            <con:assertion name="DocID Match" type="GroovyScriptAssertion" id="f6ef3af5-8058-4459-96d8-d4bccde2dba6">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
				def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
				holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
				holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

				def documentID = context.findProperty('DQDocID')
				def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
				assert (documentID == msgDocID)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="44f69631-9079-4f89-bb55-c31324904ec5">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="e58a476e-bafe-4823-8b20-ba397960005b">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="c647c371-9425-414b-bd7d-8ca6d5b25129">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	    	if(!node.@UserName.isEmpty()){	    
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	    	}
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	    	     
     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	 }
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->		
	     //Commented out until code fix for populating correct userid as per spec (FHAC-576)
	     //assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )   
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
   	    	
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )    	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )	     
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

	 	byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   		def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
   		assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		  		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="9c61b662-ddfc-4d7b-9fa3-6a79f3e30181">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
		//Commented out until code fix for populating correct userid as per spec (FHAC-576)
	     //assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )      
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
		assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
     	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

		if(!node.ParticipantObjectQuery.text().isEmpty()){    
    			byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))  
   			assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		}   		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def localHCID = testRunner.testCase.testSuite.project.getPropertyValue("LocalHCID")
	 		def localHCIDWithPrefix 
	 		if(localHCID.startsWith("urn:oid:")){
	 			localHCIDWithPrefix= localHCID
	 		}
	 		else{
	 			localHCIDWithPrefix = "urn:oid:"+localHCID
	 		}
  			assert decodedData2 == localHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="6e87ccea-e34c-4c25-8c52-979c296c0c04">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/QueryDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--RESPONDER--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:52:24Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FullPatientID</con:name>
          <con:value>'D123401^^^&amp;amp;1.1&amp;amp;ISO'</con:value>
        </con:property>
        <con:property>
          <con:name>parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>QueryEncoding</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>UTF-8</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>urn:ihe:iti:xca:2010:homeCommunityId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxBZGhvY1F1ZXJ5UmVxdWVzdCB4bWx....</con:value>
        </con:property>
        <con:property>
          <con:name>QueryForDocuments</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ResponderActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>RetrieveDocuments</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:42:24</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:42:24Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Retrieve" searchProperties="true" id="057be88f-5e6a-47ef-96d8-6ffdef5db6a6">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="54572952-75a8-4a61-ae50-15faf57791e7">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="76b015c5-cb89-441c-b109-f4c3792a2ddb">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Retrieve" type="request" id="455761ae-828f-4317-b59f-1d9dd06cf8be">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocRetrieveBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayRetrieve</con:operation>
          <con:request incomingWss="" name="Document Retrieve" outgoingWss="" wssPasswordType="" id="987a0741-8b71-4c53-a812-84202f19584c">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocRetrieve}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:ihe:iti:xds-b:2007" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Retrieve">
      <urn:RespondingGateway_CrossGatewayRetrieveRequest>
         <urn1:RetrieveDocumentSetRequest>
            <urn1:DocumentRequest>
               <urn1:HomeCommunityId>urn:oid:${#Project#RemoteHCID}</urn1:HomeCommunityId>
               <urn1:RepositoryUniqueId>${#Project#DRRepoID}</urn1:RepositoryUniqueId>
               <urn1:DocumentUniqueId>${#Project#DRDocID}</urn1:DocumentUniqueId>
            </urn1:DocumentRequest>
         </urn1:RetrieveDocumentSetRequest>
         <urn:assertion>
            <urn2:messageId>${#Project#MessageID}</urn2:messageId>
            <urn2:address>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>AddrCity</urn2:city>
               <urn2:country>AddrCountry</urn2:country>
               <urn2:state>AddrState</urn2:state>
               <urn2:streetAddress>AddrStreet</urn2:streetAddress>
               <urn2:zipCode>AddrZip</urn2:zipCode>
            </urn2:address>
            <urn2:dateOfBirth>06/04/1959 05:21:00</urn2:dateOfBirth>
            <urn2:explanationNonClaimantSignature>Electronic</urn2:explanationNonClaimantSignature>
            <urn2:haveSecondWitnessSignature>false</urn2:haveSecondWitnessSignature>
            <urn2:haveSignature>false</urn2:haveSignature>
            <urn2:haveWitnessSignature>false</urn2:haveWitnessSignature>
            <urn2:homeCommunity>
               <urn2:description>${#Project#LocalHCDescription}</urn2:description>
               <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
               <urn2:name>${#Project#LocalHCDescription}</urn2:name>
            </urn2:homeCommunity>
            <urn2:personName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sandy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
               <urn2:fullName>Sandy S. Smith</urn2:fullName>
            </urn2:personName>
            <urn2:phoneNumber>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5436</urn2:extension>
               <urn2:localNumber>253-6849</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:phoneNumber>
            <urn2:secondWitnessAddress>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Addr2City</urn2:city>
               <urn2:country>Addr2Country</urn2:country>
               <urn2:state>Addr2State</urn2:state>
               <urn2:streetAddress>Addr2Street</urn2:streetAddress>
               <urn2:zipCode>Addr2Zip</urn2:zipCode>
            </urn2:secondWitnessAddress>
            <urn2:secondWitnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sammy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>s</urn2:secondNameOrInitials>
               <urn2:fullName>Sammy S. Smith</urn2:fullName>
            </urn2:secondWitnessName>
            <urn2:secondWitnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5424</urn2:extension>
               <urn2:localNumber>542-6823</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:secondWitnessPhone>
            <urn2:SSN>253-98-7546</urn2:SSN>
            <urn2:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn2:uniquePatientId>
            <urn2:witnessAddress>
               <urn2:addressType>
                  <urn2:code>addrCode</urn2:code>
                  <urn2:codeSystem>addrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>addrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>addrCode</urn2:displayName>
                  <urn2:originalText>addrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Burnell</urn2:city>
               <urn2:country>USA</urn2:country>
               <urn2:state>FL</urn2:state>
               <urn2:streetAddress>825 North</urn2:streetAddress>
               <urn2:zipCode>32184</urn2:zipCode>
            </urn2:witnessAddress>
            <urn2:witnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Scott</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S.</urn2:secondNameOrInitials>
               <urn2:fullName>Scott S. Smith</urn2:fullName>
            </urn2:witnessName>
            <urn2:witnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>8432</urn2:extension>
               <urn2:localNumber>985-2239</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:witnessPhone>
            <urn2:userInfo>
               <urn2:personName>
                  <urn2:familyName>Skagerberg</urn2:familyName>
                  <urn2:givenName>Karl</urn2:givenName>
                  <urn2:nameType>
                     <urn2:code>nameCode</urn2:code>
                     <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                     <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                     <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                     <urn2:displayName>nameCode</urn2:displayName>
                     <urn2:originalText>nameCode</urn2:originalText>
                  </urn2:nameType>
                  <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
                  <urn2:fullName>Kasrl S. Skagerberg</urn2:fullName>
               </urn2:personName>
               <urn2:userName>kskagerb</urn2:userName>
               <urn2:org>
                  <urn2:description>${#Project#LocalHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#LocalHCDescription}</urn2:name>
               </urn2:org>
               <urn2:roleCoded>
                  <urn2:code>307969004</urn2:code>
                  <urn2:codeSystem>2.16.840.1.113883.6.96</urn2:codeSystem>
                  <urn2:codeSystemName>SNOMED_CT</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>Public Health</urn2:displayName>
                  <urn2:originalText>Public Health</urn2:originalText>
               </urn2:roleCoded>
            </urn2:userInfo>
            <urn2:authorized>true</urn2:authorized>
            <urn2:purposeOfDisclosureCoded>
               <urn2:code>PUBLICHEALTH</urn2:code>
               <urn2:codeSystem>2.16.840.1.113883.3.18.7.1</urn2:codeSystem>
               <urn2:codeSystemName>nhin-purpose</urn2:codeSystemName>
               <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
               <urn2:displayName>Use or disclosure of Psychotherapy Notes</urn2:displayName>
               <urn2:originalText>Use or disclosure of Psychotherapy Notes</urn2:originalText>
            </urn2:purposeOfDisclosureCoded>
            <urn2:samlAuthnStatement>
               <urn2:authInstant>2009-04-16T13:15:39Z</urn2:authInstant>
               <urn2:sessionIndex>987</urn2:sessionIndex>
               <urn2:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn2:authContextClassRef>
               <urn2:subjectLocalityAddress>1.1.1.1</urn2:subjectLocalityAddress>
               <urn2:subjectLocalityDNSName>connectopensource.org</urn2:subjectLocalityDNSName>
            </urn2:samlAuthnStatement>
            <urn2:samlAuthzDecisionStatement>
               <urn2:decision>Permit</urn2:decision>
               <urn2:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn2:resource>
               <urn2:action>TestSaml</urn2:action>
               <urn2:evidence>
                  <urn2:assertion>
                     <urn2:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn2:id>
                     <urn2:issueInstant>2009-04-16T13:10:39.093Z</urn2:issueInstant>
                     <urn2:version>2.0</urn2:version>
                     <urn2:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn2:issuerFormat>
                     <urn2:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn2:issuer>
                     <urn2:conditions>
                        <urn2:notBefore>2009-04-16T13:10:39.093Z</urn2:notBefore>
                        <urn2:notOnOrAfter>2009-12-31T12:00:00.000Z</urn2:notOnOrAfter>
                     </urn2:conditions>
                     <urn2:accessConsentPolicy>urn:oid:1.2.3.4</urn2:accessConsentPolicy>
                     <urn2:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn2:instanceAccessConsentPolicy>
                  </urn2:assertion>
               </urn2:evidence>
            </urn2:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn2:nhinTargetCommunity>
               <urn2:homeCommunity>
                  <urn2:description>${#Project#RemoteHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#RemoteHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#RemoteHCDescription}</urn2:name>
               </urn2:homeCommunity>
            </urn2:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayRetrieveRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="e5ae9c37-3804-4321-8914-9779baa08b53"/>
            <con:assertion type="SOAP Fault Assertion" id="2d189076-55b3-4171-baab-fe9f221ded5d"/>
            <con:assertion type="Schema Compliance" disabled="true" id="093e69f9-7d57-4516-8e52-c8e8d76f4dce">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc Repository ID" type="XPath Match" id="8aeaf409-c8b5-47dd-b047-4ffc7c3e0515">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:RepositoryUniqueId[1]</path>
                <content>${#Project#DRRepoID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc ID" type="XPath Match" id="b9699935-de42-4532-b500-e7885ca81821">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:DocumentUniqueId[1]</path>
                <content>${#Project#DRDocID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Document Data" type="GroovyScriptAssertion" id="e75b57f5-94fd-478b-9cff-d8916ba29a33">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
					def holder = groovyUtils.getXmlHolder( messageExchange.responseContent )
					holder.namespaces["ns"]="urn:ihe:iti:xds-b:2007"
					def docData = holder["//ns:RetrieveDocumentSetResponse[1]/ns:DocumentResponse[1]/ns:Document[1]"]
					log.info docData.toString()
					assert (docData.size() != 0)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitydocretrieve/EntityDocRetrievePortType/RespondingGateway_CrossGatewayRetrieveRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="1802754d-6704-4a32-8f03-ea4be7c4ea5f">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="e63fc577-4966-462f-85f0-b563f0d69c37">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="b4387e1f-8c3c-4d70-93a6-67645535c038">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g0.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){
	     	//commented out until code updated to return correct value as per spec	     	
	     	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
     }	
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
         	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )	 		
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	    
      } 
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="097019fe-2a25-4ae7-9a50-886db6094761">
        <con:settings/>
        <con:config>
          <script><![CDATA[import java.util.regex.*
context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g0.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}	
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
  			def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	  
	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="7bad1b3c-0cea-4ffd-b03a-7569064a91fd">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/RetrieveDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/2_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>CorrectedRemoteHCID</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:53:18Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-39</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Retrieve</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>500000000^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>ihe:RepositoryUniqueId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@value</con:name>
          <con:value>homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Report Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:43:18</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:43:18Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Distribution" searchProperties="true" id="30b2d3bb-0976-4d6a-b7f1-3d6b31875764">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="adf6f1f7-6f9f-4e09-9a0d-50fdc0026a14">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Admin Distribution" type="request" id="ab02c783-35ee-437d-ac9f-a2f87e65ba1e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdministrativeDistribution_Binding_Soap12_g0</con:interface>
          <con:operation>SendAlertMessage</con:operation>
          <con:request name="Admin Distribution" id="386b83c0-93dc-43c0-b259-3b2b82a8fe67">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityAdminDist}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:emergency:EDXL:DE:1.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Admin Distribution">
      <urn:RespondingGateway_SendAlertMessage>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253987546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>${#TestCase#UserId}</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>80584001</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Psychiatrist</urn1:displayName>
                  <urn1:originalText>Psychiatrist</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PSYCHOTHERAPY</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-09-01T13:00:00.000Z</urn1:authInstant>
               <urn1:sessionIndex>mySessionIndex</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>mySubjectLocalityAddress</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>mySubjectLocalityDns</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>myAuthzDecisionStatementResource</urn1:resource>
               <urn1:action>myAuthzDecisionStatementAction</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>AuthzDecisionStatementEvidenceAssertionId</urn1:id>
                     <urn1:issueInstant>2009-09-02T14:00:00.000Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuer>CN=Mr Saml User,OU=SU,O=Mr SAML Org,L=Chantilly,ST=VA,C=US</urn1:issuer>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>urn:oid:1.2.3.4</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:921853060605</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:507157468547</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:175264679488</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn2:EDXLDistribution>
            <urn2:distributionID>633990682441061250</urn2:distributionID>
            <urn2:senderID>actor@2.16.840.1.113883.3.166</urn2:senderID>
            <urn2:dateTimeSent>2010-08-14T12:18:13.512375-08:00</urn2:dateTimeSent>
            <urn2:distributionStatus>Actual</urn2:distributionStatus>
            <urn2:distributionType>Update</urn2:distributionType>
            <urn2:combinedConfidentiality>Public</urn2:combinedConfidentiality>
            <!--Optional:-->
            <urn2:language>?</urn2:language>
            <!--Zero or more repetitions:-->
            <urn2:senderRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:senderRole>
            <!--Zero or more repetitions:-->
            <urn2:recipientRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:recipientRole>
            <!--Zero or more repetitions:-->
            <urn2:keyword>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:keyword>
            <!--Zero or more repetitions:-->
            <urn2:distributionReference>?</urn2:distributionReference>
            <!--Zero or more repetitions:-->
            <urn2:explicitAddress>
               <urn2:explicitAddressScheme>modified_IHEIntendedRecipient</urn2:explicitAddressScheme>
               <!--1 or more repetitions:-->
               <urn2:explicitAddressValue>^^^^^^^^^2.16.840.1.113883.3.166|0000000001</urn2:explicitAddressValue>
            </urn2:explicitAddress>
            <!--Zero or more repetitions:-->
            <urn2:targetArea>
               <!--Zero or more repetitions:-->
               <urn2:circle>?</urn2:circle>
               <!--Zero or more repetitions:-->
               <urn2:polygon>?</urn2:polygon>
               <!--Zero or more repetitions:-->
               <urn2:country>?</urn2:country>
               <!--Zero or more repetitions:-->
               <urn2:subdivision>?</urn2:subdivision>
               <!--Zero or more repetitions:-->
               <urn2:locCodeUN>?</urn2:locCodeUN>
            </urn2:targetArea>
            <!--Zero or more repetitions:-->
            <urn2:contentObject>
               <!--Optional:-->
               <urn2:contentDescription>PH Alert Message</urn2:contentDescription>
               <!--Zero or more repetitions:-->
               <urn2:contentKeyword>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:contentKeyword>
               <!--Optional:-->
               <urn2:incidentID>TEST</urn2:incidentID>
               <!--Optional:-->
               <urn2:incidentDescription>This is a test message</urn2:incidentDescription>
               <!--Zero or more repetitions:-->
               <urn2:originatorRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:originatorRole>
               <!--Zero or more repetitions:-->
               <urn2:consumerRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:consumerRole>
               <!--Optional:-->
               <urn2:confidentiality>Public</urn2:confidentiality>
               <!--You have a CHOICE of the next 2 items at this level-->
    <urn2:nonXMLContent>
                  <urn2:mimeType>application/pdf</urn2:mimeType>
                  <!--Optional:-->
                  <urn2:size>19</urn2:size>
                  <!--Optional:-->
                  <urn2:digest>?</urn2:digest>
                  <!--Optional:-->
                  <urn2:uri>?</urn2:uri>
                  <!--Optional:-->
                  <urn2:contentData>LDLIHAPIISDALKDF902383K1182K4J49DFNF3KR0482HJ1029F393</urn2:contentData>
               </urn2:nonXMLContent>
               <!--You may enter ANY elements at this point-->
            </urn2:contentObject>
         </urn2:EDXLDistribution>
      </urn:RespondingGateway_SendAlertMessage>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="Wait for Audit table to populate" type="delay" id="9e8e6807-71c3-4926-ad1c-914c8a6164d5">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="7809a306-91c1-4a06-b0f9-d526a7c758ce">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 1 and direction="Nhin Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 2 and direction="Nhin Inbound" and remoteHcid="1.1"')[0]
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

//context.setGatewayStandard(false);
//log.info ("Setting the gateway to Passthrough");</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

//context.setGatewayStandard(true);
//log.info ("Setting the gateway to Standard");</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:51:16Z</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T18:01:16Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:51:16</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="COREX12RealTimeTransaction" searchProperties="true" id="1b6166ee-edc1-4a5a-8962-6d3e6ded4397">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="4f8eb17a-5aad-421e-b242-6a4d09d8c175">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="3443d3dd-c845-410a-83db-c8df9461195f">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="RealTimeTransaction" id="d3a9e147-d602-4df0-8919-1d0bac3cc2e0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityCORETransactionSoapBinding</con:interface>
          <con:operation>RealTimeTransaction</con:operation>
          <con:request name="RealTimeTransaction" id="9b6678da-5be6-43cc-83f4-49944b601b0c">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/Gateway/CORE_X12DocumentSubmission/1_0/EntityService/EntityCORETransactionUnsecured</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:cor="http://www.caqh.org/SOAP/WSDL/CORERule2.2.0.xsd" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:RespondingGateway_CrossGatewayRealTimeRequest>
         <cor:COREEnvelopeRealTimeRequest>
            <PayloadType>X12_270_Request_005010X279A1</PayloadType>
            <ProcessingMode>RealTime</ProcessingMode>
            <PayloadID>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</PayloadID>
            <TimeStamp>2007-08-30T10:20:34Z</TimeStamp>
            <SenderID>HospitalA</SenderID>
            <ReceiverID>PayerB</ReceiverID>
            <CORERuleVersion>2.2.0</CORERuleVersion>
            <Payload>${#TestCase#X12RealTimePayload}</Payload>
         </cor:COREEnvelopeRealTimeRequest>
        <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <!--Optional:-->
        <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayRealTimeRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" name="SOAP Response" id="11611b20-92b3-4bfa-9782-126749ee590b"/>
            <con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c035d362-fc08-4912-9d2e-2c769ce0890f"/>
            <con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="ca61407d-b007-4a06-904a-b55cb5491cc1">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{http://schemas.xmlsoap.org/wsdl/}RealTimeTransaction" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="7346a908-c596-4172-b37d-938fad9a1094">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="8845ff85-4918-48d9-b290-6058585f59c0">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSRealTime', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSRealTime', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="50379ab3-d748-4a1f-b5e7-153804aa85db">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12RealTime') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12RealTime') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     }
        	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	    assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
	     }
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{	
	assert it.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	assert it.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	if(!it.ParticipantObjectDetail.@value.isEmpty()){
		//Commented until script gets fixed to validate decoded values
		//assert it.ParticipantObjectDetail.@value == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectDetail.@value" ) 
	}
} 
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="1aa9f9d6-6ded-4c92-af0e-c5765ec222af">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12RealTime') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12RealTime') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode.Create" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName.Inbound" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
          assert(!node.@UserID.isEmpty())
      	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor")
      	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert(!node.@UserID.isEmpty())
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{	
	assert it.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID.response" )
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	assert it.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID.response" )
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	if(!it.ParticipantObjectDetail.@value.isEmpty()){
		//Commented until script gets fixed to validate decoded values
		//assert it.ParticipantObjectDetail.@value == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectDetail.@value.inbound" ) 
	}
 } 
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSRealTime',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="008a54aa-8306-4e60-a48a-a5c7a6ea0299">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/COREX12RealTimeTransaction.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.5</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Public Health</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/CORE_X12DocumentSubmission/1_0/X12DocumentSubmission_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:58:54Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode.Create</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName.Import</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName.Inbound</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>X12</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>NwHIN CAQH CORE X12 Document Submission</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID.inbound</con:name>
          <con:value>a81d44ae-7dec-11d0-a765-00a0c91e6ba0</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID.response</con:name>
          <con:value>a81d44ae-7dec-11d0-a765-00a0c91e6ba0</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value.inbound</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXNwb25zZSB4bWxuczpuczI9Imh0dHA6Ly93d3cuY2FxaC5vcmcvU09BUC9XU0RML0NPUkVSdWxlMi4yLjAueHNkIiB4bWxuczpuczM9InVybjpvcmc6Y2FxaDpzb2FwOndzZGw6Y29yZXJ1bGUyXzJfMCI+PFBheWxvYWRUeXBlPkNvcmVFbnZlbG9wZUVycm9yPC9QYXlsb2FkVHlwZT48UHJvY2Vzc2luZ01vZGU+UmVhbFRpbWU8L1Byb2Nlc3NpbmdNb2RlPjxQYXlsb2FkSUQ+ZjgxZDRmYWUtN2RlYy0xMWQwLWE3NjUtMDBhMGM5MWU2YmY2PC9QYXlsb2FkSUQ+PFRpbWVTdGFtcD4yMDE1LTExLTA2IDA2OjMwOjA2LjczNTwvVGltZVN0YW1wPjxTZW5kZXJJRD5Ib3NwaXRhbEE8L1NlbmRlcklEPjxSZWNlaXZlcklEPlBheWVyQjwvUmVjZWl2ZXJJRD48Q09SRVJ1bGVWZXJzaW9uPjIuMi4wPC9DT1JFUnVsZVZlcnNpb24+PFBheWxvYWQ+PC9QYXlsb2FkPjxFcnJvckNvZGU+UmVjZWl2ZXI8L0Vycm9yQ29kZT48RXJyb3JNZXNzYWdlPkZhaWxlZCB0byBjb25uZWN0IHRvIGJhY2tlbmQgYWRhcHRlciB0byBwcm9jZXNzIHRoZSBtZXNzYWdlPC9FcnJvck1lc3NhZ2U+PC9uczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXNwb25zZT4=</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code.inbound</con:name>
          <con:value>a81d44ae-7dec-11d0-a765-00a0c91e6ba0</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Connectivity Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Payload Identifier</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:48:54</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:48:54Z</con:value>
        </con:property>
        <con:property>
          <con:name>X12RealTimePayload</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxDbGluaWNhbERvY3VtZW50IG1vb2RDb2RlPSJFVk4iIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyINCiAgICB4bWxuczp4c2k9Imh0</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="COREX12BatchSubmitRequest" searchProperties="true" id="3f784de6-1c71-4791-b592-e2db4c2a41d5">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="d6be760e-4908-4bc2-99c7-38c94599a281">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="c004c12b-1297-4294-b583-113ff4859cf6">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="BatchSubmitTransaction" id="f300d214-aa28-48af-9146-aa4d6b193921">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityCOREGenericBatchTransactionSoapBinding</con:interface>
          <con:operation>BatchSubmitTransaction</con:operation>
          <con:request name="BatchSubmitTransaction" id="ec3f7c3e-b47f-410e-b517-c365ada663c9">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/Gateway/CORE_X12DocumentSubmission/1_0/EntityService/EntityCOREGenericBatchRequestUnsecured</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:cor="http://www.caqh.org/SOAP/WSDL/CORERule2.2.0.xsd" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:RespondingGateway_CrossGatewayBatchSubmissionRequest>
         <cor:COREEnvelopeBatchSubmission>
            <PayloadType>X12_270_Request_005010X279A1</PayloadType>
            <ProcessingMode>Batch</ProcessingMode>
            <PayloadID>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</PayloadID>
            <PayloadLength>1551254</PayloadLength>
            <TimeStamp>2007-08-30T10:20:34Z</TimeStamp>
            <SenderID>HospitalA</SenderID>
            <ReceiverID>PayerB</ReceiverID>
            <CORERuleVersion>2.2.0</CORERuleVersion>
            <CheckSum>43B8485AB5</CheckSum>
            <Payload>${#TestCase#X12GenericBatchPayload}</Payload>       
         </cor:COREEnvelopeBatchSubmission>
        <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <!--Optional:-->
        <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayBatchSubmissionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" name="SOAP Response" id="2aa311b9-6754-4854-afdb-f14b7623da43"/>
            <con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="eac53b8f-c995-4253-a73d-227cd1255669"/>
            <con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="a770b317-4b3a-4717-8aaf-3c9500087d69">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{http://schemas.xmlsoap.org/wsdl/}BatchSubmitTransaction" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="d2073dbf-41df-406c-a571-4aa9ac8ec133">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="5f2a20a9-b0d2-4f97-905a-64e5c59c297e">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchRequest', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "Verify Message-NhinOutbound-InitiatingGateway(2.2)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchRequest', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Message-NhinOutbound-InitiatingGateway(2.2)" id="4454b349-6362-49ea-81ca-59765cfe554e">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID")
	     }
        	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
   	    	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
	     }
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{
	assert it.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	assert it.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	//we are going to just check if the X12 Envelope value is not null, since the payload id is going to unique for each response
	assert(!it.ParticipantObjectDetail.@value.isEmpty())
} 
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Message-NhinInbound-RespondingGateway(1.1)" id="7529c37f-3254-44dd-8dc8-d0c2ab19c7ac">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Inbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Inbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode.Create" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName.Inbound" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
   	    assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	      assert(!node.@UserID.isEmpty())
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{
	assert(!it.@ParticipantObjectID.isEmpty())
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	assert (!it.ParticipantObjectIDTypeCode.@code.isEmpty())
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	//we are going to just check if the X12 Envelope value is not null, since the payload id is going to unique for each response
	assert(!it.ParticipantObjectDetail.@value.isEmpty())
} 
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchRequest',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="de749763-ad95-4184-9bfc-75059bb3dbbe">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/COREX12BatchSubmitRequest.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Public Health</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/CORE_X12DocumentSubmission/1_0/GenericBatchRequestTransaction_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T17:55:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode.Create</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName.Inbound</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>X12</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>NwHIN CAQH CORE X12 Document Submission</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID.inbound</con:name>
          <con:value>a81d44ae-7dec-11d0-a765-00a0c91e6ba0</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID.response</con:name>
          <con:value>a81d44ae-7dec-11d0-a765-00a0c91e6ba0</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Connectivity Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Payload Identifier</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:45:36</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:45:36Z</con:value>
        </con:property>
        <con:property>
          <con:name>X12GenericBatchPayload</con:name>
          <con:value>cid:60987661826</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="COREX12BatchSubmitResponse" searchProperties="true" id="a0a08ba6-6ed3-4fc7-bcb0-fa781265bef8">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="432289d7-ac5e-4b2b-9c1b-7727a05bca7f">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="b6f2ad3f-ddeb-4347-a0b2-06dd2b135921">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="BatchSubmitTransaction" id="aae3ac29-535c-4b12-9f16-1a8be9eec3b1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityCOREGenericBatchTransactionSoapBinding</con:interface>
          <con:operation>BatchSubmitTransaction</con:operation>
          <con:request name="BatchSubmitTransaction" id="f410dd1a-48c8-4523-90b3-5eee166480ff">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/Gateway/CORE_X12DocumentSubmission/1_0/EntityService/EntityCOREGenericBatchResponseUnsecured</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:cor="http://www.caqh.org/SOAP/WSDL/CORERule2.2.0.xsd" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:RespondingGateway_CrossGatewayBatchSubmissionRequest>
         <cor:COREEnvelopeBatchSubmission>
            <PayloadType>X12_270_Request_005010X279A1</PayloadType>
            <ProcessingMode>Batch</ProcessingMode>
            <PayloadID>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</PayloadID>
            <PayloadLength>1551254</PayloadLength>
            <TimeStamp>2007-08-30T10:20:34Z</TimeStamp>
            <SenderID>HospitalA</SenderID>
            <ReceiverID>PayerB</ReceiverID>
            <CORERuleVersion>2.2.0</CORERuleVersion>
            <CheckSum>43B8485AB5</CheckSum>
            <Payload>${#TestCase#X12GenericBatchPayload}</Payload>
         </cor:COREEnvelopeBatchSubmission>
        <urn:assertion>          
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>TREATMENT</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:messageId>?</urn1:messageId>
            <!--Zero or more repetitions:-->
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <!--Optional:-->
        <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayBatchSubmissionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" name="SOAP Response" id="7676790e-ba02-443c-a374-1317b12f72b6"/>
            <con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4f41f190-0605-4154-a6af-6f00539632c6"/>
            <con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="86d72272-c88d-4a62-b5bd-d2b2fdd0f507">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{http://schemas.xmlsoap.org/wsdl/}BatchSubmitTransaction" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="c07745f6-88a7-4dee-adde-fc72f9dfc09a">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="20ec8422-75b2-4ebb-9cdc-9718cb060aba">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchResponse', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "Verify Message-NhinOutbound-InitiatingGateway(2.2))")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchResponse', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Message-NhinOutbound-InitiatingGateway(2.2)" id="e7fe295b-d31a-45e0-93bc-1ce31f98a2b1">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     }
        	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	     //Commenting out until code push for FHAC-652
   	     //if(!node.@UserName.isEmpty()){
	     //	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserNamee" )
	     //}
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){          	
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
	     }
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}

          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{
	assert it.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	assert it.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	//we are going to just check if the X12 Envelope value is not null, since the payload id is going to unique for each response
	assert(!it.ParticipantObjectDetail.@value.isEmpty())
} 
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Message-NhinInbound-RespondingGateway(1.1)" id="8d657c40-26d1-487f-83f3-b0e419232e6a">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Inbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeX12BatchRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Inbound)

assert(!userId_Inbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode.Create" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName.Inbound" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	    assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )   
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert(!node.@UserID.isEmpty())
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}

          if(!node.RoleIDCode.isEmpty()){
     		assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     		assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
	     }
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
parsedXmlMessage.ParticipantObjectIdentification.find{
	assert (!it.@ParticipantObjectID.isEmpty())
	assert it.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
	assert it.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
     assert (!it.ParticipantObjectIDTypeCode.@code.isEmpty())
	assert it.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
	assert it.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	assert (!it.ParticipantObjectDetail.@value.isEmpty())
} 
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'CORE_X12DSGenericBatchResponse',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="8e8952c8-a881-4776-8162-32993b3cb6c6">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/COREX12BatchSubmitResponse.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Public Health</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/CORE_X12DocumentSubmission/1_0/GenericBatchResponseTransaction_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2018-06-20T18:00:04Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode.Create</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName.Inbound</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>X12</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>NwHIN CAQH CORE X12 Document Submission</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2018-07-20T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>f81d4fae-7dec-11d0-a765-00a0c91e6bf6</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>CAQH CORE Connectivity Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Payload Identifier</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>06/20/2018 17:50:04</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2018-06-20T17:50:04Z</con:value>
        </con:property>
        <con:property>
          <con:name>X12GenericBatchPayload</con:name>
          <con:value>cid:60987661826</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>Endpoint-DocQuery</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentQuery/2_0/EntityService/EntityDocQueryUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DocRetrieve</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentRetrieve/2_0/EntityService/EntityDocRetrieve</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DSDeferredResp</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityAdminDist</con:name>
        <con:value>http://localhost:8080/Gateway/AdminDistribution/1_0/AdministrativeDistribution_Service</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityXDRRequest</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscovery</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDREntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDSEntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentDataSubmission/1_1/EntityService/EntityDocDataSubmissionUnsecured</con:value>
      </con:property>
    </con:properties>
    <con:setupScript/>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties>
    <con:property>
      <con:name>AAMappingDB</con:name>
      <con:value>assigningauthoritydb</con:value>
    </con:property>
    <con:property>
      <con:name>AAMappingTable</con:name>
      <con:value>aa_to_home_community_mapping</con:value>
    </con:property>
    <con:property>
      <con:name>ASPassword</con:name>
      <con:value>adminadmin</con:value>
    </con:property>
    <con:property>
      <con:name>ASUsername</con:name>
      <con:value>admin</con:value>
    </con:property>
    <con:property>
      <con:name>AsyncMsgDB</con:name>
      <con:value>asyncmsgs</con:value>
    </con:property>
    <con:property>
      <con:name>AsyncMsgTable</con:name>
      <con:value>asyncmsgrepo</con:value>
    </con:property>
    <con:property>
      <con:name>auditLoggingStatusFileName</con:name>
      <con:value>audit.properties</con:value>
    </con:property>
    <con:property>
      <con:name>AuditMessage.xmlns</con:name>
      <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
    </con:property>
    <con:property>
      <con:name>AuditRepoDB</con:name>
      <con:value>auditrepo</con:value>
    </con:property>
    <con:property>
      <con:name>AuditRepoTable</con:name>
      <con:value>auditrepository</con:value>
    </con:property>
    <con:property>
      <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
      <con:value>urn:oid:1.1</con:value>
    </con:property>
    <con:property>
      <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
      <con:value>1.1</con:value>
    </con:property>
    <con:property>
      <con:name>BirthTime</con:name>
      <con:value>19630804</con:value>
    </con:property>
    <con:property>
      <con:name>City</con:name>
      <con:value>Melbourne</con:value>
    </con:property>
    <con:property>
      <con:name>Country</con:name>
      <con:value>US</con:value>
    </con:property>
    <con:property>
      <con:name>DBHost</con:name>
      <con:value>localhost</con:value>
    </con:property>
    <con:property>
      <con:name>DBPass</con:name>
      <con:value>nhincpass</con:value>
    </con:property>
    <con:property>
      <con:name>DBPort</con:name>
      <con:value>3306</con:value>
    </con:property>
    <con:property>
      <con:name>DBUser</con:name>
      <con:value>nhincuser</con:value>
    </con:property>
    <con:property>
      <con:name>DeferredPatientDiscoveryReqMessageID</con:name>
      <con:value>uuid:6666666666.66666.666.66</con:value>
    </con:property>
    <con:property>
      <con:name>DOB</con:name>
      <con:value>19800516</con:value>
    </con:property>
    <con:property>
      <con:name>DQDocID</con:name>
      <con:value>1.123401.11111</con:value>
    </con:property>
    <con:property>
      <con:name>DQPatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>DRDocID</con:name>
      <con:value>1.123407.777777</con:value>
    </con:property>
    <con:property>
      <con:name>DRRepoID</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:property>
      <con:name>DynamicDQDocID</con:name>
      <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
    </con:property>
    <con:property>
      <con:name>ExpirationDate</con:name>
      <con:value>20100520</con:value>
    </con:property>
    <con:property>
      <con:name>FamilyName</con:name>
      <con:value>Younger</con:value>
    </con:property>
    <con:property>
      <con:name>GatewayPropDir</con:name>
      <con:value></con:value>
    </con:property>
    <con:property>
      <con:name>Gender</con:name>
      <con:value>M</con:value>
    </con:property>
    <con:property>
      <con:name>GivenName</con:name>
      <con:value>Gallow</con:value>
    </con:property>
    <con:property>
      <con:name>JMXHost</con:name>
      <con:value>localhost</con:value>
    </con:property>
    <con:property>
      <con:name>JMXPort</con:name>
      <con:value>9990</con:value>
    </con:property>
    <con:property>
      <con:name>LocalAA</con:name>
      <con:value>1.1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalHCDescription</con:name>
      <con:value>InternalTest1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalHCID</con:name>
      <con:value>1.1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalPatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>NotifySubscriptionID</con:name>
      <con:value>f2064549-c802-41be-bb0d-6319c6437072</con:value>
    </con:property>
    <con:property>
      <con:name>PatientCorrelationDB</con:name>
      <con:value>patientcorrelationdb</con:value>
    </con:property>
    <con:property>
      <con:name>PatientCorrelationTable</con:name>
      <con:value>correlatedidentifiers</con:value>
    </con:property>
    <con:property>
      <con:name>project.name</con:name>
      <con:value>EntityValidation</con:value>
    </con:property>
    <con:property>
      <con:name>PurposeOfDisclosure</con:name>
      <con:value>Mental</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteAA</con:name>
      <con:value>2.2</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteHCDescription</con:name>
      <con:value>InternalTest2</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteHCID</con:name>
      <con:value>2.2</con:value>
    </con:property>
    <con:property>
      <con:name>RemotePatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>SSN</con:name>
      <con:value>123456789</con:value>
    </con:property>
    <con:property>
      <con:name>State</con:name>
      <con:value>FL</con:value>
    </con:property>
    <con:property>
      <con:name>StreetAddress</con:name>
      <con:value>123 Johnson Rd</con:value>
    </con:property>
    <con:property>
      <con:name>SubjectID</con:name>
      <con:value>1111</con:value>
    </con:property>
    <con:property>
      <con:name>SubscribePatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>SubscriptionDB</con:name>
      <con:value>subscriptionrepository</con:value>
    </con:property>
    <con:property>
      <con:name>SubscriptionTable</con:name>
      <con:value>subscription</con:value>
    </con:property>
    <con:property>
      <con:name>UniquePatientId</con:name>
      <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
    </con:property>
    <con:property>
      <con:name>UnSubscriptionID</con:name>
      <con:value>664f3c6e-ea88-4dae-a88e-b58661d8c253</con:value>
    </con:property>
    <con:property>
      <con:name>ZipCode</con:name>
      <con:value>12345</con:value>
    </con:property>
    <con:property>
      <con:name>MessageID</con:name>
      <con:value>urn:uuid:6666666666.66666.666.66</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmissionDefReq</con:name>
      <con:value>DocSubmissionDeferredReq</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmissionDefRes</con:name>
      <con:value>DocSubmissionDeferredResp</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmission</con:name>
      <con:value>DocSubmission</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocDataSubmission</con:name>
      <con:value>DocDataSubmission</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePDDefReq</con:name>
      <con:value>PatientDiscoveryDeferredReq</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePDDefRes</con:name>
      <con:value>PatientDiscoveryDeferredResp</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePD</con:name>
      <con:value>PatientDiscovery</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDQ</con:name>
      <con:value>QueryForDocuments</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDR</con:name>
      <con:value>RetrieveDocuments</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeX12RealTime</con:name>
      <con:value>CORE_X12DSRealTime</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeX12BatchReq</con:name>
      <con:value>CORE_X12DSGenericBatchRequest</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeX12BatchRes</con:name>
      <con:value>CORE_X12DSGenericBatchResponse</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePatientLocationQuery</con:name>
      <con:value>PatientLocationQuery</con:value>
    </con:property>    
  </con:properties>
  <con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileInputStream(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}


TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
  afterRun: { testRunner, runContext -> },
  afterStep: { testRunner, runContext, result -> },
  beforeStep: { testRunner, runContext -> },
  beforeStep: { testRunner, runContext, testStep -> },
  beforeRun: { testRunner, runContext -> 
    use (org.codehaus.groovy.runtime.TimeCategory) {
      def startDate = 5.minutes.ago
      def endDate = 5.minutes.from.now
      def expireDate = 30.days.from.now

      def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
      def dfSig = "MM/dd/yyyy' 'HH:mm:ss"

      runContext.testCase.setPropertyValue("startDate", startDate.format(df))
      runContext.testCase.setPropertyValue("endDate", endDate.format(df))
      runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
      runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
    }
  }   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
    return delegate.getProperty(propertyName) ?:
                delegate.testCase.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.project.getPropertyValue(propertyName) ?:
                com.eviware.soapui.SoapUI.globalProperties.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
  def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
  def host = delegate.findProperty('DBHost')
  def port = delegate.findProperty('DBPort')
  def user = delegate.findProperty('DBUser')
  def pass = delegate.findProperty('DBPass')
  
  def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
  def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
  try {
     block(sql)
  } finally {
    sql.close()
  }
}

import javax.management.remote.JMXConnectorFactory as JmxFactory
import javax.management.remote.JMXServiceURL as JmxUrl
import javax.management.remote.*;

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.getConfiguration = { ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");

  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ]
  def serverUrl = 'service:jmx:http-remoting-jmx://'+jmxHost+ ':' + jmxPort;
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env).MBeanServerConnection
  def config = new GroovyMBean(server, 'org.connectopensource.mbeans:type=Configuration');
  return config;
}
com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.setGatewayStandard = { standard ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
  def serverUrl = 'service:jmx:http-remoting-jmx://'+jmxHost+ ':' + jmxPort;
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
    if (standard){
    config.setStandardMode();
  }
  else{
     config.setPassthruMode();
  }
  server.close();
  return true;
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.isStandard = { serviceName, direction ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
 def serverUrl = 'service:jmx:http-remoting-jmx://'+jmxHost+ ':' + jmxPort;

  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
  def isStandard = config.isStandard(serviceName, direction);
  server.close();
  return isStandard;
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.setGatewayStandard = { standard, serviceName, direction ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  log.info "Value of the Param Name -->"+name;
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
 def serverUrl = 'service:jmx:http-remoting-jmx://'+jmxHost+ ':' + jmxPort;
  log.info "Standard valud-->"+standard
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
    if (standard){
    config.setStandardMode(serviceName, direction);
  }
  else{
     config.setPassthruMode(serviceName, direction);
  }
  server.close();
  return true;
}
/*
 Return true if gateway.properties have standard mode set up
*/
com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.checkGatewayMode = {passthruProp, context ->
  log.info "calling checkGatewayMode for ${passthruProp}";
  def dir = context.findProperty('GatewayPropDir');
  def file = "gateway.properties";
  log.info "PassthruPro ${passthruProp} ";
  def passthruValue = nhinc.FileUtils.readProperty(dir, file, passthruProp, log);
  log.info "Passthrough property value = ${passthruValue} for key ${passthruProp}";
  if(passthruValue == null){
    return true;
  }else{
    return false;
   }
}</con:afterLoadScript>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>