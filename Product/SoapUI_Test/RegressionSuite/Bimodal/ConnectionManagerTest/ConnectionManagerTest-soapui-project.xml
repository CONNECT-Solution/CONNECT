<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project abortOnError="false" name="ConnectionManagerTest" resourceRoot="${projectDir}" runType="SEQUENTIAL" soapui-version="4.5.1" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config">
	<con:settings/>
	<con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager}NhincComponentConnectionManagerBindingSoap" definition="../../../target/wsdl/NhincComponentConnectionManager.wsdl" name="NhincComponentConnectionManagerBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:settings/>
		<con:definitionCache type="TEXT" rootPart="file:/C:/CONNECT/Product/SoapUI_Test/target/wsdl/NhincComponentConnectionManager.wsdl"><con:part><con:url>file:/C:/CONNECT/Product/SoapUI_Test/target/wsdl/NhincComponentConnectionManager.wsdl</con:url><con:content><![CDATA[<definitions name="ConnectionManagerService" targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager" xmlns:conninfo="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:uddi="urn:uddi-org:api_v3">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" schemaLocation="../schemas/nhinc/common/ConnectionManagerInfo.xsd"/>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="../schemas/nhinc/common/NhincCommon.xsd"/>
      <xsd:import namespace="urn:uddi-org:api_v3" schemaLocation="../schemas/uddi/uddi_v3.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <message name="GetAllBusinessEntitiesRequestMessage">
    <part name="body" element="conninfo:GetAllBusinessEntitiesRequest"/>
  </message>
  <message name="GetAllBusinessEntitiesResponseMessage">
    <part name="body" element="conninfo:GetAllBusinessEntitiesResponse"/>
  </message>
  <message name="GetBusinessEntityRequestMessage">
    <part name="body" element="conninfo:GetBusinessEntityRequest"/>
  </message>
  <message name="GetBusinessEntityResponseMessage">
    <part name="body" element="conninfo:GetBusinessEntityResponse"/>
  </message>
  <message name="GetBusinessEntitySetRequestMessage">
    <part name="body" element="conninfo:GetBusinessEntitySetRequest"/>
  </message>
  <message name="GetBusinessEntitySetResponseMessage">
    <part name="body" element="conninfo:GetBusinessEntitySetResponse"/>
  </message>
  <message name="GetBusinessEntityByServiceNameRequestMessage">
    <part name="body" element="conninfo:GetBusinessEntityByServiceNameRequest"/>
  </message>
  <message name="GetBusinessEntityByServiceNameResponseMessage">
    <part name="body" element="conninfo:GetBusinessEntityByServiceNameResponse"/>
  </message>
  <message name="GetDefaultEndpointURLByServiceNameRequestMessage">
    <part name="body" element="conninfo:GetDefaultEndpointURLByServiceNameRequest"/>
  </message>
  <message name="GetDefaultEndpointURLByServiceNameResponseMessage">
    <part name="body" element="conninfo:GetDefaultEndpointURLByServiceNameResponse"/>
  </message>
  <message name="GetInternalEndpointURLByServiceNameRequestMessage">
    <part name="body" element="conninfo:GetInternalEndpointURLByServiceNameRequest"/>
  </message>
  <message name="GetInternalEndpointURLByServiceNameResponseMessage">
    <part name="body" element="conninfo:GetInternalEndpointURLByServiceNameResponse"/>
  </message>
  <message name="GetEndpointURLFromNhinTargetRequestMessage">
    <part name="body" element="conninfo:GetEndpointURLFromNhinTargetRequest"/>
  </message>
  <message name="GetEndpointURLFromNhinTargetResponseMessage">
    <part name="body" element="conninfo:GetEndpointURLFromNhinTargetResponse"/>
  </message>
  <message name="GetEndpointURLFromNhinTargetCommunitiesRequestMessage">
    <part name="body" element="conninfo:GetEndpointURLFromNhinTargetCommunitiesRequest"/>
  </message>
  <message name="GetEndpointURLFromNhinTargetCommunitiesResponseMessage">
    <part name="body" element="conninfo:GetEndpointURLFromNhinTargetCommunitiesResponse"/>
  </message>
  <message name="GetBusinessEntitySetByServiceNameRequestMessage">
    <part name="GetBusinessEntitySetByServiceNameRequest" element="conninfo:GetBusinessEntitySetByServiceNameRequest"/>
  </message>
  <message name="GetBusinessEntitySetByServiceNameResponseMessage">
    <part name="body" element="conninfo:GetBusinessEntitySetByServiceNameResponse"/>
  </message>
  <message name="GetAllBusinessEntitySetByServiceNameRequestMessage">
    <part name="body" element="conninfo:GetAllBusinessEntitySetByServiceNameRequest"/>
  </message>
  <message name="GetAllBusinessEntitySetByServiceNameResponseMessage">
    <part name="body" element="conninfo:GetAllBusinessEntitySetByServiceNameResponse"/>
  </message>
  <message name="GetAdapterEndpointURLRequestMessage">
    <part name="body" element="conninfo:GetAdapterEndpointURLRequest"/>
  </message>
  <message name="GetAdapterEndpointURLResponseMessage">
    <part name="body" element="conninfo:GetAdapterEndpointURLResponse"/>
  </message>
  <message name="ForceRefreshUDDICacheRequestMessage">
    <part name="body" element="conninfo:ForceRefreshUDDICacheRequest"/>
  </message>
  <message name="ForceRefreshUDDICacheResponseMessage">
    <part name="body" element="conninfo:ForceRefreshUDDICacheResponse"/>
  </message>
  <message name="ForceRefreshInternalConnectCacheRequestMessage">
    <part name="body" element="conninfo:ForceRefreshInternalConnectCacheRequest"/>
  </message>
  <message name="ForceRefreshInternalConnectCacheResponseMessage">
    <part name="body" element="conninfo:ForceRefreshInternalConnectCacheResponse"/>
  </message>
  <message name="GetAssigningAuthoritiesByHomeCommunityRequestMessage">
    <part name="body" element="conninfo:GetAssigningAuthoritiesByHomeCommunityRequest"/>
  </message>
  <message name="GetAssigningAuthoritiesByHomeCommunityResponseMessage">
    <part name="body" element="conninfo:GetAssigningAuthoritiesByHomeCommunityResponse"/>
  </message>
  <message name="GetHomeCommunityByAssigningAuthorityRequestMessage">
    <part name="body" element="conninfo:GetHomeCommunityByAssigningAuthorityRequest"/>
  </message>
  <message name="GetHomeCommunityByAssigningAuthorityResponseMessage">
    <part name="body" element="conninfo:GetHomeCommunityByAssigningAuthorityResponse"/>
  </message>
  <portType name="NhincComponentConnectionManagerPortType">
    <operation name="GetAllBusinessEntities">
      <input name="GetAllBusinessEntitiesRequest" message="tns:GetAllBusinessEntitiesRequestMessage"/>
      <output name="GetAllBusinessEntitiesResponse" message="tns:GetAllBusinessEntitiesResponseMessage"/>
    </operation>
    <operation name="GetBusinessEntity">
      <input name="GetBusinessEntityRequest" message="tns:GetBusinessEntityRequestMessage"/>
      <output name="GetBusinessEntityResponse" message="tns:GetBusinessEntityResponseMessage"/>
    </operation>
    <operation name="GetBusinessEntitySet">
      <input name="GetBusinessEntitySetRequest" message="tns:GetBusinessEntitySetRequestMessage"/>
      <output name="GetBusinessEntitySetResponse" message="tns:GetBusinessEntitySetResponseMessage"/>
    </operation>
    <operation name="GetBusinessEntityByServiceName">
      <input name="GetBusinessEntityByServiceNameRequest" message="tns:GetBusinessEntityByServiceNameRequestMessage"/>
      <output name="GetBusinessEntityByServiceNameResponse" message="tns:GetBusinessEntityByServiceNameResponseMessage"/>
    </operation>
    <operation name="GetDefaultEndpointURLByServiceName">
      <input name="GetDefaultEndpointURLByServiceNameRequest" message="tns:GetDefaultEndpointURLByServiceNameRequestMessage"/>
      <output name="GetDefaultEndpointURLByServiceNameResponse" message="tns:GetDefaultEndpointURLByServiceNameResponseMessage"/>
    </operation>
    <operation name="GetInternalEndpointURLByServiceName">
      <input name="GetInternalEndpointURLByServiceNameRequest" message="tns:GetInternalEndpointURLByServiceNameRequestMessage"/>
      <output name="GetInternalEndpointURLByServiceNameResponse" message="tns:GetInternalEndpointURLByServiceNameResponseMessage"/>
    </operation>
    <operation name="GetEndpointURLFromNhinTarget">
      <input name="GetEndpointURLFromNhinTargetRequest" message="tns:GetEndpointURLFromNhinTargetRequestMessage"/>
      <output name="GetEndpointURLFromNhinTargetResponse" message="tns:GetEndpointURLFromNhinTargetResponseMessage"/>
    </operation>
    <operation name="GetEndpointURLFromNhinTargetCommunities">
      <input name="GetEndpointURLFromNhinTargetCommunitiesRequest" message="tns:GetEndpointURLFromNhinTargetCommunitiesRequestMessage"/>
      <output name="GetEndpointURLFromNhinTargetCommunitiesResponse" message="tns:GetEndpointURLFromNhinTargetCommunitiesResponseMessage"/>
    </operation>
    <operation name="GetBusinessEntitySetByServiceName">
      <input name="GetBusinessEntitySetByServiceNameRequest" message="tns:GetBusinessEntitySetByServiceNameRequestMessage"/>
      <output name="GetBusinessEntitySetByServiceNameResponse" message="tns:GetBusinessEntitySetByServiceNameResponseMessage"/>
    </operation>
    <operation name="GetAllBusinessEntitySetByServiceName">
      <input name="GetAllBusinessEntitySetByServiceNameRequest" message="tns:GetAllBusinessEntitySetByServiceNameRequestMessage"/>
      <output name="GetAllBusinessEntitySetByServiceNameResponse" message="tns:GetAllBusinessEntitySetByServiceNameResponseMessage"/>
    </operation>
    <operation name="GetAdapterEndpointURL">
      <input name="GetAdapterEndpointURLRequest" message="tns:GetAdapterEndpointURLRequestMessage"/>
      <output name="GetAdapterEndpointURLResponse" message="tns:GetAdapterEndpointURLResponseMessage"/>
    </operation>
    <operation name="ForceRefreshUDDICache">
      <input name="ForceRefreshUDDICacheRequest" message="tns:ForceRefreshUDDICacheRequestMessage"/>
      <output name="ForceRefreshUDDICacheResponse" message="tns:ForceRefreshUDDICacheResponseMessage"/>
    </operation>
    <operation name="ForceRefreshInternalConnectCache">
      <input name="ForceRefreshInternalConnectCacheRequest" message="tns:ForceRefreshInternalConnectCacheRequestMessage"/>
      <output name="ForceRefreshInternalConnectCacheResponse" message="tns:ForceRefreshInternalConnectCacheResponseMessage"/>
    </operation>
    <operation name="GetAssigningAuthoritiesByHomeCommunity">
      <input name="GetAssigningAuthoritiesByHomeCommunityRequest" message="tns:GetAssigningAuthoritiesByHomeCommunityRequestMessage"/>
      <output name="GetAssigningAuthoritiesByHomeCommunityResponse" message="tns:GetAssigningAuthoritiesByHomeCommunityResponseMessage"/>
    </operation>
    <operation name="GetHomeCommunityByAssigningAuthority">
      <input name="GetHomeCommunityByAssigningAuthorityRequest" message="tns:GetHomeCommunityByAssigningAuthorityRequestMessage"/>
      <output name="GetHomeCommunityByAssigningAuthorityResponse" message="tns:GetHomeCommunityByAssigningAuthorityResponseMessage"/>
    </operation>
  </portType>
  <binding name="NhincComponentConnectionManagerBindingSoap" type="tns:NhincComponentConnectionManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="GetAllBusinessEntities">
      <soap:operation soapAction="urn:GetAllBusinessEntities"/>
      <input name="GetAllBusinessEntitiesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAllBusinessEntitiesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntity">
      <soap:operation soapAction="urn:GetBusinessEntity"/>
      <input name="GetBusinessEntityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntitySet">
      <soap:operation soapAction="urn:GetBusinessEntitySet"/>
      <input name="GetBusinessEntitySetRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntitySetResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntityByServiceName">
      <soap:operation soapAction="urn:GetBusinessEntityByServiceName"/>
      <input name="GetBusinessEntityByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntityByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultEndpointURLByServiceName">
      <soap:operation soapAction="urn:GetDefaultEndpointURLByServiceName"/>
      <input name="GetDefaultEndpointURLByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetDefaultEndpointURLByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetInternalEndpointURLByServiceName">
      <soap:operation soapAction="urn:GetInternalEndpointURLByServiceName"/>
      <input name="GetInternalEndpointURLByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetInternalEndpointURLByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEndpointURLFromNhinTarget">
      <soap:operation soapAction="urn:GetEndpointURLFromNhinTarget"/>
      <input name="GetEndpointURLFromNhinTargetRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetEndpointURLFromNhinTargetResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEndpointURLFromNhinTargetCommunities">
      <soap:operation soapAction="urn:GetEndpointURLFromNhinTargetCommunities"/>
      <input name="GetEndpointURLFromNhinTargetCommunitiesRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetEndpointURLFromNhinTargetCommunitiesResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBusinessEntitySetByServiceName">
      <soap:operation soapAction="urn:GetBusinessEntitySetByServiceName"/>
      <input name="GetBusinessEntitySetByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetBusinessEntitySetByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAllBusinessEntitySetByServiceName">
      <soap:operation soapAction="urn:GetAllBusinessEntitySetByServiceName"/>
      <input name="GetAllBusinessEntitySetByServiceNameRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAllBusinessEntitySetByServiceNameResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAdapterEndpointURL">
      <soap:operation soapAction="urn:GetAdapterEndpointURL"/>
      <input name="GetAdapterEndpointURLRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAdapterEndpointURLResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ForceRefreshUDDICache">
      <soap:operation soapAction="urn:ForceRefreshUDDICache"/>
      <input name="ForceRefreshUDDICacheRequest">
        <soap:body use="literal"/>
      </input>
      <output name="ForceRefreshUDDICacheResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ForceRefreshInternalConnectCache">
      <soap:operation soapAction="urn:ForceRefreshInternalConnectCache"/>
      <input name="ForceRefreshInternalConnectCacheRequest">
        <soap:body use="literal"/>
      </input>
      <output name="ForceRefreshInternalConnectCacheResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAssigningAuthoritiesByHomeCommunity">
      <soap:operation soapAction="urn:GetAssigningAuthoritiesByHomeCommunity"/>
      <input name="GetAssigningAuthoritiesByHomeCommunityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAssigningAuthoritiesByHomeCommunityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetHomeCommunityByAssigningAuthority">
      <soap:operation soapAction="urn:GetHomeCommunityByAssigningAuthority"/>
      <input name="GetHomeCommunityByAssigningAuthorityRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetHomeCommunityByAssigningAuthorityResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="NhincComponentConnectionManager">
    <port name="NhincComponentConnectionManagerPortSoap" binding="tns:NhincComponentConnectionManagerBindingSoap">
      <soap:address location="http://localhost:${HttpDefaultPort}/CONNECTCommon/NhincComponentConnectionManager"/>
    </port>
  </service>
  <plnk:partnerLinkType name="NhincComponentConnectionManager">
    <!--A partner link type is automatically generated when a new port type is added. Partner link types are used by 
            BPEL processes. In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. 
            Each partner link is associated with a partner link type. A partner link type characterizes the conversational relationship 
            between two services. The partner link type can have one or two roles.-->
    <plnk:role name="NhincComponentConnectionManagerPortTypeRole" portType="tns:NhincComponentConnectionManagerPortType"/>
  </plnk:partnerLinkType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\nhinc\common\ConnectionManagerInfo.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:uddi="urn:uddi-org:api_v3">
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="NhincCommon.xsd"/>
  <xsd:import namespace="urn:uddi-org:api_v3" schemaLocation="../../uddi/uddi_v3.xsd"/>
  <xsd:complexType name="EmptyParameterType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="HomeCommunityIdListType">
    <xsd:sequence>
      <xsd:element name="homeCommunityId" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HomeCommunityIdType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AssigningAuthorityIdType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ServiceNameType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EndpointURLType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SuccessOrFailType">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAllBusinessEntitiesRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="GetAllBusinessEntitiesResponse" type="uddi:businessDetail"/>
  <xsd:element name="GetBusinessEntityRequest" type="tns:HomeCommunityIdType"/>
  <xsd:element name="GetBusinessEntityResponse" type="uddi:businessEntity"/>
  <xsd:element name="GetBusinessEntitySetRequest" type="tns:HomeCommunityIdListType"/>
  <xsd:element name="GetBusinessEntitySetResponse" type="uddi:businessDetail"/>
  <xsd:complexType name="GetBusinessEntityByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element name="HomeCommunityId" type="xsd:string"/>
      <xsd:element name="ServiceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetBusinessEntityByServiceNameRequest" type="tns:GetBusinessEntityByServiceNameRequestType"/>
  <xsd:element name="GetBusinessEntityByServiceNameResponse" type="uddi:businessEntity"/>
  <xsd:complexType name="GetDefaultEndpointURLByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element name="HomeCommunityId" type="xsd:string"/>
      <xsd:element name="ServiceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetDefaultEndpointURLByServiceNameRequest" type="tns:GetDefaultEndpointURLByServiceNameRequestType"/>
  <xsd:element name="GetDefaultEndpointURLByServiceNameResponse" type="tns:EndpointURLType"/>
  <xsd:element name="GetInternalEndpointURLByServiceNameRequest" type="tns:ServiceNameType"/>
  <xsd:element name="GetInternalEndpointURLByServiceNameResponse" type="tns:EndpointURLType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetRequestType">
    <xsd:sequence>
      <xsd:element name="NhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetRequest" type="tns:GetEndpointURLFromNhinTargetRequestType"/>
  <xsd:element name="GetEndpointURLFromNhinTargetResponse" type="tns:EndpointURLType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetCommunitiesRequestType">
    <xsd:sequence>
      <xsd:element name="NhinTargetCommunities" type="nccommon:NhinTargetCommunitiesType"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetCommunitiesRequest" type="tns:GetEndpointURLFromNhinTargetCommunitiesRequestType"/>
  <xsd:complexType name="GetEndpointURLFromNhinTargetCommunitiesResponseType">
    <xsd:sequence>
      <xsd:element name="URLInfos" type="nccommon:UrlInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetEndpointURLFromNhinTargetCommunitiesResponse" type="tns:GetEndpointURLFromNhinTargetCommunitiesResponseType"/>
  <xsd:complexType name="GetBusinessEntitySetByServiceNameRequestType">
    <xsd:sequence>
      <xsd:element name="HomeCommunityId" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
      <xsd:element name="serviceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetBusinessEntitySetByServiceNameRequest" type="tns:GetBusinessEntitySetByServiceNameRequestType"/>
  <xsd:element name="GetBusinessEntitySetByServiceNameResponse" type="uddi:businessDetail"/>
  <xsd:element name="GetAllBusinessEntitySetByServiceNameRequest" type="tns:ServiceNameType"/>
  <xsd:element name="GetAllBusinessEntitySetByServiceNameResponse" type="uddi:businessDetail"/>
  <xsd:complexType name="GetAdapterEndpointURLRequestType">
    <xsd:sequence>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="adapterLevel" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAdapterEndpointURLRequest" type="tns:GetAdapterEndpointURLRequestType"/>
  <xsd:element name="GetAdapterEndpointURLResponse" type="tns:EndpointURLType"/>
  <xsd:element name="ForceRefreshUDDICacheRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="ForceRefreshUDDICacheResponse" type="tns:SuccessOrFailType"/>
  <xsd:element name="ForceRefreshInternalConnectCacheRequest" type="tns:EmptyParameterType"/>
  <xsd:element name="ForceRefreshInternalConnectCacheResponse" type="tns:SuccessOrFailType"/>
  <xsd:element name="GetAssigningAuthoritiesByHomeCommunityRequest" type="tns:HomeCommunityIdType"/>
  <xsd:complexType name="GetAssigningAuthoritiesByHomeCommunityResponseType">
    <xsd:sequence>
      <xsd:element name="assigningAuthoritiesId" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="GetAssigningAuthoritiesByHomeCommunityResponse" type="tns:GetAssigningAuthoritiesByHomeCommunityResponseType"/>
  <xsd:element name="GetHomeCommunityByAssigningAuthorityRequest" type="tns:AssigningAuthorityIdType"/>
  <xsd:element name="GetHomeCommunityByAssigningAuthorityResponse" type="tns:HomeCommunityIdType"/>
  <xsd:complexType name="UDDIUpdateManagerNoopRequestType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerNoopRequest" type="tns:UDDIUpdateManagerNoopRequestType"/>
  <xsd:complexType name="UDDIUpdateManagerNoopResponseType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerNoopResponse" type="tns:UDDIUpdateManagerNoopResponseType"/>
  <xsd:complexType name="UDDIUpdateManagerForceRefreshRequestType">
    <xsd:sequence>
      <xsd:element name="empty" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerForceRefreshRequest" type="tns:UDDIUpdateManagerForceRefreshRequestType"/>
  <xsd:complexType name="UDDIUpdateManagerForceRefreshResponseType">
    <xsd:sequence>
      <xsd:element name="successOrFail" type="tns:SuccessOrFailType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UDDIUpdateManagerForceRefreshResponse" type="tns:UDDIUpdateManagerForceRefreshResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\nhinc\common\NhincCommon.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:addr="http://www.w3.org/2005/08/addressing">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:complexType name="QualifiedSubjectIdentifierType">
    <xsd:sequence>
      <xsd:element name="SubjectIdentifier" type="xsd:string"/>
      <xsd:element name="AssigningAuthorityIdentifier" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
  <xsd:complexType name="AcknowledgementType">
    <xsd:sequence>
      <xsd:element name="message" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Acknowledgement" type="tns:AcknowledgementType"/>
  <xsd:complexType name="QualifiedSubjectIdentifiersType">
    <xsd:sequence>
      <xsd:element name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifiers" type="tns:QualifiedSubjectIdentifiersType"/>
  <xsd:complexType name="AssertionType">
    <xsd:sequence>
      <xsd:element name="address" type="tns:AddressType"/>
      <xsd:element name="dateOfBirth" type="xsd:string"/>
      <xsd:element name="explanationNonClaimantSignature" type="xsd:string"/>
      <xsd:element name="haveSecondWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="haveSignature" type="xsd:boolean"/>
      <xsd:element name="haveWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="nationalProviderId" type="xsd:string"/>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="phoneNumber" type="tns:PhoneType"/>
      <xsd:element name="secondWitnessAddress" type="tns:AddressType"/>
      <xsd:element name="secondWitnessName" type="tns:PersonNameType"/>
      <xsd:element name="secondWitnessPhone" type="tns:PhoneType"/>
      <xsd:element name="SSN" type="xsd:string"/>
      <xsd:element name="uniquePatientId" type="xsd:string" maxOccurs="unbounded"/>
      <xsd:element name="witnessAddress" type="tns:AddressType"/>
      <xsd:element name="witnessName" type="tns:PersonNameType"/>
      <xsd:element name="witnessPhone" type="tns:PhoneType"/>
      <xsd:element name="userInfo" type="tns:UserType"/>
      <xsd:element name="authorized" type="xsd:boolean"/>
      <xsd:element name="purposeOfDisclosureCoded" type="tns:CeType" minOccurs="0"/>
      <xsd:element name="samlAuthnStatement" type="tns:SamlAuthnStatementType" minOccurs="0"/>
      <xsd:element name="samlAuthzDecisionStatement" type="tns:SamlAuthzDecisionStatementType" minOccurs="0"/>
      <xsd:element name="samlSignature" type="tns:SamlSignatureType" minOccurs="0"/>
      <xsd:element name="samlIssuer" type="tns:SamlIssuerType" minOccurs="0"/>
      <xsd:element name="messageId" type="xsd:string" minOccurs="0"/>
      <xsd:element name="relatesToList" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="implementsSpecVersion" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Assertion" type="tns:AssertionType"/>
  <xsd:complexType name="SamlAuthnStatementType">
    <xsd:sequence>
      <xsd:element name="authInstant" type="xsd:string" minOccurs="0"/>
      <xsd:element name="sessionIndex" type="xsd:string" minOccurs="0"/>
      <xsd:element name="authContextClassRef" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subjectLocalityAddress" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subjectLocalityDNSName" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthnStatement" type="tns:SamlAuthnStatementType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementType">
    <xsd:sequence>
      <xsd:element name="decision" type="xsd:string" minOccurs="0"/>
      <xsd:element name="resource" type="xsd:string" minOccurs="0"/>
      <xsd:element name="action" type="xsd:string" minOccurs="0"/>
      <xsd:element name="evidence" type="tns:SamlAuthzDecisionStatementEvidenceType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatement" type="tns:SamlAuthzDecisionStatementType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceType">
    <xsd:sequence>
      <xsd:element name="assertion" type="tns:SamlAuthzDecisionStatementEvidenceAssertionType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidence" type="tns:SamlAuthzDecisionStatementEvidenceType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceAssertionType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string" minOccurs="0"/>
      <xsd:element name="issueInstant" type="xsd:string" minOccurs="0"/>
      <xsd:element name="version" type="xsd:string" minOccurs="0"/>
      <xsd:element name="issuer" type="xsd:string" minOccurs="0"/>
      <xsd:element name="issuerFormat" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subject" type="xsd:string" minOccurs="0"/>
      <xsd:element name="conditions" type="tns:SamlAuthzDecisionStatementEvidenceConditionsType" minOccurs="0"/>
      <xsd:element name="accessConsentPolicy" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="instanceAccessConsentPolicy" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidenceAssertion" type="tns:SamlAuthzDecisionStatementEvidenceAssertionType"/>
  <xsd:complexType name="SamlAuthzDecisionStatementEvidenceConditionsType">
    <xsd:sequence>
      <xsd:element name="notBefore" type="xsd:string" minOccurs="0"/>
      <xsd:element name="notOnOrAfter" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlAuthzDecisionStatementEvidenceConditions" type="tns:SamlAuthzDecisionStatementEvidenceConditionsType"/>
  <xsd:complexType name="SamlIssuerType">
    <xsd:sequence>
      <xsd:element name="issuer" type="xsd:string" minOccurs="0"/>
      <xsd:element name="issuerFormat" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlIssuer" type="tns:SamlIssuerType"/>
  <xsd:complexType name="SamlSignatureType">
    <xsd:sequence>
      <xsd:element name="keyInfo" type="tns:SamlSignatureKeyInfoType" minOccurs="0"/>
      <xsd:element name="signatureValue" type="xsd:base64Binary" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlSignature" type="tns:SamlSignatureType"/>
  <xsd:complexType name="SamlSignatureKeyInfoType">
    <xsd:sequence>
      <xsd:element name="rsaKeyValueModulus" type="xsd:base64Binary" minOccurs="0"/>
      <xsd:element name="rsaKeyValueExponent" type="xsd:base64Binary" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SamlSignatureKeyInfo" type="tns:SamlSignatureKeyInfoType"/>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="addressType" type="tns:CeType"/>
      <xsd:element name="city" type="xsd:string"/>
      <xsd:element name="country" type="xsd:string"/>
      <xsd:element name="state" type="xsd:string"/>
      <xsd:element name="streetAddress" type="xsd:string"/>
      <xsd:element name="zipCode" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Address" type="tns:AddressType"/>
  <xsd:complexType name="AddressesType">
    <xsd:sequence>
      <xsd:element name="address" type="tns:AddressType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Addresses" type="tns:AddressesType"/>
  <xsd:complexType name="CeType">
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="codeSystem" type="xsd:string"/>
      <xsd:element name="codeSystemName" type="xsd:string"/>
      <xsd:element name="codeSystemVersion" type="xsd:string"/>
      <xsd:element name="displayName" type="xsd:string"/>
      <xsd:element name="originalText" type="xsd:string"/>
      <xsd:element name="translation" type="tns:CeType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Ce" type="tns:CeType"/>
  <xsd:complexType name="HomeCommunityType">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:element name="homeCommunityId" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunity" type="tns:HomeCommunityType"/>
  <xsd:complexType name="HomeCommunitiesType">
    <xsd:sequence>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunities" type="tns:HomeCommunitiesType"/>
  <xsd:complexType name="PersonNameType">
    <xsd:sequence>
      <xsd:element name="familyName" type="xsd:string"/>
      <xsd:element name="givenName" type="xsd:string"/>
      <xsd:element name="nameType" type="tns:CeType"/>
      <xsd:element name="secondNameOrInitials" type="xsd:string"/>
      <xsd:element name="fullName" type="xsd:string"/>
      <xsd:element name="prefix" type="xsd:string"/>
      <xsd:element name="suffix" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="PersonName" type="tns:PersonNameType"/>
  <xsd:complexType name="PhoneType">
    <xsd:sequence>
      <xsd:element name="areaCode" type="xsd:string"/>
      <xsd:element name="countryCode" type="xsd:string"/>
      <xsd:element name="extension" type="xsd:string"/>
      <xsd:element name="localNumber" type="xsd:string"/>
      <xsd:element name="phoneNumberType" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Phone" type="tns:PhoneType"/>
  <xsd:complexType name="UserType">
    <xsd:sequence>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="userName" type="xsd:string"/>
      <xsd:element name="org" type="tns:HomeCommunityType"/>
      <xsd:element name="roleCoded" type="tns:CeType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="User" type="tns:UserType"/>
  <!--<xsd:complexType name="EPRType">
        <xsd:sequence>
            <xsd:element name="EndpointReference" type="addr:EndpointReferenceType"/>
        </xsd:sequence>
    </xsd:complexType>-->
  <xsd:element name="EPR" type="addr:EndpointReferenceType"/>
  <xsd:complexType name="CreateEPRRequestType">
    <xsd:sequence>
      <xsd:element name="endpointURL" type="xsd:string"/>
      <xsd:element name="namespaceURI" type="xsd:string"/>
      <xsd:element name="namespacePrefix" type="xsd:string"/>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="portName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CreateEPRRequest" type="tns:CreateEPRRequestType"/>
  <xsd:complexType name="NhinTargetSystemType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="epr" type="addr:EndpointReferenceType"/>
        <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
        <xsd:element name="url" type="xsd:string"/>
      </xsd:choice>
      <xsd:element name="useSpecVersion" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetSystem" type="tns:NhinTargetSystemType"/>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="status" type="xsd:boolean"/>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Response" type="tns:ResponseType"/>
  <xsd:complexType name="TokenCreationInfoType">
    <xsd:sequence>
      <xsd:element name="assertion" type="tns:AssertionType"/>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element name="resourceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenCreationInfo" type="tns:TokenCreationInfoType"/>
  <xsd:complexType name="TokenRetrieveInfoType">
    <xsd:sequence>
      <xsd:element name="request" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenRetrieveInfo" type="tns:TokenRetrieveInfoType"/>
  <xsd:complexType name="AssigningAuthorityType">
    <xsd:sequence>
      <xsd:element name="assigningAuthorityId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="AssigningAuthority" type="tns:AssigningAuthorityType"/>
  <xsd:complexType name="AssigningAuthoritiesType">
    <xsd:sequence>
      <xsd:element name="assigningAuthority" type="tns:AssigningAuthorityType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="assigningAuthorites" type="tns:AssigningAuthoritiesType"/>
  <xsd:complexType name="NhinTargetCommunityType">
    <xsd:sequence>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="list" type="xsd:string" minOccurs="0"/>
      <xsd:element name="region" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NhinTargetCommunitiesType">
    <xsd:sequence>
      <xsd:element name="nhinTargetCommunity" type="tns:NhinTargetCommunityType" maxOccurs="unbounded"/>
      <xsd:element name="useSpecVersion" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetCommunities" type="tns:NhinTargetCommunitiesType"/>
  <xsd:element name="NhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
  <xsd:complexType name="UrlSetType">
    <xsd:sequence>
      <xsd:element name="url" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UrlSet" type="tns:UrlSetType"/>
  <xsd:complexType name="UrlInfoType">
    <xsd:sequence>
      <xsd:element name="url" type="xsd:string"/>
      <xsd:element name="id" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UrlInfo" type="tns:UrlInfoType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\www.w3.org\2005\08\addressing\ws-addr.xsd</con:url><con:content><![CDATA[<!--W3C XML Schema defined in the Web Services Addressing 1.0 specification
    http://www.w3.org/TR/ws-addr-core

   Copyright © 2005 World Wide Web Consortium,

   (Massachusetts Institute of Technology, European Research Consortium for
   Informatics and Mathematics, Keio University). All Rights Reserved. This
   work is distributed under the W3C® Software License [1] in the hope that
   it will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

   [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231

   $Id: ws-addr.xsd,v 1.2 2008/07/23 13:38:16 plehegar Exp $-->
<xs:schema targetNamespace="http://www.w3.org/2005/08/addressing" blockDefault="#all" elementFormDefault="qualified" finalDefault="" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType" mixed="false">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element ref="tns:ReferenceParameters" minOccurs="0"/>
      <xs:element ref="tns:Metadata" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ReferenceParameters" type="tns:ReferenceParametersType"/>
  <xs:complexType name="ReferenceParametersType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType name="MetadataType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType name="RelatesToType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional" default="http://www.w3.org/2005/08/addressing/reply"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType name="AttributedURIType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType name="AttributedUnsignedLongType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType name="AttributedQNameType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType name="ProblemActionType" mixed="false">
    <xs:sequence>
      <xs:element ref="tns:Action" minOccurs="0"/>
      <xs:element name="SoapAction" minOccurs="0" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\uddi\uddi_v3.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:uddi-org:api_v3" elementFormDefault="qualified" version="3.0.2" id="uddi" xsi:schemaLocation="urn:uddi-org:schemaCentricC14N:2002-07-10 http://uddi.org/schema/SchemaCentricCanonicalization.xsd" xmlns:scc14n="urn:uddi-org:schemaCentricC14N:2002-07-10" xmlns:uddi="urn:uddi-org:api_v3" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!--Copyright (c) 2000-2002 by Accenture, Ariba, Inc., Commerce One, Inc.
	Fujitsu Limited, Hewlett-Packard Company, i2 Technologies, Inc.,
	Intel Corporation, International Business Machines Corporation,
	Microsoft Corporation, Oracle Corporation, SAP AG, Sun Microsystems, Inc.,
	and VeriSign, Inc.  All Rights Reserved.

	Copyright (c) OASIS Open 2002-2004. All Rights Reserved.-->
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="../www.w3.org/2001/xml.xsd"/>
  <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="../../schemas/www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <!--Attribute type definitions-->
  <xsd:simpleType name="uddiKey" scc14n:caseMapKind="fold">
    <xsd:restriction base="xsd:anyURI">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="bindingKey" final="restriction">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType name="businessKey" final="restriction">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType name="findQualifier" scc14n:caseMapKind="fold">
    <xsd:restriction base="uddi:validationTypeString255"/>
  </xsd:simpleType>
  <xsd:simpleType name="serviceKey" final="restriction">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType name="tModelKey" final="restriction">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:element name="authorizedName" type="uddi:authorizedName" final="restriction"/>
  <xsd:simpleType name="authorizedName" final="restriction">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="nodeID" type="uddi:nodeID" final="restriction"/>
  <xsd:simpleType name="nodeID" final="restriction">
    <xsd:restriction base="uddi:uddiKey"/>
  </xsd:simpleType>
  <xsd:simpleType name="completionStatus" final="restriction">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:enumeration value="status:complete"/>
      <xsd:enumeration value="status:fromKey_incomplete"/>
      <xsd:enumeration value="status:toKey_incomplete"/>
      <xsd:enumeration value="status:both_incomplete"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="direction" final="restriction">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="fromKey"/>
      <xsd:enumeration value="toKey"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="instanceParms" final="restriction">
    <xsd:restriction base="uddi:validationTypeString8192"/>
  </xsd:simpleType>
  <xsd:simpleType name="deleted" final="restriction">
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <!--<xsd:simpleType name="timeInstant" final="restriction">
		<xsd:restriction base="xsd:dateTime"/>
	</xsd:simpleType>-->
  <xsd:simpleType name="truncated" final="restriction">
    <xsd:restriction base="xsd:boolean"/>
  </xsd:simpleType>
  <xsd:simpleType name="keyName">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="keyType" final="restriction">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="businessKey"/>
      <xsd:enumeration value="tModelKey"/>
      <xsd:enumeration value="serviceKey"/>
      <xsd:enumeration value="bindingKey"/>
      <xsd:enumeration value="subscriptionKey"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="keyValue">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="sortCode">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="10"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="useType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Type and element definitions for registry content-->
  <xsd:element name="accessPoint" type="uddi:accessPoint" final="restriction"/>
  <xsd:complexType name="accessPoint" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString4096">
        <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--<xsd:element name="actualCount" type="xsd:int" final="restriction"/>-->
  <xsd:element name="address" type="uddi:address" final="restriction"/>
  <xsd:complexType name="address" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:addressLine" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute ref="xml:lang" use="optional"/>
    <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
    <xsd:attribute name="sortCode" type="uddi:sortCode" use="optional" default=""/>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="optional"/>
  </xsd:complexType>
  <xsd:element name="addressLine" type="uddi:addressLine" final="restriction"/>
  <xsd:complexType name="addressLine" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString80">
        <xsd:attribute name="keyName" type="uddi:keyName" use="optional" default=""/>
        <xsd:attribute name="keyValue" type="uddi:keyValue" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="assertionStatusItem" type="uddi:assertionStatusItem" final="restriction"/>
  <xsd:complexType name="assertionStatusItem" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:fromKey"/>
      <xsd:element ref="uddi:toKey"/>
      <xsd:element ref="uddi:keyedReference"/>
      <xsd:element ref="uddi:keysOwned"/>
    </xsd:sequence>
    <xsd:attribute name="completionStatus" type="uddi:completionStatus" use="required"/>
  </xsd:complexType>
  <!--This type has a problem with JAXB - since it derives by restriction it causes trouble.  Doing a
    replacement of everywhere authInfo is used and putting that type to xsd:string.  Gives the same
    XML string, but gets through JAXB better.
    
	<xsd:element name="authInfo" final="restriction">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>-->
  <xsd:element name="bindingKey" type="uddi:bindingKey" final="restriction"/>
  <xsd:element name="bindingTemplate" type="uddi:bindingTemplate" final="restriction"/>
  <xsd:complexType name="bindingTemplate" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <!--Removed xsd:choice around the two following elements-->
      <xsd:element ref="uddi:accessPoint" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:hostingRedirector" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:tModelInstanceDetails" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="bindingKey" type="uddi:bindingKey" use="optional"/>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
  </xsd:complexType>
  <xsd:element name="bindingTemplates" type="uddi:bindingTemplates" final="restriction"/>
  <xsd:complexType name="bindingTemplates" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:bindingTemplate" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="businessEntity" type="uddi:businessEntity" final="restriction"/>
  <xsd:complexType name="businessEntity" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:discoveryURLs" minOccurs="0"/>
      <xsd:element ref="uddi:name" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:contacts" minOccurs="0"/>
      <xsd:element ref="uddi:businessServices" minOccurs="0"/>
      <xsd:element ref="uddi:identifierBag" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
  </xsd:complexType>
  <xsd:element name="businessInfo" type="uddi:businessInfo" final="restriction"/>
  <xsd:complexType name="businessInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:name" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:serviceInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="businessInfos" type="uddi:businessInfos" final="restriction"/>
  <xsd:complexType name="businessInfos" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="businessKey" type="uddi:businessKey" final="restriction"/>
  <xsd:element name="businessService" type="uddi:businessService" final="restriction"/>
  <xsd:complexType name="businessService" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:name" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:bindingTemplates" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
  </xsd:complexType>
  <xsd:element name="businessServices" type="uddi:businessServices" final="restriction"/>
  <xsd:complexType name="businessServices" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessService" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="categoryBag" type="uddi:categoryBag" final="restriction"/>
  <xsd:complexType name="categoryBag" final="restriction">
    <!--Removed xsd:choice from around next two elements-->
    <!--Changed back to a choice-->
    <xsd:choice>
      <xsd:element ref="uddi:keyedReference" minOccurs="0" maxOccurs="unbounded"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:keyedReferenceGroup" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="completionStatus" type="uddi:completionStatus" final="restriction"/>
  <xsd:element name="contact" type="uddi:contact" final="restriction"/>
  <xsd:complexType name="contact" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:personName" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:phone" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:email" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:address" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
  </xsd:complexType>
  <xsd:element name="contacts" type="uddi:contacts" final="restriction"/>
  <xsd:complexType name="contacts" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:contact" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="description" type="uddi:description" final="restriction"/>
  <xsd:complexType name="description" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="discoveryURL" type="uddi:discoveryURL" final="restriction"/>
  <xsd:complexType name="discoveryURL" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeAnyURI4096">
        <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="discoveryURLs" type="uddi:discoveryURLs" final="restriction"/>
  <xsd:complexType name="discoveryURLs" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:discoveryURL" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="dispositionReport" type="uddi:dispositionReport" final="restriction"/>
  <xsd:complexType name="dispositionReport" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:result" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="email" type="uddi:email" final="restriction"/>
  <xsd:complexType name="email" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="errInfo" type="uddi:errInfo" final="restriction"/>
  <xsd:complexType name="errInfo" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="errCode" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="findQualifier" type="uddi:findQualifier" final="restriction"/>
  <xsd:element name="findQualifiers" type="uddi:findQualifiers" final="restriction"/>
  <xsd:complexType name="findQualifiers">
    <xsd:sequence>
      <xsd:element ref="uddi:findQualifier" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="fromKey" type="uddi:businessKey" final="restriction"/>
  <xsd:element name="hostingRedirector" type="uddi:hostingRedirector" final="restriction"/>
  <xsd:complexType name="hostingRedirector" final="restriction">
    <xsd:attribute name="bindingKey" type="uddi:bindingKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="identifierBag" type="uddi:identifierBag" final="restriction"/>
  <xsd:complexType name="identifierBag" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:keyedReference" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--<xsd:element name="includeCount" type="xsd:int" final="restriction"/>-->
  <xsd:element name="infoSelection" type="uddi:infoSelection" final="restriction"/>
  <xsd:simpleType name="infoSelection" final="restriction">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="all"/>
      <xsd:enumeration value="hidden"/>
      <xsd:enumeration value="visible"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="instanceDetails" type="uddi:instanceDetails" final="restriction"/>
  <xsd:complexType name="instanceDetails" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <!--Removed xsd:choice and xsd:sequence-->
      <xsd:element ref="uddi:overviewDoc" minOccurs="0" maxOccurs="unbounded"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:instanceParms" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="instanceParms" type="uddi:instanceParms" final="restriction"/>
  <xsd:element name="keyedReference" type="uddi:keyedReference" final="restriction"/>
  <xsd:complexType name="keyedReference" final="restriction">
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
    <xsd:attribute name="keyName" type="uddi:keyName" use="optional" default=""/>
    <xsd:attribute name="keyValue" type="uddi:keyValue" use="required"/>
  </xsd:complexType>
  <xsd:element name="keyedReferenceGroup" type="uddi:keyedReferenceGroup" final="restriction"/>
  <xsd:complexType name="keyedReferenceGroup" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:keyedReference" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="keysOwned" type="uddi:keysOwned" final="restriction"/>
  <xsd:complexType name="keysOwned" final="restriction">
    <!--Removed xsd:choice-->
    <xsd:sequence>
      <xsd:element ref="uddi:fromKey" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:toKey" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="listDescription" type="uddi:listDescription" final="restriction"/>
  <xsd:complexType name="listDescription" final="restriction">
    <xsd:sequence>
      <!--<xsd:element ref="uddi:includeCount"/>-->
      <!--<xsd:element ref="uddi:actualCount"/>-->
      <!--<xsd:element ref="uddi:listHead"/>-->
      <xsd:element name="includeCount" type="xsd:int"/>
      <xsd:element name="actualCount" type="xsd:int"/>
      <xsd:element name="listHead" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--<xsd:element name="listHead" type="xsd:int" final="restriction"/>-->
  <xsd:element name="name" type="uddi:name" final="restriction"/>
  <xsd:complexType name="name" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="operationalInfo" type="uddi:operationalInfo" final="restriction"/>
  <xsd:complexType name="operationalInfo" final="restriction">
    <xsd:sequence>
      <!--<xsd:element name="created" type="uddi:timeInstant" minOccurs="0"/>-->
      <!--<xsd:element name="modified" type="uddi:timeInstant" minOccurs="0"/>-->
      <!--<xsd:element name="modifiedIncludingChildren" type="uddi:timeInstant" minOccurs="0"/>-->
      <xsd:element name="created" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="modified" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="modifiedIncludingChildren" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element ref="uddi:nodeID" minOccurs="0"/>
      <xsd:element ref="uddi:authorizedName" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="entityKey" type="uddi:uddiKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="overviewDoc" type="uddi:overviewDoc" final="restriction"/>
  <xsd:complexType name="overviewDoc" final="restriction">
    <!--Removed xsd:choice-->
    <xsd:sequence>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:overviewURL" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="overviewURL" type="uddi:overviewURL" final="restriction"/>
  <xsd:complexType name="overviewURL" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeAnyURI4096">
        <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="personName" type="uddi:personName" final="restriction"/>
  <xsd:complexType name="personName" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString255">
        <xsd:attribute ref="xml:lang" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="phone" type="uddi:phone" final="restriction"/>
  <xsd:complexType name="phone" final="restriction">
    <xsd:simpleContent>
      <xsd:extension base="uddi:validationTypeString50">
        <xsd:attribute name="useType" type="uddi:useType" use="optional" default=""/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="publisherAssertion" type="uddi:publisherAssertion" final="restriction"/>
  <xsd:complexType name="publisherAssertion" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:fromKey"/>
      <xsd:element ref="uddi:toKey"/>
      <xsd:element ref="uddi:keyedReference"/>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="relatedBusinessInfo" type="uddi:relatedBusinessInfo" final="restriction"/>
  <xsd:complexType name="relatedBusinessInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessKey"/>
      <xsd:element ref="uddi:name" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:sharedRelationships" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="relatedBusinessInfos" type="uddi:relatedBusinessInfos" final="restriction"/>
  <xsd:complexType name="relatedBusinessInfos" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:relatedBusinessInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="result" type="uddi:result" final="restriction"/>
  <xsd:complexType name="result" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:errInfo" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="keyType" type="uddi:keyType" use="optional"/>
    <xsd:attribute name="errno" type="xsd:int" use="required"/>
  </xsd:complexType>
  <xsd:element name="serviceInfo" type="uddi:serviceInfo" final="restriction"/>
  <xsd:complexType name="serviceInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:name" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="required"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="serviceInfos" type="uddi:serviceInfos" final="restriction"/>
  <xsd:complexType name="serviceInfos" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:serviceInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="serviceKey" type="uddi:serviceKey" final="restriction"/>
  <xsd:element name="sharedRelationships" type="uddi:sharedRelationships" final="restriction"/>
  <xsd:complexType name="sharedRelationships" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:keyedReference" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:publisherAssertion" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="direction" type="uddi:direction" use="required"/>
  </xsd:complexType>
  <xsd:element name="tModel" type="uddi:tModel" final="restriction"/>
  <xsd:complexType name="tModel" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:name"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:overviewDoc" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:identifierBag" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="dsig:Signature" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="optional"/>
    <xsd:attribute name="deleted" type="uddi:deleted" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:element name="tModelBag" type="uddi:tModelBag" final="restriction"/>
  <xsd:complexType name="tModelBag" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:tModelKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="tModelInfo" type="uddi:tModelInfo" final="restriction"/>
  <xsd:complexType name="tModelInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:name"/>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="tModelInfos" type="uddi:tModelInfos" final="restriction"/>
  <xsd:complexType name="tModelInfos" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:tModelInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="tModelInstanceDetails" type="uddi:tModelInstanceDetails" final="restriction"/>
  <xsd:complexType name="tModelInstanceDetails" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:tModelInstanceInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="tModelInstanceInfo" type="uddi:tModelInstanceInfo" final="restriction"/>
  <xsd:complexType name="tModelInstanceInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:description" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:instanceDetails" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="tModelKey" type="uddi:tModelKey" use="required"/>
  </xsd:complexType>
  <xsd:element name="tModelKey" type="uddi:tModelKey" final="restriction"/>
  <xsd:element name="toKey" type="uddi:businessKey" final="restriction"/>
  <!--Type and element definitions for input messages-->
  <xsd:element name="add_publisherAssertions" type="uddi:add_publisherAssertions" final="restriction"/>
  <xsd:complexType name="add_publisherAssertions" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:publisherAssertion" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete_binding" type="uddi:delete_binding" final="restriction"/>
  <xsd:complexType name="delete_binding" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:bindingKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete_business" type="uddi:delete_business" final="restriction"/>
  <xsd:complexType name="delete_business" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:businessKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete_publisherAssertions" type="uddi:delete_publisherAssertions" final="restriction"/>
  <xsd:complexType name="delete_publisherAssertions" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:publisherAssertion" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete_service" type="uddi:delete_service" final="restriction"/>
  <xsd:complexType name="delete_service" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:serviceKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete_tModel" type="uddi:delete_tModel" final="restriction"/>
  <xsd:complexType name="delete_tModel" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:tModelKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="discard_authToken" type="uddi:discard_authToken" final="restriction"/>
  <xsd:complexType name="discard_authToken" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="find_binding" type="uddi:find_binding" final="restriction"/>
  <xsd:complexType name="find_binding" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:findQualifiers" minOccurs="0"/>
      <xsd:element ref="uddi:tModelBag" minOccurs="0"/>
      <xsd:element ref="uddi:find_tModel" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="serviceKey" type="uddi:serviceKey" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element name="find_business" type="uddi:find_business" final="restriction"/>
  <xsd:complexType name="find_business" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:findQualifiers" minOccurs="0"/>
      <xsd:element ref="uddi:name" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:identifierBag" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="uddi:tModelBag" minOccurs="0"/>
      <xsd:element ref="uddi:find_tModel" minOccurs="0"/>
      <xsd:element ref="uddi:discoveryURLs" minOccurs="0"/>
      <xsd:element ref="uddi:find_relatedBusinesses" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element name="find_relatedBusinesses" type="uddi:find_relatedBusinesses" final="restriction"/>
  <xsd:complexType name="find_relatedBusinesses" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:findQualifiers" minOccurs="0"/>
      <!--Removed xsd:choice from around next 3 elements-->
      <xsd:element ref="uddi:businessKey" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:fromKey" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:toKey" minOccurs="0"/>
      <!--Added minOccurs="0"-->
      <xsd:element ref="uddi:keyedReference" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element name="find_service" type="uddi:find_service" final="restriction"/>
  <xsd:complexType name="find_service" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:findQualifiers" minOccurs="0"/>
      <xsd:element ref="uddi:name" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
      <xsd:element ref="uddi:tModelBag" minOccurs="0"/>
      <xsd:element ref="uddi:find_tModel" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="businessKey" type="uddi:businessKey" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element name="find_tModel" type="uddi:find_tModel" final="restriction"/>
  <xsd:complexType name="find_tModel" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:findQualifiers" minOccurs="0"/>
      <xsd:element ref="uddi:name" minOccurs="0"/>
      <xsd:element ref="uddi:identifierBag" minOccurs="0"/>
      <xsd:element ref="uddi:categoryBag" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="maxRows" type="xsd:int" use="optional"/>
    <xsd:attribute name="listHead" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:element name="get_assertionStatusReport" type="uddi:get_assertionStatusReport" final="restriction"/>
  <xsd:complexType name="get_assertionStatusReport" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:completionStatus" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_authToken" type="uddi:get_authToken" final="restriction"/>
  <xsd:complexType name="get_authToken" final="restriction">
    <xsd:attribute name="userID" type="xsd:string" use="required"/>
    <xsd:attribute name="cred" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:element name="get_bindingDetail" type="uddi:get_bindingDetail" final="restriction"/>
  <xsd:complexType name="get_bindingDetail" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:bindingKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_businessDetail" type="uddi:get_businessDetail" final="restriction"/>
  <xsd:complexType name="get_businessDetail" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:businessKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_operationalInfo" type="uddi:get_operationalInfo" final="restriction"/>
  <xsd:complexType name="get_operationalInfo" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element name="entityKey" type="uddi:uddiKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_publisherAssertions" type="uddi:get_publisherAssertions" final="restriction"/>
  <xsd:complexType name="get_publisherAssertions" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_registeredInfo" type="uddi:get_registeredInfo" final="restriction"/>
  <xsd:complexType name="get_registeredInfo" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="infoSelection" type="uddi:infoSelection" use="required"/>
  </xsd:complexType>
  <xsd:element name="get_serviceDetail" type="uddi:get_serviceDetail" final="restriction"/>
  <xsd:complexType name="get_serviceDetail" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:serviceKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="get_tModelDetail" type="uddi:get_tModelDetail" final="restriction"/>
  <xsd:complexType name="get_tModelDetail" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:tModelKey" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="save_binding" type="uddi:save_binding" final="restriction"/>
  <xsd:complexType name="save_binding" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:bindingTemplate" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="save_business" type="uddi:save_business" final="restriction"/>
  <xsd:complexType name="save_business" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:businessEntity" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="save_service" type="uddi:save_service" final="restriction"/>
  <xsd:complexType name="save_service" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:businessService" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="save_tModel" type="uddi:save_tModel" final="restriction"/>
  <xsd:complexType name="save_tModel" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:tModel" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="set_publisherAssertions" type="uddi:set_publisherAssertions" final="restriction"/>
  <xsd:complexType name="set_publisherAssertions" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string" minOccurs="0"/>
      <xsd:element ref="uddi:publisherAssertion" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Type and element definitions for response messages-->
  <xsd:element name="assertionStatusReport" type="uddi:assertionStatusReport" final="restriction"/>
  <xsd:complexType name="assertionStatusReport" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:assertionStatusItem" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="authToken" type="uddi:authToken" final="restriction"/>
  <xsd:complexType name="authToken" final="restriction">
    <xsd:sequence>
      <xsd:element name="authInfo" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="bindingDetail" type="uddi:bindingDetail" final="restriction"/>
  <xsd:complexType name="bindingDetail" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:listDescription" minOccurs="0"/>
      <xsd:element ref="uddi:bindingTemplate" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="businessDetail" type="uddi:businessDetail" final="restriction"/>
  <xsd:complexType name="businessDetail" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessEntity" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="businessList" type="uddi:businessList" final="restriction"/>
  <xsd:complexType name="businessList" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:listDescription" minOccurs="0"/>
      <xsd:element ref="uddi:businessInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="operationalInfos" type="uddi:operationalInfos" final="restriction"/>
  <xsd:complexType name="operationalInfos" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:operationalInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="publisherAssertions" type="uddi:publisherAssertions" final="restriction"/>
  <xsd:complexType name="publisherAssertions" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:publisherAssertion" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="registeredInfo" type="uddi:registeredInfo" final="restriction"/>
  <xsd:complexType name="registeredInfo" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessInfos" minOccurs="0"/>
      <xsd:element ref="uddi:tModelInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="relatedBusinessesList" type="uddi:relatedBusinessesList" final="restriction"/>
  <xsd:complexType name="relatedBusinessesList" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:listDescription" minOccurs="0"/>
      <xsd:element ref="uddi:businessKey"/>
      <xsd:element ref="uddi:relatedBusinessInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="serviceDetail" type="uddi:serviceDetail" final="restriction"/>
  <xsd:complexType name="serviceDetail" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:businessService" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="serviceList" type="uddi:serviceList" final="restriction"/>
  <xsd:complexType name="serviceList" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:listDescription" minOccurs="0"/>
      <xsd:element ref="uddi:serviceInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="tModelDetail" type="uddi:tModelDetail" final="restriction"/>
  <xsd:complexType name="tModelDetail" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:tModel" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <xsd:element name="tModelList" type="uddi:tModelList" final="restriction"/>
  <xsd:complexType name="tModelList" final="restriction">
    <xsd:sequence>
      <xsd:element ref="uddi:listDescription" minOccurs="0"/>
      <xsd:element ref="uddi:tModelInfos" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="truncated" type="uddi:truncated" use="optional"/>
  </xsd:complexType>
  <!--Validation simpleTypes-->
  <xsd:simpleType name="validationTypeAnyURI4096">
    <xsd:restriction base="xsd:anyURI">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString50">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString80">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString255">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString4096">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4096"/>
      <xsd:whiteSpace value="collapse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="validationTypeString8192">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="8192"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\www.w3.org\2001\xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
    dedication the W3C XML Plenary on this 10th day of
    February, 2000, reserves for Jon Bosak in perpetuity
    the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\CONNECT\Product\SoapUI_Test\target\schemas\www.w3.org\TR\xmldsig-core\xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--2012-12-28 tparnell:
  - Commenting this block out to allow building when access to www.w3.org is not available.
  - When a catalog is used for jaxb generation and XMLSchema.dtd and datatypes.dtd are local,
  - revert back to the 876c827 version.
    
<!DOCTYPE schema
  PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd"
 [
   <!ATTLIST schema 
     xmlns:ds CDATA #FIXED "http://www.w3.org/2000/09/xmldsig#">
   <!ENTITY dsig 'http://www.w3.org/2000/09/xmldsig#'>
   <!ENTITY % p ''>
   <!ENTITY % s ''>
  ]>-->
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
			<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		</con:endpoints>
		<con:operation action="urn:ForceRefreshInternalConnectCache" anonymous="optional" bindingOperationName="ForceRefreshInternalConnectCache" inputName="ForceRefreshInternalConnectCacheRequest" isOneWay="false" name="ForceRefreshInternalConnectCache" outputName="ForceRefreshInternalConnectCacheResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:ForceRefreshInternalConnectCacheRequest>?</urn:ForceRefreshInternalConnectCacheRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshInternalConnectCacheRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:ForceRefreshUDDICache" anonymous="optional" bindingOperationName="ForceRefreshUDDICache" inputName="ForceRefreshUDDICacheRequest" isOneWay="false" name="ForceRefreshUDDICache" outputName="ForceRefreshUDDICacheResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:ForceRefreshUDDICacheRequest>?</urn:ForceRefreshUDDICacheRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshUDDICacheRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetAdapterEndpointURL" anonymous="optional" bindingOperationName="GetAdapterEndpointURL" inputName="GetAdapterEndpointURLRequest" isOneWay="false" name="GetAdapterEndpointURL" outputName="GetAdapterEndpointURLResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAdapterEndpointURLRequest>
         <urn:serviceName>?</urn:serviceName>
         <urn:adapterLevel>?</urn:adapterLevel>
      </urn:GetAdapterEndpointURLRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAdapterEndpointURLRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetAllBusinessEntities" anonymous="optional" bindingOperationName="GetAllBusinessEntities" inputName="GetAllBusinessEntitiesRequest" isOneWay="false" name="GetAllBusinessEntities" outputName="GetAllBusinessEntitiesResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:GetAllBusinessEntitiesRequest>?</urn:GetAllBusinessEntitiesRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitiesRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetAllBusinessEntitySetByServiceName" anonymous="optional" bindingOperationName="GetAllBusinessEntitySetByServiceName" inputName="GetAllBusinessEntitySetByServiceNameRequest" isOneWay="false" name="GetAllBusinessEntitySetByServiceName" outputName="GetAllBusinessEntitySetByServiceNameResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitySetByServiceNameRequest>?</urn:GetAllBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetAssigningAuthoritiesByHomeCommunity" anonymous="optional" bindingOperationName="GetAssigningAuthoritiesByHomeCommunity" inputName="GetAssigningAuthoritiesByHomeCommunityRequest" isOneWay="false" name="GetAssigningAuthoritiesByHomeCommunity" outputName="GetAssigningAuthoritiesByHomeCommunityResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:GetAssigningAuthoritiesByHomeCommunityRequest>2.2</urn:GetAssigningAuthoritiesByHomeCommunityRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAssigningAuthoritiesByHomeCommunityRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetBusinessEntity" anonymous="optional" bindingOperationName="GetBusinessEntity" inputName="GetBusinessEntityRequest" isOneWay="false" name="GetBusinessEntity" outputName="GetBusinessEntityResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:GetBusinessEntityRequest>1.1</urn:GetBusinessEntityRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetBusinessEntityByServiceName" anonymous="optional" bindingOperationName="GetBusinessEntityByServiceName" inputName="GetBusinessEntityByServiceNameRequest" isOneWay="false" name="GetBusinessEntityByServiceName" outputName="GetBusinessEntityByServiceNameResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityByServiceNameRequest>
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:ServiceName>?</urn:ServiceName>
      </urn:GetBusinessEntityByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetBusinessEntitySet" anonymous="optional" bindingOperationName="GetBusinessEntitySet" inputName="GetBusinessEntitySetRequest" isOneWay="false" name="GetBusinessEntitySet" outputName="GetBusinessEntitySetResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo"><soap:Header/><soap:Body><urn:GetBusinessEntitySetRequest><urn:homeCommunityId>1.1</urn:homeCommunityId></urn:GetBusinessEntitySetRequest></soap:Body></soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetBusinessEntitySetByServiceName" anonymous="optional" bindingOperationName="GetBusinessEntitySetByServiceName" inputName="GetBusinessEntitySetByServiceNameRequest" isOneWay="false" name="GetBusinessEntitySetByServiceName" outputName="GetBusinessEntitySetByServiceNameResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetByServiceNameRequest>
         <!--1 or more repetitions:-->
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetDefaultEndpointURLByServiceName" anonymous="optional" bindingOperationName="GetDefaultEndpointURLByServiceName" inputName="GetDefaultEndpointURLByServiceNameRequest" isOneWay="false" name="GetDefaultEndpointURLByServiceName" outputName="GetDefaultEndpointURLByServiceNameResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetDefaultEndpointURLByServiceNameRequest>
         <urn:HomeCommunityId>?</urn:HomeCommunityId>
         <urn:ServiceName>?</urn:ServiceName>
      </urn:GetDefaultEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetDefaultEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetEndpointURLFromNhinTarget" anonymous="optional" bindingOperationName="GetEndpointURLFromNhinTarget" inputName="GetEndpointURLFromNhinTargetRequest" isOneWay="false" name="GetEndpointURLFromNhinTarget" outputName="GetEndpointURLFromNhinTargetResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetRequest>
         <urn:NhinTargetSystem>
            <!--You have a CHOICE of the next 3 items at this level-->
            <urn1:epr>
               <urn1:EndpointReference>
                  <add:Address>?</add:Address>
                  <!--Optional:-->
                  <add:ReferenceProperties>
                     <!--You may enter ANY elements at this point-->
                  </add:ReferenceProperties>
                  <!--Optional:-->
                  <add:ReferenceParameters>
                     <!--You may enter ANY elements at this point-->
                  </add:ReferenceParameters>
                  <!--Optional:-->
                  <add:PortType>?</add:PortType>
                  <!--Optional:-->
                  <add:ServiceName PortName="?">?</add:ServiceName>
                  <!--You may enter ANY elements at this point-->
               </urn1:EndpointReference>
            </urn1:epr>
            <urn1:homeCommunity>
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>?</urn1:homeCommunityId>
               <urn1:name>?</urn1:name>
            </urn1:homeCommunity>
            <urn1:url>?</urn1:url>
         </urn:NhinTargetSystem>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetEndpointURLFromNhinTargetCommunities" anonymous="optional" bindingOperationName="GetEndpointURLFromNhinTargetCommunities" inputName="GetEndpointURLFromNhinTargetCommunitiesRequest" isOneWay="false" name="GetEndpointURLFromNhinTargetCommunities" outputName="GetEndpointURLFromNhinTargetCommunitiesResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
         <urn:NhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>?</urn1:description>
                  <urn1:homeCommunityId>?</urn1:homeCommunityId>
                  <urn1:name>?</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
         <urn:serviceName>?</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetCommunitiesRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetHomeCommunityByAssigningAuthority" anonymous="optional" bindingOperationName="GetHomeCommunityByAssigningAuthority" inputName="GetHomeCommunityByAssigningAuthorityRequest" isOneWay="false" name="GetHomeCommunityByAssigningAuthority" outputName="GetHomeCommunityByAssigningAuthorityResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:AssigningAuthorityId>?</urn:AssigningAuthorityId>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetHomeCommunityByAssigningAuthorityRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
		<con:operation action="urn:GetInternalEndpointURLByServiceName" anonymous="optional" bindingOperationName="GetInternalEndpointURLByServiceName" inputName="GetInternalEndpointURLByServiceNameRequest" isOneWay="false" name="GetInternalEndpointURLByServiceName" outputName="GetInternalEndpointURLByServiceNameResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
			<con:call name="Request 1">
				<con:settings/>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[
					<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ServiceName>?</urn:ServiceName>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetInternalEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
			</con:call>
		</con:operation>
	</con:interface>
	
	<con:testSuite name="ConnectionManager TestSuite">
		<con:settings/>
		<con:runType>SEQUENTIAL</con:runType>
		<con:testCase failOnError="true" failTestCaseOnErrors="true" id="3867989d-e909-4597-b688-fe64f0711c5a" keepSession="false" maxResults="0" name="ForceRefreshInternalConnectCache TestCase" searchProperties="true">
			<con:settings/>
			<con:testStep name="ForceRefreshInternalConnectCache" type="request">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
					<con:operation>ForceRefreshInternalConnectCache</con:operation>
					<con:request name="ForceRefreshInternalConnectCache">
						<con:settings>
							<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
				</con:settings>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshInternalConnectCacheRequest>?</urn:ForceRefreshInternalConnectCacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:assertion type="SOAP Fault Assertion"/>
				<con:assertion type="XPath Match">
					<con:configuration>
						<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:ForceRefreshInternalConnectCacheResponse/ns2:success</path>
						<content>true</content>
						<allowWildcards>false</allowWildcards>
						<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
					</con:configuration>
				</con:assertion>
				<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
				<con:jmsPropertyConfig/>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshInternalConnectCacheRequest" mustUnderstand="NONE" version="200508"/>
				<con:wsrmConfig version="1.2"/>
			</con:request>
		</con:config>
	</con:testStep>
	<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:25Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:25Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:25</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="0db49d7b-aecc-47a9-98bc-8aab0f6234a1" keepSession="false" maxResults="0" name="ForceRefreshUDDICache TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="ForceRefreshUDDICache" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>ForceRefreshUDDICache</con:operation>
			<con:request name="ForceRefreshUDDICache">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshUDDICacheRequest>?</urn:ForceRefreshUDDICacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:ForceRefreshUDDICacheResponse/ns2:success</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshUDDICacheRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:26Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:26Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:26</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="97d0131a-3476-482f-9f1c-fbacab55a800" keepSession="false" maxResults="0" name="GetAdapterEndpointURL TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetAdapterEndpointURL" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAdapterEndpointURL</con:operation>
			<con:request name="GetAdapterEndpointURL">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAdapterEndpointURLRequest>
         <urn:serviceName>adapteradmindist</urn:serviceName>
         <urn:adapterLevel>LEVEL_a0</urn:adapterLevel>
      </urn:GetAdapterEndpointURLRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetAdapterEndpointURLResponse[1]</path>
				<content>http://localhost:8080/Adapter/AdminDistribution/A_0/AdapterAdministrativeDistribution</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAdapterEndpointURLRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:26Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:26Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:26</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="fae385b0-78cc-4b03-9af0-ca7e952d6e56" keepSession="false" maxResults="0" name="GetAllBusinessEntities TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetAllBusinessEntities" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAllBusinessEntities</con:operation>
			<con:request name="GetAllBusinessEntities">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitiesRequest>?</urn:GetAllBusinessEntitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns4='urn:uddi-org:api_v3';
count(//ns3:GetAllBusinessEntitiesResponse/ns4:businessEntity)</path>
				<content>2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitiesRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:26Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:26Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:26</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="52f3ae01-c13f-4bb1-a725-f5cf496027e4" keepSession="false" maxResults="0" name="GetAllBusinessEntitySetByServiceName TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetAllBusinessEntitySetByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAllBusinessEntitySetByServiceName</con:operation>
			<con:request name="GetAllBusinessEntitySetByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitySetByServiceNameRequest>QueryForDocuments</urn:GetAllBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
count(//ns2:GetAllBusinessEntitySetByServiceNameResponse/ns5:businessEntity)</path>
				<content>2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
//ns2:GetAllBusinessEntitySetByServiceNameResponse/ns5:businessEntity/ns5:identifierBag/ns5:keyedReference/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:27Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:27Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:27</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="0218401c-1187-44c1-9251-fd3c34a505e5" keepSession="false" maxResults="0" name="GetAssigningAuthoritiesByHomeCommunity TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep type="groovy" name="Clear AA Mapping Table &amp; Add Mapping"><con:settings/><con:config><script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, 2.2, 2.2)"
		sql.executeUpdate(insertSql, [])
		}</script></con:config></con:testStep><con:testStep name="GetAssigningAuthoritiesByHomeCommunity" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAssigningAuthoritiesByHomeCommunity</con:operation>
			<con:request name="GetAssigningAuthoritiesByHomeCommunity">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAssigningAuthoritiesByHomeCommunityRequest>2.2</urn:GetAssigningAuthoritiesByHomeCommunityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetAssigningAuthoritiesByHomeCommunityResponse/ns2:assigningAuthoritiesId</path>
				<content>2.2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAssigningAuthoritiesByHomeCommunityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:27Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:27Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:27</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="1aa3b5ec-effc-40da-b545-6f860a604234" keepSession="false" maxResults="0" name="GetBusinessEntity TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetBusinessEntity" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntity</con:operation>
			<con:request name="GetBusinessEntity">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityRequest>1.1</urn:GetBusinessEntityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
count(//ns3:GetBusinessEntityResponse)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns5='urn:uddi-org:api_v3';
//ns3:GetBusinessEntityResponse/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:28Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:28Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:28</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="6f9eaa82-6115-41e0-b6c4-442ee29eaafc" keepSession="false" maxResults="0" name="GetBusinessEntityByServiceName TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetBusinessEntityByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntityByServiceName</con:operation>
			<con:request name="GetBusinessEntityByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityByServiceNameRequest>
         <urn:HomeCommunityId>2.2</urn:HomeCommunityId>
         <urn:ServiceName>QueryForDocuments</urn:ServiceName>
      </urn:GetBusinessEntityByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration><path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns5='urn:uddi-org:api_v3';
//ns3:GetBusinessEntityByServiceNameResponse/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:2.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:28Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:28Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:28</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="849502f6-2f04-4045-a9ef-2e3a693a9a97" keepSession="false" maxResults="0" name="GetBusinessEntitySet TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetBusinessEntitySet" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntitySet</con:operation>
			<con:request name="GetBusinessEntitySet">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetRequest>
         <urn:homeCommunityId>1.1</urn:homeCommunityId>
      </urn:GetBusinessEntitySetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns4='urn:uddi-org:api_v3';
count(//ns3:GetBusinessEntitySetResponse/ns4:businessEntity)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID 1.1)" type="XPath Match">
			<con:configuration><path>declare namespace ns5='urn:uddi-org:api_v3';
//ns5:businessEntity[1]/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>		
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:28Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:28Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:28</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="f69e50d7-77fe-4c1f-a3b3-7519c1337b41" keepSession="false" maxResults="0" name="GetBusinessEntitySetByServiceName TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetBusinessEntitySetByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntitySetByServiceName</con:operation>
			<con:request name="GetBusinessEntitySetByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetByServiceNameRequest>
         <!--1 or more repetitions:-->
         <urn:HomeCommunityId>1.1</urn:HomeCommunityId>
         <urn:serviceName>adapteradmindist</urn:serviceName>
      </urn:GetBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
count(//ns2:GetBusinessEntitySetByServiceNameResponse/ns5:businessEntity)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
//ns2:GetBusinessEntitySetByServiceNameResponse/ns5:businessEntity/ns5:identifierBag/ns5:keyedReference/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:29Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:29Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:29</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="95fc9fca-0735-42a4-8493-60072b7605e2" keepSession="false" maxResults="0" name="GetDefaultEndpointURLByServiceName TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetDefaultEndpointURLByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetDefaultEndpointURLByServiceName</con:operation>
			<con:request name="GetDefaultEndpointURLByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetDefaultEndpointURLByServiceNameRequest>
         <urn:HomeCommunityId>1.1</urn:HomeCommunityId>
         <urn:ServiceName>AdminDistribution</urn:ServiceName>
      </urn:GetDefaultEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetDefaultEndpointURLByServiceNameResponse</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetDefaultEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:29Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:29Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:29</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="16b97b01-d6ee-4c6d-adb2-2de73b0bb504" keepSession="false" maxResults="0" name="GetEndpointURLFromNhinTarget TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetEndpointURLFromNhinTarget" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetEndpointURLFromNhinTarget</con:operation>
			<con:request name="GetEndpointURLFromNhinTarget">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetRequest>
         <urn:NhinTargetSystem>
            <urn1:homeCommunity>
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
               <urn1:name>?</urn1:name>
            </urn1:homeCommunity>
         </urn:NhinTargetSystem>
         <urn:serviceName>AdminDistribution</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetEndpointURLFromNhinTargetResponse</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:29Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:29Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:29</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="3905d5d2-d6e9-46bd-9ef5-23a24e906b3a" keepSession="false" maxResults="0" name="GetEndpointURLFromNhinTargetCommunities TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetEndpointURLFromNhinTargetCommunities" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetEndpointURLFromNhinTargetCommunities</con:operation>
			<con:request name="GetEndpointURLFromNhinTargetCommunities">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
         <urn:NhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>?</urn1:description>
                  <urn1:homeCommunityId>?</urn1:homeCommunityId>
                  <urn1:name>?</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>US-NY</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
         <urn:serviceName>AdminDistribution</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (URL)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//ns2:GetEndpointURLFromNhinTargetCommunitiesResponse[1]/ns2:URLInfos/ns3:url</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//ns2:GetEndpointURLFromNhinTargetCommunitiesResponse[1]/ns2:URLInfos/ns3:id</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetCommunitiesRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:30Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:30Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:30</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="dd3a0180-2bbe-4bad-8497-48abfa96cae0" keepSession="false" maxResults="0" name="GetHomeCommunityByAssigningAuthority TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetHomeCommunityByAssigningAuthority" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetHomeCommunityByAssigningAuthority</con:operation>
			<con:request name="GetHomeCommunityByAssigningAuthority">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetHomeCommunityByAssigningAuthorityRequest>2.2</urn:GetHomeCommunityByAssigningAuthorityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetHomeCommunityByAssigningAuthorityResponse</path>
				<content>2.2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetHomeCommunityByAssigningAuthorityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:30Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:30Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:30</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" id="420cc72a-daac-42e4-a36f-fb9dc2d9bcc7" keepSession="false" maxResults="0" name="GetInternalEndpointURLByServiceName TestCase" searchProperties="true">
	<con:settings/>
	<con:testStep name="GetInternalEndpointURLByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetInternalEndpointURLByServiceName</con:operation>
			<con:request name="GetInternalEndpointURLByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetInternalEndpointURLByServiceNameRequest>QueryForDocuments</urn:GetInternalEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetInternalEndpointURLByServiceNameResponse</path><content>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetInternalEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-17T16:49:30Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-17T16:59:30Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/17/2013 16:49:30</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-17T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:properties/>
</con:testSuite>
<con:testSuite name="ConnectionManager TestSuite - Passthrough">
		<con:settings/>
		<con:runType>SEQUENTIAL</con:runType>
		<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ForceRefreshInternalConnectCache TestCase" searchProperties="true" id="dccf20bb-a3e7-4690-b394-a130dc047513">
			<con:settings/>
			<con:testStep name="ForceRefreshInternalConnectCache" type="request">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
					<con:operation>ForceRefreshInternalConnectCache</con:operation>
					<con:request name="ForceRefreshInternalConnectCache">
						<con:settings>
							<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
				</con:settings>
				<con:encoding>UTF-8</con:encoding>
				<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
				<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshInternalConnectCacheRequest>?</urn:ForceRefreshInternalConnectCacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
				<con:assertion type="SOAP Fault Assertion"/>
				<con:assertion type="XPath Match">
					<con:configuration>
						<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:ForceRefreshInternalConnectCacheResponse/ns2:success</path>
						<content>true</content>
						<allowWildcards>false</allowWildcards>
						<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
					</con:configuration>
				</con:assertion>
				<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
				<con:jmsPropertyConfig/>
				<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshInternalConnectCacheRequest" mustUnderstand="NONE" version="200508"/>
				<con:wsrmConfig version="1.2"/>
			</con:request>
		</con:config>
	</con:testStep>
	<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:54Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:54Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:54</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ForceRefreshUDDICache TestCase" searchProperties="true" id="7c875e63-17b5-4266-98d6-e17e10589228">
	<con:settings/>
	<con:testStep name="ForceRefreshUDDICache" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>ForceRefreshUDDICache</con:operation>
			<con:request name="ForceRefreshUDDICache">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:ForceRefreshUDDICacheRequest>?</urn:ForceRefreshUDDICacheRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:ForceRefreshUDDICacheResponse/ns2:success</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/ForceRefreshUDDICacheRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:56Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:56Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:56</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAdapterEndpointURL TestCase" searchProperties="true" id="1aa47d45-c53d-4566-9243-9f4727249630">
	<con:settings/>
	<con:testStep name="GetAdapterEndpointURL" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAdapterEndpointURL</con:operation>
			<con:request name="GetAdapterEndpointURL">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAdapterEndpointURLRequest>
         <urn:serviceName>adapteradmindist</urn:serviceName>
         <urn:adapterLevel>LEVEL_a0</urn:adapterLevel>
      </urn:GetAdapterEndpointURLRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetAdapterEndpointURLResponse[1]</path>
				<content>http://localhost:8080/Adapter/AdminDistribution/A_0/AdapterAdministrativeDistribution</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAdapterEndpointURLRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:56Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:56Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:56</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAllBusinessEntities TestCase" searchProperties="true" id="58ddb715-cd41-429c-8600-76911a4d1724">
	<con:settings/>
	<con:testStep name="GetAllBusinessEntities" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAllBusinessEntities</con:operation>
			<con:request name="GetAllBusinessEntities">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitiesRequest>?</urn:GetAllBusinessEntitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns4='urn:uddi-org:api_v3';
count(//ns3:GetAllBusinessEntitiesResponse/ns4:businessEntity)</path>
				<content>2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitiesRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:56Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:56Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:56</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAllBusinessEntitySetByServiceName TestCase" searchProperties="true" id="a425eeaa-9d3a-4856-815f-309d35afc4b9">
	<con:settings/>
	<con:testStep name="GetAllBusinessEntitySetByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAllBusinessEntitySetByServiceName</con:operation>
			<con:request name="GetAllBusinessEntitySetByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAllBusinessEntitySetByServiceNameRequest>QueryForDocuments</urn:GetAllBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
count(//ns2:GetAllBusinessEntitySetByServiceNameResponse/ns5:businessEntity)</path>
				<content>2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
//ns2:GetAllBusinessEntitySetByServiceNameResponse/ns5:businessEntity/ns5:identifierBag/ns5:keyedReference/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAllBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:57Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:57Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:57</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAssigningAuthoritiesByHomeCommunity TestCase" searchProperties="true" id="099f30b4-b80e-48b2-b4e3-b854115aed6a">
	<con:settings/>
	<con:testStep type="groovy" name="Clear AA Mapping Table &amp; Add Mapping"><con:settings/><con:config><script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, 2.2, 2.2)"
		sql.executeUpdate(insertSql, [])
		}</script></con:config></con:testStep><con:testStep name="GetAssigningAuthoritiesByHomeCommunity" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetAssigningAuthoritiesByHomeCommunity</con:operation>
			<con:request name="GetAssigningAuthoritiesByHomeCommunity">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetAssigningAuthoritiesByHomeCommunityRequest>2.2</urn:GetAssigningAuthoritiesByHomeCommunityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetAssigningAuthoritiesByHomeCommunityResponse/ns2:assigningAuthoritiesId</path>
				<content>2.2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetAssigningAuthoritiesByHomeCommunityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:58Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:58Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:58</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetBusinessEntity TestCase" searchProperties="true" id="a84e79f3-c311-40e4-8072-519249d95234">
	<con:settings/>
	<con:testStep name="GetBusinessEntity" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntity</con:operation>
			<con:request name="GetBusinessEntity">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityRequest>1.1</urn:GetBusinessEntityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
count(//ns3:GetBusinessEntityResponse)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns5='urn:uddi-org:api_v3';
//ns3:GetBusinessEntityResponse/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:59Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:59Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:59</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetBusinessEntityByServiceName TestCase" searchProperties="true" id="85d7d770-101a-4767-95b9-015f70202b9a">
	<con:settings/>
	<con:testStep name="GetBusinessEntityByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntityByServiceName</con:operation>
			<con:request name="GetBusinessEntityByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntityByServiceNameRequest>
         <urn:HomeCommunityId>2.2</urn:HomeCommunityId>
         <urn:ServiceName>QueryForDocuments</urn:ServiceName>
      </urn:GetBusinessEntityByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration><path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns5='urn:uddi-org:api_v3';
//ns3:GetBusinessEntityByServiceNameResponse/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:2.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntityByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:01:59Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:11:59Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:01:59</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetBusinessEntitySet TestCase" searchProperties="true" id="60fba7c9-0360-4ddf-bf9c-7e51cfb0a9b2">
	<con:settings/>
	<con:testStep name="GetBusinessEntitySet" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntitySet</con:operation>
			<con:request name="GetBusinessEntitySet">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetRequest>
         <urn:homeCommunityId>1.1</urn:homeCommunityId>
      </urn:GetBusinessEntitySetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns3='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo'; declare namespace ns4='urn:uddi-org:api_v3';
count(//ns3:GetBusinessEntitySetResponse/ns4:businessEntity)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID 1.1)" type="XPath Match">
			<con:configuration><path>declare namespace ns5='urn:uddi-org:api_v3';
//ns5:businessEntity[1]/ns5:identifierBag[1]/ns5:keyedReference[1]/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>		
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:00Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:00Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:00</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetBusinessEntitySetByServiceName TestCase" searchProperties="true" id="7bf49aba-8c8b-47c6-918c-ac13c80970fb">
	<con:settings/>
	<con:testStep name="GetBusinessEntitySetByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetBusinessEntitySetByServiceName</con:operation>
			<con:request name="GetBusinessEntitySetByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetBusinessEntitySetByServiceNameRequest>
         <!--1 or more repetitions:-->
         <urn:HomeCommunityId>1.1</urn:HomeCommunityId>
         <urn:serviceName>adapteradmindist</urn:serviceName>
      </urn:GetBusinessEntitySetByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (Count)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
count(//ns2:GetBusinessEntitySetByServiceNameResponse/ns5:businessEntity)</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns5='urn:uddi-org:api_v3';
//ns2:GetBusinessEntitySetByServiceNameResponse/ns5:businessEntity/ns5:identifierBag/ns5:keyedReference/@keyValue</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetBusinessEntitySetByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:01Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:01Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:01</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetDefaultEndpointURLByServiceName TestCase" searchProperties="true" id="d28747ab-b68e-48cf-a5dc-748ed1a3bf04">
	<con:settings/>
	<con:testStep name="GetDefaultEndpointURLByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetDefaultEndpointURLByServiceName</con:operation>
			<con:request name="GetDefaultEndpointURLByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetDefaultEndpointURLByServiceNameRequest>
         <urn:HomeCommunityId>1.1</urn:HomeCommunityId>
         <urn:ServiceName>AdminDistribution</urn:ServiceName>
      </urn:GetDefaultEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetDefaultEndpointURLByServiceNameResponse</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetDefaultEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:01Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:01Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:01</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetEndpointURLFromNhinTarget TestCase" searchProperties="true" id="b6be174c-54ce-44b9-87f5-cf7096b55f6c">
	<con:settings/>
	<con:testStep name="GetEndpointURLFromNhinTarget" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetEndpointURLFromNhinTarget</con:operation>
			<con:request name="GetEndpointURLFromNhinTarget">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetRequest>
         <urn:NhinTargetSystem>
            <urn1:homeCommunity>
               <urn1:description>?</urn1:description>
               <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
               <urn1:name>?</urn1:name>
            </urn1:homeCommunity>
         </urn:NhinTargetSystem>
         <urn:serviceName>AdminDistribution</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetEndpointURLFromNhinTargetResponse</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:02Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:02Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:02</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetEndpointURLFromNhinTargetCommunities TestCase" searchProperties="true" id="e9f81b36-9efa-45e5-985f-91f1f3c919c7">
	<con:settings/>
	<con:testStep name="GetEndpointURLFromNhinTargetCommunities" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetEndpointURLFromNhinTargetCommunities</con:operation>
			<con:request name="GetEndpointURLFromNhinTargetCommunities">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body>
      <urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
         <urn:NhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>?</urn1:description>
                  <urn1:homeCommunityId>?</urn1:homeCommunityId>
                  <urn1:name>?</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>US-NY</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
         <urn:serviceName>AdminDistribution</urn:serviceName>
      </urn:GetEndpointURLFromNhinTargetCommunitiesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion name="XPath Match (URL)" type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//ns2:GetEndpointURLFromNhinTargetCommunitiesResponse[1]/ns2:URLInfos/ns3:url</path>
				<content>https://localhost:8181/Gateway/AdminDistribution/2_0/NhinService/NhinAdminDist</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:assertion name="XPath Match (HCID)" type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
declare namespace ns3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//ns2:GetEndpointURLFromNhinTargetCommunitiesResponse[1]/ns2:URLInfos/ns3:id</path><content>urn:oid:1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetEndpointURLFromNhinTargetCommunitiesRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:02Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:02Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:02</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetHomeCommunityByAssigningAuthority TestCase" searchProperties="true" id="20d02380-7931-4c19-8f67-363c67036039">
	<con:settings/>
	<con:testStep name="GetHomeCommunityByAssigningAuthority" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetHomeCommunityByAssigningAuthority</con:operation>
			<con:request name="GetHomeCommunityByAssigningAuthority">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetHomeCommunityByAssigningAuthorityRequest>2.2</urn:GetHomeCommunityByAssigningAuthorityRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration>
				<path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetHomeCommunityByAssigningAuthorityResponse</path>
				<content>2.2</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
			</con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetHomeCommunityByAssigningAuthorityRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:02Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:02Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:02</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetInternalEndpointURLByServiceName TestCase" searchProperties="true" id="83e609f3-29e9-481d-a2e2-9dc6506c4c70">
	<con:settings/>
	<con:testStep name="GetInternalEndpointURLByServiceName" type="request">
		<con:settings/>
		<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:interface>NhincComponentConnectionManagerBindingSoap</con:interface>
			<con:operation>GetInternalEndpointURLByServiceName</con:operation>
			<con:request name="GetInternalEndpointURLByServiceName">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:encoding>UTF-8</con:encoding>
		<con:endpoint>${#Project#Endpoint-ConnectionManager}</con:endpoint>
		<con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo">
   <soap:Header/>
   <soap:Body>
      <urn:GetInternalEndpointURLByServiceNameRequest>QueryForDocuments</urn:GetInternalEndpointURLByServiceNameRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
		<con:assertion type="SOAP Fault Assertion"/>
		<con:assertion type="XPath Match">
			<con:configuration><path>declare namespace ns2='urn:gov:hhs:fha:nhinc:common:connectionmanagerinfo';
//ns2:GetInternalEndpointURLByServiceNameResponse</path><content>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
		</con:assertion>
		<con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhinccomponentconnectionmanager/NhincComponentConnectionManagerPortType/GetInternalEndpointURLByServiceNameRequest" mustUnderstand="NONE" version="200508"/>
		<con:wsrmConfig version="1.2"/>
	</con:request>
</con:config>
</con:testStep>
<con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setPassthruMode();</con:setupScript><con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty("GatewayPropDir"), log);

def config = context.getConfiguration();
config.setStandardMode();</con:tearDownScript><con:properties><con:property><con:name>startDate</con:name><con:value>2013-09-18T22:02:03Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2013-09-18T22:12:03Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>09/18/2013 22:02:03</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2013-10-18T00:00:00Z</con:value></con:property></con:properties>
</con:testCase>
<con:properties/>
</con:testSuite><con:properties>
	<con:property>
		<con:name>Endpoint-ConnectionManager</con:name>
		<con:value>http://localhost:8080/CONNECTCommon/NhincComponentConnectionManager </con:value>
	</con:property>
<con:property><con:name>project.name</con:name><con:value>ConnectionManagerTest</con:value></con:property><con:property><con:name>GatewayPropDir</con:name><con:value>D:\glassfish3\glassfish\domains\domain1\config\nhin</con:value></con:property><con:property><con:name>AAMappingDB</con:name><con:value>assigningauthoritydb</con:value></con:property><con:property><con:name>AAMappingTable</con:name><con:value>aa_to_home_community_mapping</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>localhost</con:value></con:property><con:property><con:name>DBUser</con:name><con:value>nhincuser</con:value></con:property><con:property><con:name>DBPass</con:name><con:value>nhincpass</con:value></con:property><con:property><con:name>DBPort</con:name><con:value>3306</con:value></con:property><con:property><con:name>ASUsername</con:name><con:value>admin</con:value></con:property><con:property><con:name>ASPassword</con:name><con:value>adminadmin</con:value></con:property><con:property><con:name>JMXHost</con:name><con:value>localhost</con:value></con:property><con:property><con:name>JMXPort</con:name><con:value>8686</con:value></con:property></con:properties>
<con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileInputStream(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}

TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
afterRun: { testRunner, runContext -> },
afterStep: { testRunner, runContext, result -> },
beforeStep: { testRunner, runContext -> },
beforeStep: { testRunner, runContext, testStep -> },
beforeRun: { testRunner, runContext -> 
use (org.codehaus.groovy.runtime.TimeCategory) {
def startDate = 5.minutes.ago
def endDate = 5.minutes.from.now
def expireDate = 30.days.from.now

def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
def dfSig = "MM/dd/yyyy' 'HH:mm:ss"

runContext.testCase.setPropertyValue("startDate", startDate.format(df))
runContext.testCase.setPropertyValue("endDate", endDate.format(df))
runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
}
}   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
return delegate.getProperty(propertyName) ?:
delegate.testCase.getPropertyValue(propertyName) ?:
delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
delegate.testCase.testSuite.project.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
def host = delegate.findProperty('DBHost')
def port = delegate.findProperty('DBPort')
def user = delegate.findProperty('DBUser')
def pass = delegate.findProperty('DBPass')

def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
try {
block(sql)
} finally {
sql.close()
}
}

import javax.management.remote.JMXConnectorFactory as JmxFactory
import javax.management.remote.JMXServiceURL as JmxUrl
import javax.management.remote.*;

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.getConfiguration = { ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");

  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ]
  def serverUrl = 'service:jmx:rmi://' + jmxHost + ':' + jmxPort + '/jndi/rmi://' + jmxHost + ':' + jmxPort + '/jmxrmi';
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env).MBeanServerConnection
  def config = new GroovyMBean(server, 'org.connectopensource.mbeans:type=Configuration');
  return config;
}</con:afterLoadScript><con:wssContainer/>
<con:sensitiveInformation/></con:soapui-project>