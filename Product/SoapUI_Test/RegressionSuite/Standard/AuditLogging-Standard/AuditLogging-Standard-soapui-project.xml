<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="AuditLogging-Standard" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" id="5db14dc5-8331-41c4-a9aa-da6343567d30" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entityadmindistribution}AdministrativeDistribution_Binding_Soap12" definition="../../../target/wsdl/EntityAdminDist_g1.wsdl" name="AdministrativeDistribution_Binding_Soap12_g1" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="c126afab-fa89-4571-a3dd-26a231fd90a8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/AdminDistribution/2_0/AdministrativeDistribution_Service</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:oasis:names:tc:emergency:EDXL:DE:1.0:SendAlertMessage" bindingOperationName="SendAlertMessage" inputName="" isOneWay="false" name="SendAlertMessage" sendsAttachments="false" type="One-Way" id="3ad22219-5a5d-4db3-8df4-5a9902fadc6a">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr}EntityXDR_Binding" definition="../../../target/wsdl/EntityXDR.wsdl" name="EntityXDR_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="b45a46f7-4b7d-45cb-9cf8-7acfd1895d25" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionUnsecured</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTGateway/EntityService/EntityDocSubmissionUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation action="" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-b" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-b" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="8e18d70b-c632-420a-ac0c-cc71b4115b7a">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr:async:response}EntityXDRAsyncResponse_Binding" definition="../../../target/wsdl/EntityXDRResponse.wsdl" name="EntityXDRAsyncResponse_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="092da90c-575f-4750-b484-1898cc96fea7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRAsyncResponse</con:endpoint>
    </con:endpoints>
    <con:operation action="" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-bAsyncResponse" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-bAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="5f19da53-a9c3-48c7-9084-f2af01377f66">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request}EntityXDRAsyncRequest_Binding" definition="../../../target/wsdl/EntityXDRRequest.wsdl" name="EntityXDRAsyncRequest_Binding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="0e5015f2-97e8-4682-95ca-eb33ed4414d7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRAsyncRequest</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/EntityService/EntityXDRRequest</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:endpoint>
    </con:endpoints>
    <con:operation action="tns:ProvideAndRegisterDocumentSet-bAsyncRequest" anonymous="optional" bindingOperationName="ProvideAndRegisterDocumentSet-bAsyncRequest" inputName="" isOneWay="false" name="ProvideAndRegisterDocumentSet-bAsyncRequest" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="4c0c77a3-4bd5-44e1-b76b-a067bb729b80">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscovery}EntityPatientDiscoveryBindingSoap" definition="../../../target/wsdl/EntityPatientDiscovery.wsdl" name="EntityPatientDiscoveryBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="8c8a5dbe-9819-47db-ae01-9bacac0e2c31" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:endpoint>
      <con:endpoint>http://localhost:8080/CONNECTGateway/EntityPatientDiscovery</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitypatientdiscovery:RespondingGateway_PRPA_IN201305UV02RequestMessage" bindingOperationName="RespondingGateway_PRPA_IN201305UV02" inputName="RespondingGateway_PRPA_IN201305UV02Request" isOneWay="false" name="RespondingGateway_PRPA_IN201305UV02" outputName="RespondingGateway_PRPA_IN201306UV02Response" receivesAttachments="false" sendsAttachments="false" type="Request-Response" anonymous="optional" id="db6fd908-4d9f-43d8-b832-d04499d2795e">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq}EntityPatientDiscoveryAsyncReqBindingSoap" definition="../../../target/wsdl/EntityPatientDiscoveryAsyncReq.wsdl" name="EntityPatientDiscoveryAsyncReqBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="c2372cf7-477b-46e4-bd1d-e5e1695d36bc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
      <con:endpoint>http://localhost/NhinConnect/EntityPatientDiscoveryAsyncReq</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:ProcessPatientDiscoveryAsyncReq" anonymous="optional" bindingOperationName="ProcessPatientDiscoveryAsyncReq" inputName="ProcessPatientDiscoveryAsyncReqAsyncRequest" isOneWay="false" name="ProcessPatientDiscoveryAsyncReq" outputName="ProcessPatientDiscoveryAsyncReqAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="16a9a484-a1b8-42a0-b93f-9faa9209dac5">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitydocretrieve}EntityDocRetrieveBindingSoap" definition="../../../target/wsdl/EntityDocRetrieve.wsdl" name="EntityDocRetrieveBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="45ea3e5f-7537-4425-a33c-73709193c20c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentRetrieve/2_0/EntityService/EntityDocRetrieve</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityDocRetrieve</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitydocretrieve:RespondingGateway_CrossGatewayRetrieveRequestMessage" anonymous="optional" bindingOperationName="RespondingGateway_CrossGatewayRetrieve" inputName="RespondingGateway_CrossGatewayRetrieveRequest" isOneWay="false" name="RespondingGateway_CrossGatewayRetrieve" outputName="RespondingGateway_CrossGatewayRetrieveResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="c8bb2134-2cf9-4dca-bf94-d3e7ebaf083b">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp}EntityPatientDiscoveryAsyncRespBindingSoap" definition="../../../target/wsdl/EntityPatientDiscoveryAsyncResp.wsdl" name="EntityPatientDiscoveryAsyncRespBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="97d981d5-6f8d-4fca-a059-ce607375e8d1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
      <con:endpoint>http://localhost/NhinConnect/EntityPatientDiscoveryAsyncResp</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:endpoint>
    </con:endpoints>
    <con:operation action="" bindingOperationName="ProcessPatientDiscoveryAsyncResp" inputName="ProcessPatientDiscoveryAsyncRespAsyncRequest" isOneWay="false" name="ProcessPatientDiscoveryAsyncResp" outputName="ProcessPatientDiscoveryAsyncRespAsyncResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" anonymous="optional" id="70d70d58-af8a-42b7-add6-84dcec4d0665">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entitydocquery}EntityDocQueryBindingSoap" definition="../../../target/wsdl/EntityDocQuery.wsdl" name="EntityDocQueryBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" id="0b000165-8ffb-436c-b5f6-59762d0305f6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/DocumentQuery/2_0/EntityService/EntityDocQueryUnsecured</con:endpoint>
      <con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityDocQuery</con:endpoint>
    </con:endpoints>
    <con:operation action="urn:gov:hhs:fha:nhinc:entitydocquery:RespondingGateway_CrossGatewayQueryRequest" anonymous="optional" bindingOperationName="RespondingGateway_CrossGatewayQuery" inputName="RespondingGateway_CrossGatewayQueryRequest" isOneWay="false" name="RespondingGateway_CrossGatewayQuery" outputName="RespondingGateway_CrossGatewayQueryResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response" id="8a429e1d-44e7-409b-874a-b711fda21dca">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AdministrativeDistribution_Binding_Soap12_g0" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entityadmindistribution}AdministrativeDistribution_Binding_Soap12" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityAdminDist.wsdl" id="90e3783f-3190-4d2a-967e-936d7eb18a7e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:${HttpDefaultPort}/Gateway/AdminDistribution/1_0/AdministrativeDistribution_Service</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="urn:oasis:names:tc:emergency:EDXL:DE:1.0:SendAlertMessage" name="SendAlertMessage" bindingOperationName="SendAlertMessage" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional" id="4e1fefc3-eb03-4b53-8b7e-ca942994e7b1">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="f0a24bce-da81-4e18-8039-62869959c115" wsaVersion="NONE" name="EntityDocQueryDeferredResultBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:dq:entitydeferredresponse}EntityDocQueryDeferredResultBindingSoap" soapVersion="1_2" anonymous="optional" definition="../../../target/wsdl/EntityDeferredResultsOptionResponse.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:/NhinConnect/EntityDocQueryDeferredResult</con:endpoint></con:endpoints><con:operation id="07d1daea-8013-4ce4-b74b-35c7420d5232" isOneWay="false" action="urn:gov:hhs:fha:nhinc:dq:entitydeferredresponse:RespondingGateway_CrossGatewayQueryDeferredEntity" name="RespondingGateway_CrossGatewayQueryDeferredEntity" bindingOperationName="RespondingGateway_CrossGatewayQueryDeferredEntity" type="Request-Response" outputName="RespondingGateway_CrossGatewayQueryDeferredResponse" inputName="RespondingGateway_CrossGatewayQueryDeferredResult" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a969c298-bfb0-4a34-8929-43dba6c3f7e0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:/NhinConnect/EntityDocQueryDeferredResult</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn4="urn:gov:hhs:fha:nhinc:common:nhinccommon">\r
   <soap:Header/>\r
   <soap:Body>\r
      <urn:RespondingGateway_CrossGatewayQueryResponse>\r
         <urn1:AdhocQueryResponse status="?" requestId="?" startIndex="0" totalResultCount="?">\r
            <!--Optional:-->\r
            <urn2:ResponseSlotList>\r
               <!--Zero or more repetitions:-->\r
               <urn3:Slot name="?" slotType="?">\r
                  <urn3:ValueList>\r
                     <urn3:Value>?</urn3:Value>\r
                  </urn3:ValueList>\r
               </urn3:Slot>\r
            </urn2:ResponseSlotList>\r
            <!--Optional:-->\r
            <urn2:RegistryErrorList highestSeverity="?">\r
               <!--1 or more repetitions:-->\r
               <urn2:RegistryError codeContext="?" errorCode="?" severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" location="?">?</urn2:RegistryError>\r
            </urn2:RegistryErrorList>\r
            <urn3:RegistryObjectList>\r
               <!--Zero or more repetitions:-->\r
               <urn3:Identifiable id="?" home="?">\r
                  <!--Zero or more repetitions:-->\r
                  <urn3:Slot name="?" slotType="?">\r
                     <urn3:ValueList>\r
                        <urn3:Value>?</urn3:Value>\r
                     </urn3:ValueList>\r
                  </urn3:Slot>\r
               </urn3:Identifiable>\r
            </urn3:RegistryObjectList>\r
         </urn1:AdhocQueryResponse>\r
         <urn:assertion>\r
            <!--Optional:-->\r
            <urn4:address>\r
               <urn4:addressType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:addressType>\r
               <urn4:city>?</urn4:city>\r
               <urn4:country>?</urn4:country>\r
               <urn4:state>?</urn4:state>\r
               <urn4:streetAddress>?</urn4:streetAddress>\r
               <urn4:zipCode>?</urn4:zipCode>\r
            </urn4:address>\r
            <!--Optional:-->\r
            <urn4:dateOfBirth>?</urn4:dateOfBirth>\r
            <!--Optional:-->\r
            <urn4:explanationNonClaimantSignature>?</urn4:explanationNonClaimantSignature>\r
            <!--Optional:-->\r
            <urn4:haveSecondWitnessSignature>?</urn4:haveSecondWitnessSignature>\r
            <!--Optional:-->\r
            <urn4:haveSignature>?</urn4:haveSignature>\r
            <!--Optional:-->\r
            <urn4:haveWitnessSignature>?</urn4:haveWitnessSignature>\r
            <urn4:homeCommunity>\r
               <!--Optional:-->\r
               <urn4:description>?</urn4:description>\r
               <urn4:homeCommunityId>?</urn4:homeCommunityId>\r
               <!--Optional:-->\r
               <urn4:name>?</urn4:name>\r
            </urn4:homeCommunity>\r
            <!--Optional:-->\r
            <urn4:nationalProviderId>?</urn4:nationalProviderId>\r
            <!--Optional:-->\r
            <urn4:personName>\r
               <urn4:familyName>?</urn4:familyName>\r
               <urn4:givenName>?</urn4:givenName>\r
               <urn4:nameType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:nameType>\r
               <urn4:secondNameOrInitials>?</urn4:secondNameOrInitials>\r
               <urn4:fullName>?</urn4:fullName>\r
               <urn4:prefix>?</urn4:prefix>\r
               <urn4:suffix>?</urn4:suffix>\r
            </urn4:personName>\r
            <!--Optional:-->\r
            <urn4:phoneNumber>\r
               <urn4:areaCode>?</urn4:areaCode>\r
               <urn4:countryCode>?</urn4:countryCode>\r
               <urn4:extension>?</urn4:extension>\r
               <urn4:localNumber>?</urn4:localNumber>\r
               <urn4:phoneNumberType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:phoneNumberType>\r
            </urn4:phoneNumber>\r
            <!--Optional:-->\r
            <urn4:secondWitnessAddress>\r
               <urn4:addressType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:addressType>\r
               <urn4:city>?</urn4:city>\r
               <urn4:country>?</urn4:country>\r
               <urn4:state>?</urn4:state>\r
               <urn4:streetAddress>?</urn4:streetAddress>\r
               <urn4:zipCode>?</urn4:zipCode>\r
            </urn4:secondWitnessAddress>\r
            <!--Optional:-->\r
            <urn4:secondWitnessName>\r
               <urn4:familyName>?</urn4:familyName>\r
               <urn4:givenName>?</urn4:givenName>\r
               <urn4:nameType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:nameType>\r
               <urn4:secondNameOrInitials>?</urn4:secondNameOrInitials>\r
               <urn4:fullName>?</urn4:fullName>\r
               <urn4:prefix>?</urn4:prefix>\r
               <urn4:suffix>?</urn4:suffix>\r
            </urn4:secondWitnessName>\r
            <!--Optional:-->\r
            <urn4:secondWitnessPhone>\r
               <urn4:areaCode>?</urn4:areaCode>\r
               <urn4:countryCode>?</urn4:countryCode>\r
               <urn4:extension>?</urn4:extension>\r
               <urn4:localNumber>?</urn4:localNumber>\r
               <urn4:phoneNumberType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:phoneNumberType>\r
            </urn4:secondWitnessPhone>\r
            <!--Optional:-->\r
            <urn4:SSN>?</urn4:SSN>\r
            <!--Zero or more repetitions:-->\r
            <urn4:uniquePatientId>?</urn4:uniquePatientId>\r
            <!--Optional:-->\r
            <urn4:witnessAddress>\r
               <urn4:addressType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:addressType>\r
               <urn4:city>?</urn4:city>\r
               <urn4:country>?</urn4:country>\r
               <urn4:state>?</urn4:state>\r
               <urn4:streetAddress>?</urn4:streetAddress>\r
               <urn4:zipCode>?</urn4:zipCode>\r
            </urn4:witnessAddress>\r
            <!--Optional:-->\r
            <urn4:witnessName>\r
               <urn4:familyName>?</urn4:familyName>\r
               <urn4:givenName>?</urn4:givenName>\r
               <urn4:nameType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:nameType>\r
               <urn4:secondNameOrInitials>?</urn4:secondNameOrInitials>\r
               <urn4:fullName>?</urn4:fullName>\r
               <urn4:prefix>?</urn4:prefix>\r
               <urn4:suffix>?</urn4:suffix>\r
            </urn4:witnessName>\r
            <!--Optional:-->\r
            <urn4:witnessPhone>\r
               <urn4:areaCode>?</urn4:areaCode>\r
               <urn4:countryCode>?</urn4:countryCode>\r
               <urn4:extension>?</urn4:extension>\r
               <urn4:localNumber>?</urn4:localNumber>\r
               <urn4:phoneNumberType>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:phoneNumberType>\r
            </urn4:witnessPhone>\r
            <urn4:userInfo>\r
               <urn4:personName>\r
                  <urn4:familyName>?</urn4:familyName>\r
                  <urn4:givenName>?</urn4:givenName>\r
                  <urn4:nameType>\r
                     <urn4:code>?</urn4:code>\r
                     <!--Optional:-->\r
                     <urn4:codeSystem>?</urn4:codeSystem>\r
                     <!--Optional:-->\r
                     <urn4:codeSystemName>?</urn4:codeSystemName>\r
                     <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                     <urn4:displayName>?</urn4:displayName>\r
                     <urn4:originalText>?</urn4:originalText>\r
                     <!--Zero or more repetitions:-->\r
                     <urn4:translation/>\r
                  </urn4:nameType>\r
                  <urn4:secondNameOrInitials>?</urn4:secondNameOrInitials>\r
                  <urn4:fullName>?</urn4:fullName>\r
                  <urn4:prefix>?</urn4:prefix>\r
                  <urn4:suffix>?</urn4:suffix>\r
               </urn4:personName>\r
               <urn4:userName>?</urn4:userName>\r
               <urn4:org>\r
                  <!--Optional:-->\r
                  <urn4:description>?</urn4:description>\r
                  <urn4:homeCommunityId>?</urn4:homeCommunityId>\r
                  <!--Optional:-->\r
                  <urn4:name>?</urn4:name>\r
               </urn4:org>\r
               <urn4:roleCoded>\r
                  <urn4:code>?</urn4:code>\r
                  <!--Optional:-->\r
                  <urn4:codeSystem>?</urn4:codeSystem>\r
                  <!--Optional:-->\r
                  <urn4:codeSystemName>?</urn4:codeSystemName>\r
                  <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
                  <urn4:displayName>?</urn4:displayName>\r
                  <urn4:originalText>?</urn4:originalText>\r
                  <!--Zero or more repetitions:-->\r
                  <urn4:translation/>\r
               </urn4:roleCoded>\r
            </urn4:userInfo>\r
            <urn4:authorized>?</urn4:authorized>\r
            <urn4:purposeOfDisclosureCoded>\r
               <urn4:code>?</urn4:code>\r
               <!--Optional:-->\r
               <urn4:codeSystem>?</urn4:codeSystem>\r
               <!--Optional:-->\r
               <urn4:codeSystemName>?</urn4:codeSystemName>\r
               <urn4:codeSystemVersion>?</urn4:codeSystemVersion>\r
               <urn4:displayName>?</urn4:displayName>\r
               <urn4:originalText>?</urn4:originalText>\r
               <!--Zero or more repetitions:-->\r
               <urn4:translation/>\r
            </urn4:purposeOfDisclosureCoded>\r
            <!--Optional:-->\r
            <urn4:acpAttribute>?</urn4:acpAttribute>\r
            <!--Optional:-->\r
            <urn4:instanceAcpAttribute>?</urn4:instanceAcpAttribute>\r
            <!--Optional:-->\r
            <urn4:samlConditions>\r
               <urn4:notBefore>?</urn4:notBefore>\r
               <urn4:notOnOrAfter>?</urn4:notOnOrAfter>\r
            </urn4:samlConditions>\r
            <!--Optional:-->\r
            <urn4:samlAuthnStatement>\r
               <urn4:authInstant>?</urn4:authInstant>\r
               <!--Optional:-->\r
               <urn4:sessionIndex>?</urn4:sessionIndex>\r
               <urn4:authContextClassRef>?</urn4:authContextClassRef>\r
               <!--Optional:-->\r
               <urn4:subjectLocalityAddress>?</urn4:subjectLocalityAddress>\r
               <!--Optional:-->\r
               <urn4:subjectLocalityDNSName>?</urn4:subjectLocalityDNSName>\r
            </urn4:samlAuthnStatement>\r
            <!--Optional:-->\r
            <urn4:samlAuthzDecisionStatement>\r
               <!--Optional:-->\r
               <urn4:decision>?</urn4:decision>\r
               <!--Optional:-->\r
               <urn4:resource>?</urn4:resource>\r
               <!--Optional:-->\r
               <urn4:action>?</urn4:action>\r
               <!--Optional:-->\r
               <urn4:evidence>\r
                  <!--Optional:-->\r
                  <urn4:assertion>\r
                     <!--Optional:-->\r
                     <urn4:id>?</urn4:id>\r
                     <!--Optional:-->\r
                     <urn4:issueInstant>?</urn4:issueInstant>\r
                     <!--Optional:-->\r
                     <urn4:version>?</urn4:version>\r
                     <!--Optional:-->\r
                     <urn4:issuer>?</urn4:issuer>\r
                     <!--Optional:-->\r
                     <urn4:issuerFormat>?</urn4:issuerFormat>\r
                     <!--Optional:-->\r
                     <urn4:subject>?</urn4:subject>\r
                     <!--Optional:-->\r
                     <urn4:conditions>\r
                        <!--Optional:-->\r
                        <urn4:notBefore>?</urn4:notBefore>\r
                        <!--Optional:-->\r
                        <urn4:notOnOrAfter>?</urn4:notOnOrAfter>\r
                     </urn4:conditions>\r
                     <!--Zero or more repetitions:-->\r
                     <urn4:accessConsentPolicy>?</urn4:accessConsentPolicy>\r
                     <!--Zero or more repetitions:-->\r
                     <urn4:instanceAccessConsentPolicy>?</urn4:instanceAccessConsentPolicy>\r
                  </urn4:assertion>\r
               </urn4:evidence>\r
            </urn4:samlAuthzDecisionStatement>\r
            <!--Optional:-->\r
            <urn4:samlSignature>\r
               <!--Optional:-->\r
               <urn4:keyInfo>\r
                  <!--Optional:-->\r
                  <urn4:rsaKeyValueModulus>cid:508121419485</urn4:rsaKeyValueModulus>\r
                  <!--Optional:-->\r
                  <urn4:rsaKeyValueExponent>cid:1311968438678</urn4:rsaKeyValueExponent>\r
               </urn4:keyInfo>\r
               <!--Optional:-->\r
               <urn4:signatureValue>cid:798312208736</urn4:signatureValue>\r
            </urn4:samlSignature>\r
            <!--Optional:-->\r
            <urn4:samlIssuer>\r
               <!--Optional:-->\r
               <urn4:issuer>?</urn4:issuer>\r
               <!--Optional:-->\r
               <urn4:issuerFormat>?</urn4:issuerFormat>\r
            </urn4:samlIssuer>\r
            <!--Zero or more repetitions:-->\r
            <urn4:samlSubjectConfirmations>\r
               <urn4:method>?</urn4:method>\r
               <!--Optional:-->\r
               <urn4:subjectCondition>\r
                  <urn4:notBefore>?</urn4:notBefore>\r
                  <urn4:notOnOrAfter>?</urn4:notOnOrAfter>\r
               </urn4:subjectCondition>\r
               <!--Optional:-->\r
               <urn4:recipient>?</urn4:recipient>\r
               <!--Optional:-->\r
               <urn4:inResponseTo>?</urn4:inResponseTo>\r
               <!--Optional:-->\r
               <urn4:address>?</urn4:address>\r
            </urn4:samlSubjectConfirmations>\r
            <!--Optional:-->\r
            <urn4:messageId>?</urn4:messageId>\r
            <!--Zero or more repetitions:-->\r
            <urn4:relatesToList>?</urn4:relatesToList>\r
            <!--Optional:-->\r
            <urn4:implementsSpecVersion>?</urn4:implementsSpecVersion>\r
            <!--Optional:-->\r
            <urn4:transactionTimeout>-1</urn4:transactionTimeout>\r
            <!--Optional:-->\r
            <urn4:keepAlive>?</urn4:keepAlive>\r
            <!--Zero or more repetitions:-->\r
            <urn4:CONNECTCustomHttpHeaders>\r
               <urn4:headerName>?</urn4:headerName>\r
               <urn4:headerValue>?</urn4:headerValue>\r
            </urn4:CONNECTCustomHttpHeaders>\r
            <!--Optional:-->\r
            <urn4:signatureAlgorithm>?</urn4:signatureAlgorithm>\r
            <!--Optional:-->\r
            <urn4:digestAlgorithm>?</urn4:digestAlgorithm>\r
            <!--Optional:-->\r
            <urn4:deferredResponseEndpoint>?</urn4:deferredResponseEndpoint>\r
         </urn:assertion>\r
         <!--Optional:-->\r
         <urn:NhinTargetCommunities>\r
            <!--1 or more repetitions:-->\r
            <urn4:nhinTargetCommunity>\r
               <urn4:homeCommunity>\r
                  <!--Optional:-->\r
                  <urn4:description>?</urn4:description>\r
                  <urn4:homeCommunityId>?</urn4:homeCommunityId>\r
                  <!--Optional:-->\r
                  <urn4:name>?</urn4:name>\r
               </urn4:homeCommunity>\r
               <!--Optional:-->\r
               <urn4:list>?</urn4:list>\r
               <!--Optional:-->\r
               <urn4:region>?</urn4:region>\r
            </urn4:nhinTargetCommunity>\r
            <!--Optional:-->\r
            <urn4:useSpecVersion>?</urn4:useSpecVersion>\r
            <!--Optional:-->\r
            <urn4:exchangeName>?</urn4:exchangeName>\r
         </urn:NhinTargetCommunities>\r
      </urn:RespondingGateway_CrossGatewayQueryResponse>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:dq:entitydeferredresponse:RespondingGateway_CrossGatewayQueryDeferredEntity"/></con:call></con:operation></con:interface><con:testSuite name="g1" id="7613ded3-2501-40f5-98f6-6da03aac789f">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Req" searchProperties="true" id="7e685188-254a-4e21-9f18-98674d0f4a82">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="4ef377b4-8c2b-4d15-8672-8a5371597627">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="276cf17b-8729-4019-9d7a-5851f563eca5">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Req" type="request" id="5494696d-5ac3-4ba0-bac8-7a1fbae89475">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncRequest_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncRequest</con:operation>
          <con:request incomingWss="" name="Doc Submission Deferred Req" outgoingWss="" useWsAddressing="true" wssPasswordType="" id="c8f6631f-05f4-462a-9b12-eedfb1f271b5">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Submission Deferred Req">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->
  
               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList> 

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="15ace7a5-5670-40d8-8510-d4538b8a7b65"/>
            <con:assertion type="SOAP Fault Assertion" id="1ef6d900-6497-458a-b0bc-8f0aa08b9b34"/>
            <con:assertion name="Match content of [@status]" type="XPath Match" id="71915c9a-f93f-4127-8c88-4cc545a26ba3">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
							//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:RequestAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="8d0c9f7f-1f9e-48af-b8a9-e27dd92fe5e7">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request:ProvideAndRegisterDocumentSet-bAsyncRequest_RequestMessage" generateMessageId="true" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="4a9416ab-9562-442e-8347-4eca9c7fd58f">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="9af1f656-9833-42d1-8b82-b79f779c22ae">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="04127354-8070-4975-a7c8-47de075225ec">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId = "'+ context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId = "'+ context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for Human Requestor details
if (!parsedXmlMessage.ActiveParticipant[0].UserID.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

// ParticipantObjectIdentification Patient details
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
// check for  ParticipantObjectIdentification Submission Set details
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	assert(!node.@ParticipantObjectID.isEmpty())
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	
		assert(!node.@ParticipantObjectIDTypeCode.isEmpty())		 
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="cf0d9080-c48d-404b-afac-fd45bda0c349">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
    	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="b9b6a873-f986-4df7-b2c4-755f258b7642">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:44:50Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:34:50</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:34:50Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Resp" searchProperties="true" id="28f122a1-cdca-487c-ba68-f9d985f97826">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="c5213d53-567c-48eb-b261-10b3d7672af2">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="614135bb-df8b-47e1-ae60-f24c76257251">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Resp" type="request" id="19f9d64a-97d6-46c8-b150-4bd18f70679a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncResponse_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncResponse</con:operation>
          <con:request name="Doc Submission Deferred Resp" id="cb0d60b2-8881-4b4d-a1a4-d985c5529752">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
   <soap:Header/>
   <soap:Body>
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
         <urn:assertion>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
               <urn1:prefix>Ms.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>?addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                     <!--Zero or more repetitions:-->
                     <urn1:translation/>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Karl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>?</urn1:prefix>
                  <urn1:suffix>?</urn1:suffix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <!--Optional:-->
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy notes</urn1:originalText>
               <!--Zero or more repetitions:-->
               <urn1:translation/>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <!--Optional:-->
                     <urn1:version>2.0</urn1:version>
                     <!--Optional:-->
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <!--Optional:-->
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <!--Optional:-->
                     <urn1:conditions>
                        <!--Optional:-->
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <!--Optional:-->
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <!--Zero or more repetitions:-->
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <!--Zero or more repetitions:-->
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:721645965035</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:146207300753</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:783710993742</urn1:signatureValue>
            </urn1:samlSignature>
            <!--Optional:-->
            <urn1:samlIssuer>
               <!--Optional:-->
               <urn1:issuer>?</urn1:issuer>
               <!--Optional:-->
               <urn1:issuerFormat>?</urn1:issuerFormat>
            </urn1:samlIssuer>
            <!--Optional:-->
            <urn1:messageId>?</urn1:messageId>
            <!--1 or more repetitions:-->
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn:RegistryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" requestId="?"><!--Optional:-->
            <urn2:ResponseSlotList>
               <!--Zero or more repetitions:-->
               <urn3:Slot name="?" slotType="?">
                  <urn3:ValueList>
                     <urn3:Value>?</urn3:Value>
                  </urn3:ValueList>
               </urn3:Slot>
            </urn2:ResponseSlotList>
            <!--Optional:-->
            <urn2:RegistryErrorList highestSeverity="?">
               <!--1 or more repetitions:-->
               <urn2:RegistryError codeContext="?" errorCode="?" severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" location="?">?</urn2:RegistryError>
            </urn2:RegistryErrorList>
         </urn:RegistryResponse>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="733c67ce-afa1-465b-bc76-2d65a40871f0"/>
            <con:assertion type="Schema Compliance" id="7a96247b-75a0-47c7-9532-f1ffb1fb480f">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="3d90a100-eb37-4727-8c4d-8d833bbcd9bb"/>
            <con:assertion type="XPath Match" id="ecb84da2-8eec-4747-b187-c8ea5aed733f">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
					//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:ResponseAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="6c0edf62-8e5d-4155-907d-449730706d6a">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="2518c97d-6055-4a7a-a2bf-4e7af8674da0">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="a9b3c082-3028-493a-be79-0e679efaab27">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
		
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
   }
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="5cd38cca-5d86-4350-94d1-1984bb1e520d">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g1" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
  }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="337e8f00-96f8-44b1-a224-dc2a472536d5">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:45:02Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:35:02</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:35:02Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission" searchProperties="true" id="bfb21e63-366d-4679-9fe6-33293702838f">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="cd5e587a-19fa-4a60-9020-521134fd99cd">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="6861dd27-a539-4c68-8406-ced43cd89d0c">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission" type="request" id="374acf1c-f106-46a8-81f6-0f256a4fafaa">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDR_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-b</con:operation>
          <con:request incomingWss="" name="Doc Submission" outgoingWss="" wssPasswordType="" id="0c9d535e-35d6-4925-803b-284f87545674">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Submission">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->
  
               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList> 

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="f5428481-8cd4-4efa-b4f8-c71b4e345d5d"/>
            <con:assertion type="SOAP Fault Assertion" id="d868be22-a3ce-44ed-ac26-ed680056a484"/>
            <con:assertion type="XPath Match" id="2756a1d2-f350-4a46-a913-69584ea391fa">
              <con:configuration>
                <path>declare namespace ns11='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
							//ns11:RegistryResponse[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="94d66bf1-af2c-41fe-9078-fd785cada557">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{urn:gov:hhs:fha:nhinc:nhincentityxdr}ProvideAndRegisterDocumentSet-b" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="7108043f-941a-4652-930b-52a81f5106b1">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="49fc03f8-cb24-4bd5-bb32-195ac38c4c29">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="47092b7a-61c3-4409-94fd-6bef9f5cb0a7">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="6a15642f-06f2-4d1f-a6e2-e48c777ba4d3">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="59037cae-7a39-4a00-803c-9dbe7cc67a74">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:45:15Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:35:15</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:35:15Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
   <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Req" searchProperties="true" id="722d7a11-28b2-47ff-93a2-1393fc42abb3">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="9c898c67-4fd9-410c-a77d-103a33311ee2">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="7487e794-3bc6-44ec-8c40-9c009bec9c72">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Req" type="request" id="27035536-f9f9-4c4f-8a1a-f709e11aed17">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncReqBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncReq</con:operation>
          <con:request name="Patient Discovery Deferred Req" useWsAddressing="true" id="97fe96a6-8f49-400b-81c4-78449e2f9097">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery Deferred Req">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#RemoteHCID}" extension="-abd3453dcd24wkkks545"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#LocalPatientID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                   <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <!--Optional:-->
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="fa09bb13-8277-4b90-8a04-ff52b0b80d85"/>
            <con:assertion type="SOAP Fault Assertion" id="6499cee3-d282-47ca-ae32-553141e35764"/>
            <con:assertion name="Verify Receiver" type="XPath Match" id="0d5e83ec-7196-4c5d-ae33-75d88fd8de05">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:receiver[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>1.1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Sender" type="XPath Match" id="d36ceada-34cf-49f6-a800-35ac35acfbb0">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:sender[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>2.2</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Message" type="XPath Match" id="b5440bc2-dab2-4b4b-803d-c23d4cf8bc4f">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:acknowledgement[1]/ns3:acknowledgementDetail[1]/ns3:text[1]/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify RelatesTo" type="XPath Match" id="6ca9ca8b-cc67-402a-b31d-0b1d62eb1a90">
              <con:configuration>
                <path>declare namespace ns1='http://www.w3.org/2005/08/addressing';
							//ns1:RelatesTo[1]/text()</path>
                <content>uuid:6666666666.66666.666.66</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="e37e7c1b-bb35-4110-ac43-09d2a0611fac">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq:ProcessPatientDiscoveryAsyncReqAsyncRequest" addDefaultTo="true" messageID="uuid:6666666666.66666.666.66" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="89ad619c-1f40-492b-bf1b-fa3b685d9079">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="db7e5156-753b-49f0-97ed-ab389757b9d5">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="44f69cd0-58a0-4c6d-bda4-3dc48040f129">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="7c4c9ea0-4692-4035-9d81-6abaedfc579d">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }

     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty()){
	// Patient details will not be populated for PD Deferred 
 }
 
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="fa39a666-aa97-4576-9c72-a89508de895b">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncReq</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:45:27Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:35:27</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:35:27Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Resp" searchProperties="true" id="1bb2218d-381d-4724-8ba6-a019f2532778">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="19ec0cae-8bd8-4f38-94da-647b6036fb4b">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="0358723f-37b8-4911-81a1-f6b9f2d6ee6d">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Resp" type="request" id="8f330759-6996-44bf-9d4c-da74d3459571">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncRespBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncResp</con:operation>
          <con:request name="Patient Discovery Deferred Resp" id="a44ad968-d79b-452f-8c86-962270805bd1">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header xmlns:add="SoapUI_Test/ValidationSuite/2-EndToEndSelfTest-soapui-project.xml">
      <add:Action>urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp:ProcessPatientDiscoveryAsyncRespAsyncRequest</add:Action>
      <add:MessageID>uuid:12bcfc1e-f422-4d1d-af99-ff83d050313e</add:MessageID>
      <add:RelatesTo>${#Project#MessageID}</add:RelatesTo>
      <add:To>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</add:To>
   </soap:Header>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery Deferred Resp">
      <urn:RespondingGateway_PRPA_IN201306UV02Request>
         <urn:PRPA_IN201306UV02 ITSVersion="XML_1.0">
            <urn:id root="2.2" extension="-5a3e95b1:11d1fa33d45:-8e45"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <!--1 or more repetitions:-->
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="1.1"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="1.1"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:code codeSystem="2.16.840.1.113883.1.6" code="PRPA_TE201306UV"/>
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="2.2"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:subject typeCode="SUBJ">
                  <urn:registrationEvent classCode="REG" moodCode="EVN">
                     <urn:id nullFlavor="NA"/>
                     <urn:statusCode code="active"/>
                     <urn:subject1 typeCode="SBJ">
                        <urn:patient classCode="PAT">
                           <urn:id extension="D123402" root="2.2"/>
                           <urn:statusCode code="SD"/>
                           <urn:patientPerson>
                              <urn:name>
                                 <urn:family partType="FAM">Younger</urn:family>
                                 <urn:given partType="GIV">Gallow</urn:given>
                              </urn:name>
                              <urn:administrativeGenderCode code="M"/>
                              <urn:birthTime value="19630804"/>
                              <urn:addr>
                                 <urn:city>LEESBURG</urn:city>
                                 <urn:state>VA</urn:state>
                                 <urn:postalCode>20176</urn:postalCode>
                              </urn:addr>
                           </urn:patientPerson>
                           <urn:providerOrganization determinerCode="" classCode="">
                              <urn:id root="2.2"/>
                              <urn:contactParty xsi:nil="true" classCode="CON" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </urn:providerOrganization>
                        </urn:patient>
                     </urn:subject1>
                     <urn:custodian typeCode="">
                        <urn:assignedEntity classCode="">
                           <urn:id root="2.2"/>
                        </urn:assignedEntity>
                     </urn:custodian>
                  </urn:registrationEvent>
               </urn:subject>
               <urn:queryAck>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:queryResponseCode code="OK"/>
                  <urn:resultTotalQuantity value="1"/>
                  <urn:resultCurrentQuantity value="1"/>
                  <urn:resultRemainingQuantity value="0"/>
               </urn:queryAck>
               <urn:queryByParameter>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="M"/>
                       <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="19630804"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectId>
                        <urn:value extension="D123401" root="1.1"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">Younger</urn:family>
                           <urn:given partType="GIV">Gallow</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201306UV02>
         <urn:assertion>          
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>Test HCID1</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>HCID1</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201306UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="9a940775-83f4-4a2a-99d4-5f79b377e7d2"/>
            <con:assertion type="SOAP Fault Assertion" id="8d48c1f3-328d-41ea-b9f0-493fa0cb4971"/>
            <con:assertion name="Match content of [typeCode/@code]" type="XPath Match" id="1d11f6e1-64e3-4c55-af68-0a17eee02fd0">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:typeCode[1]/@code</path>
                <content>CA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Match content of [acknowledgementDetail/text/text()]" type="XPath Match" id="503e843c-f718-4048-a5e1-2a12f9599e8b">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:acknowledgementDetail[1]/ns2:text/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="be9b1267-e3e4-4d6b-a908-d3224581b9ad">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="e193d987-8a60-4973-b75f-589a15ea8f41">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="e87c68a1-d465-4a76-8ca4-b06010e140bd">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="405f8441-1c18-450f-b668-b5b3de1c7816">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Outbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
//check for Query Parameter ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)-ACK" id="8cdd6bc5-8555-4981-ac1e-ac9131e2fc20">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
//check for Query Parameters ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="e280e1a7-5aee-4449-bc02-e5f6d4b70cd4">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncResp</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:48:13Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:38:13</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:38:13Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery" searchProperties="true" id="c7e1d2d1-838b-4836-afa3-1c655cf5c329">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="977bf23d-5f39-44f0-9749-b4d44747e5bb">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="20afd961-b3be-45d8-b2f6-959f3999a6ca">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="clear correlations table" type="groovy" id="6ddef972-5912-4e28-bfa7-7ef65ed4fba7">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
			sql.execute('delete from ' + context.findProperty('PatientCorrelationTable'))
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery" type="request" id="0984b7c0-3ead-43ef-b4cc-9bd425996cbf">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:request name="Patient Discovery" id="cdb4ec39-1909-46bf-bb68-99edaab048f8">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscovery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Patient Discovery">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#LocalHCID}" extension="${#TestCase#queryId.@extension}"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#SubjectID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>${#Project#City}</urn1:city>
               <urn1:country>${#Project#Country}</urn1:country>
               <urn1:state>${#Project#State}</urn1:state>
               <urn1:streetAddress>${#Project#StreetAddress}</urn1:streetAddress>
               <urn1:zipCode>${#Project#ZipCode}</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>${#Project#DOB}</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>${#Project#FamilyName}</urn1:familyName>
               <urn1:givenName>${#Project#GivenName}</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>${#Project#SSN}</urn1:SSN>
            <urn1:uniquePatientId>${#Project#UniquePatientId}</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTH</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="e9c992ea-4b6e-43cb-a4c0-f38f4072b023"/>
            <con:assertion disabled="true" type="Schema Compliance" id="136851b4-52ec-4ffa-ae7a-3e326c3a0dd6">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="0f0f9631-eade-498f-87ad-79ff1d078156"/>
            <con:assertion name="Check for existance of [ns3:controlActProcess]" type="XPath Match" id="f263b41b-3449-4dc2-bfc7-921946b3a222">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
				exists( //ns3:PRPA_IN201306UV02/ns3:controlActProcess)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Given Name XPath Match" type="XPath Match" id="06688a24-12ad-4b3c-8171-79d56b6de66e">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:given[1]</path>
                <content>${#Project#GivenName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Family Name XPath Match" type="XPath Match" id="a3fc1216-89e5-48d1-bb19-78eb64e01f8b">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:family[1]</path>
                <content>${#Project#FamilyName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="count correlations" type="groovy" id="cd05f475-6cc3-400e-9e8f-8be370be2c8e">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('PatientCorrelationTable'))[0]
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="8475c20f-e8ba-41a2-b67f-05a9354e8941">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="b081fc33-6e40-4f46-a408-2cc98a6ca5fb">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="f4f395c3-8469-4e9f-9652-122409318501">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	if(!node.@UserName.isEmpty())
     	//assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="1d1168ba-8f98-45ab-a3d5-cf64ebb690fe">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	    	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Responder.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
	}
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="ec5a1d89-0eaa-4e38-bf76-5210f50d5dd5">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:45:59Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>1111^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0idXJuOmdvdjpoaHM6ZmhhOm5oaW5jOmNvbW1vbjpwYXRpZW50Y29ycmVsYXRpb25mYWNhZGUiIHhtbG5zOm5zNT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIiB4bWxuczpuczU9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246cGF0aWVudGNvcnJlbGF0aW9uZmFjYWRlIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>ICA8cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+DQogIDxzdGF0dXNDb2RlIGNvZGU9Im5ldyIvPg0KICA8cmVzcG9uc2VNb2RhbGl0eUNvZGUgY29kZT0iUiIvPg0KICA8cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPg0KICA8cGFyYW1ldGVyTGlzdD4NCiAgICA8bGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPg0KICAgICAgPHZhbHVlIGNvZGU9Ik0iLz4NCiAgICAgIDxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiPkxpdmluZ1N1YmplY3QuYWRtaW5pc3RyYXRpdmVHZW5kZXI8L3NlbWFudGljc1RleHQ+DQogICAgPC9saXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+DQogICAgPGxpdmluZ1N1YmplY3RCaXJ0aFRpbWU+DQogICAgICA8dmFsdWUgdmFsdWU9IjE5NjMwODA0Ii8+DQogICAgICA8c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD4NCiAgICA8L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+DQogICAgPGxpdmluZ1N1YmplY3RJZD4NCiAgICAgIDx2YWx1ZSByb290PSIxLjEiIGV4dGVuc2lvbj0iMTExMSIvPg0KICAgICAgPHNlbWFudGljc1RleHQgcmVwcmVzZW50YXRpb249IlRYVCIvPg0KICAgIDwvbGl2aW5nU3ViamVjdElkPg0KICAgIDxsaXZpbmdTdWJqZWN0TmFtZT4NCiAgICAgIDx2YWx1ZT4NCiAgICAgICAgPGZhbWlseSBwYXJ0VHlwZT0iRkFNIj5Zb3VuZ2VyPC9mYW1pbHk+DQogICAgICAgIDxnaXZlbiBwYXJ0VHlwZT0iR0lWIj5HYWxsb3c8L2dpdmVuPg0KICAgICAgPC92YWx1ZT4NCiAgICAgIDxzZW1hbnRpY3NUZXh0IHJlcHJlc2VudGF0aW9uPSJUWFQiPkxpdmluZ1N1YmplY3QubmFtZTwvc2VtYW50aWNzVGV4dD4NCiAgICA8L2xpdmluZ1N1YmplY3ROYW1lPg0KICA8L3BhcmFtZXRlckxpc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:35:59</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:35:59Z</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Query" searchProperties="true" id="8271858b-0d6d-4d2f-81e5-d8591b2274ae">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="5688daf7-0da4-4351-9d4e-f8c40cf0675c">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="3df5357d-7e4e-4ddc-8a3b-f77a4820502a">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="update config" type="groovy" id="9c194669-54ec-49d2-a5a9-eda6665ce6c5">
        <con:settings/>
        <con:config>
          <script>nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'), "gateway.properties", "documentQueryQuerySelf", "false", log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear Correlation Table &amp; Add Correlation" type="groovy" id="84026ec9-cd01-487f-9f50-64aafdf9e3db">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		def table = context.findProperty('PatientCorrelationTable')

		sql.execute('delete from ' + table)

		def localAA = context.findProperty( "LocalAA" )
		def localPatientID = context.findProperty("LocalPatientID")
		def remoteAA = context.findProperty( "RemoteAA" )
		def remotePatientID = context.findProperty("RemotePatientID")
		def insertSql = "insert into " + table + " (correlationId, PatientAssigningAuthorityId, PatientId, CorrelatedPatientAssignAuthId, CorrelatedPatientId) " + 
		"values (1, ?, ?, ?, ?)"
		sql.executeUpdate(insertSql, [localAA, localPatientID, remoteAA, remotePatientID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear AA Mapping Table &amp; Add Mapping" type="groovy" id="b9969616-d159-424b-82c3-3f19c6b2f77a">
        <con:settings/>
        <con:config>
          <script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, ?, ?)"
		sql.executeUpdate(insertSql, [remoteAA, remoteHCID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Query" type="request" id="9a543f53-198a-4105-824b-c64777602491">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocQueryBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayQuery</con:operation>
          <con:request name="Document Query" id="b27cc914-3135-4535-965f-6ddaf098c21a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocQuery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Query">
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="LeafClass" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'${#Project#DQPatientID}^^^&amp;${#Project#LocalAA}&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
         <urn2:Slot name="$XDSDocumentEntryClassCode">
            <urn2:ValueList>
                    <urn2:Value>34133-9</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryClassCodeScheme">
                  <urn2:ValueList>
                     <urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:messageId>${#Project#MessageID}</urn3:messageId>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>AddrCity</urn3:city>
               <urn3:country>AddrCountry</urn3:country>
               <urn3:state>AddrState</urn3:state>
               <urn3:streetAddress>AddrStreet</urn3:streetAddress>
               <urn3:zipCode>AddrZip</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>06/04/1959 05:21:00</urn3:dateOfBirth>
            <urn3:explanationNonClaimantSignature>Electronic</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>false</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>false</urn3:haveSignature>
            <urn3:haveWitnessSignature>false</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>${#Project#LocalHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#LocalHCDescription}</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sandy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
               <urn3:fullName>Sandy S. Smith</urn3:fullName>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5436</urn3:extension>
               <urn3:localNumber>253-6849</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Addr2City</urn3:city>
               <urn3:country>Addr2Country</urn3:country>
               <urn3:state>Addr2State</urn3:state>
               <urn3:streetAddress>Addr2Street</urn3:streetAddress>
               <urn3:zipCode>Addr2Zip</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sammy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>s</urn3:secondNameOrInitials>
               <urn3:fullName>Sammy S. Smith</urn3:fullName>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5424</urn3:extension>
               <urn3:localNumber>542-6823</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>253-98-7546</urn3:SSN>
            <urn3:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>addrCode</urn3:code>
                  <urn3:codeSystem>addrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>addrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>addrCode</urn3:displayName>
                  <urn3:originalText>addrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Burnell</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>FL</urn3:state>
               <urn3:streetAddress>825 North</urn3:streetAddress>
               <urn3:zipCode>32184</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Scott</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S.</urn3:secondNameOrInitials>
               <urn3:fullName>Scott S. Smith</urn3:fullName>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>8432</urn3:extension>
               <urn3:localNumber>985-2239</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>Skagerberg</urn3:familyName>
                  <urn3:givenName>Karl</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>nameCode</urn3:code>
                     <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                     <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                     <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                     <urn3:displayName>nameCode</urn3:displayName>
                     <urn3:originalText>nameCode</urn3:originalText>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
                  <urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
               </urn3:personName>
               <urn3:userName>kskagerberg</urn3:userName>
               <urn3:org>
                  <urn3:description>${#Project#LocalHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#LocalHCDescription}</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>307969004</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Public Health</urn3:displayName>
                  <urn3:originalText>Public Health</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PUBLICHEALTH</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:samlAuthnStatement>
               <urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
               <urn3:sessionIndex>987</urn3:sessionIndex>
               <urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
               <urn3:subjectLocalityAddress>1.1.1.1</urn3:subjectLocalityAddress>
               <urn3:subjectLocalityDNSName>connectopensource.org</urn3:subjectLocalityDNSName>
            </urn3:samlAuthnStatement>
         <urn3:samlAuthzDecisionStatement>
               <urn3:decision>Permit</urn3:decision>
               <urn3:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
               <urn3:action>TestSaml</urn3:action>
               <urn3:evidence>
                  <urn3:assertion>
                     <urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
                     <urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
                     <urn3:version>2.0</urn3:version>
                     <urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
                     <urn3:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn3:issuer>
                     <urn3:conditions>
                        <urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
                        <urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
                     </urn3:conditions>
                     <urn3:accessConsentPolicy>urn:oid:1.2.3.4</urn3:accessConsentPolicy>
                     <urn3:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn3:instanceAccessConsentPolicy>
                  </urn3:assertion>
               </urn3:evidence>
            </urn3:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn3:nhinTargetCommunity>
               <urn3:homeCommunity>
                  <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
               </urn3:homeCommunity>
            </urn3:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="6fbcad09-48ed-49ce-bd84-d71b1ccd924e"/>
            <con:assertion type="Schema Compliance" id="693a20b9-1f4b-48b1-9a02-3e613f90aade">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="100346c9-e0be-466a-9bd6-37fb9b81e49d"/>
            <con:assertion name="DocID Match" type="GroovyScriptAssertion" id="0a54b025-bdd7-4d1c-9985-f072cc0bc343">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
				def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
				holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
				holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

				def documentID = context.findProperty('DQDocID')
				def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
				assert (documentID == msgDocID)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="f4ee5494-57ac-4194-a820-2c7901828a18">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="8aa56f04-4f6c-4395-8925-6018498b8eea">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="03a39c91-ed7e-441f-a1d3-7e8a8ff9db83">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	    	if(!node.@UserName.isEmpty()){	    
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	    	}
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	    	     
     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	 }
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->		
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )   
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
   	    	
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )    	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )	     
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

	 	byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   		def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
   		assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		  		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="8b2816e6-ce46-4eea-90e6-c5b19e9cc477">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())    

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )      
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
		assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
     	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

		if(!node.ParticipantObjectQuery.text().isEmpty()){    
    			byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))  
   			assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		}   		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def localHCID = testRunner.testCase.testSuite.project.getPropertyValue("LocalHCID")
	 		def localHCIDWithPrefix 
	 		if(localHCID.startsWith("urn:oid:")){
	 			localHCIDWithPrefix= localHCID
	 		}
	 		else{
	 			localHCIDWithPrefix = "urn:oid:"+localHCID
	 		}
  			assert decodedData2 == localHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="dec194ea-437e-42eb-8824-c8d1bf1e581a">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/QueryDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>&lt;--RESPONDER--></con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2016-05-12T17:46:11Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FullPatientID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D123401^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">QueryEncoding</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">UTF-8</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:ihe:iti:xca:2010:homeCommunityId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ResponderActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ResponderActiveParticipant_Dest.@UserID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">05/12/2016 17:36:11</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2016-05-12T17:36:11Z</con:value>
        </con:property>
        <con:property>
          <con:name>auditLogStatus</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AuditOff</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Retrieve" searchProperties="true" id="aaab3ed0-71f1-4f72-83f0-cc840ec185cd">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="51fea7c9-370f-4d28-b362-e79feb7b5d47">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="a3366faa-78f2-4334-8fa9-b796f3dc9ed7">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Retrieve" type="request" id="0b684917-158e-4591-ab73-952037ca7338">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocRetrieveBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayRetrieve</con:operation>
          <con:request incomingWss="" name="Document Retrieve" outgoingWss="" wssPasswordType="" id="983c7a52-8720-4b48-b7be-d04d68eec9f1">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocRetrieve}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:ihe:iti:xds-b:2007" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Document Retrieve">
      <urn:RespondingGateway_CrossGatewayRetrieveRequest>
         <urn1:RetrieveDocumentSetRequest>
            <urn1:DocumentRequest>
               <urn1:HomeCommunityId>${#Project#RemoteHCID}</urn1:HomeCommunityId>
               <urn1:RepositoryUniqueId>${#Project#DRRepoID}</urn1:RepositoryUniqueId>
               <urn1:DocumentUniqueId>${#Project#DRDocID}</urn1:DocumentUniqueId>
            </urn1:DocumentRequest>
         </urn1:RetrieveDocumentSetRequest>
         <urn:assertion>
            <urn2:messageId>${#Project#MessageID}</urn2:messageId>
            <urn2:address>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>AddrCity</urn2:city>
               <urn2:country>AddrCountry</urn2:country>
               <urn2:state>AddrState</urn2:state>
               <urn2:streetAddress>AddrStreet</urn2:streetAddress>
               <urn2:zipCode>AddrZip</urn2:zipCode>
            </urn2:address>
            <urn2:dateOfBirth>06/04/1959 05:21:00</urn2:dateOfBirth>
            <urn2:explanationNonClaimantSignature>Electronic</urn2:explanationNonClaimantSignature>
            <urn2:haveSecondWitnessSignature>false</urn2:haveSecondWitnessSignature>
            <urn2:haveSignature>false</urn2:haveSignature>
            <urn2:haveWitnessSignature>false</urn2:haveWitnessSignature>
            <urn2:homeCommunity>
               <urn2:description>${#Project#LocalHCDescription}</urn2:description>
               <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
               <urn2:name>${#Project#LocalHCDescription}</urn2:name>
            </urn2:homeCommunity>
            <urn2:personName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sandy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
               <urn2:fullName>Sandy S. Smith</urn2:fullName>
            </urn2:personName>
            <urn2:phoneNumber>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5436</urn2:extension>
               <urn2:localNumber>253-6849</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:phoneNumber>
            <urn2:secondWitnessAddress>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Addr2City</urn2:city>
               <urn2:country>Addr2Country</urn2:country>
               <urn2:state>Addr2State</urn2:state>
               <urn2:streetAddress>Addr2Street</urn2:streetAddress>
               <urn2:zipCode>Addr2Zip</urn2:zipCode>
            </urn2:secondWitnessAddress>
            <urn2:secondWitnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sammy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>s</urn2:secondNameOrInitials>
               <urn2:fullName>Sammy S. Smith</urn2:fullName>
            </urn2:secondWitnessName>
            <urn2:secondWitnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5424</urn2:extension>
               <urn2:localNumber>542-6823</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:secondWitnessPhone>
            <urn2:SSN>253-98-7546</urn2:SSN>
            <urn2:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn2:uniquePatientId>
            <urn2:witnessAddress>
               <urn2:addressType>
                  <urn2:code>addrCode</urn2:code>
                  <urn2:codeSystem>addrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>addrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>addrCode</urn2:displayName>
                  <urn2:originalText>addrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Burnell</urn2:city>
               <urn2:country>USA</urn2:country>
               <urn2:state>FL</urn2:state>
               <urn2:streetAddress>825 North</urn2:streetAddress>
               <urn2:zipCode>32184</urn2:zipCode>
            </urn2:witnessAddress>
            <urn2:witnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Scott</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S.</urn2:secondNameOrInitials>
               <urn2:fullName>Scott S. Smith</urn2:fullName>
            </urn2:witnessName>
            <urn2:witnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>8432</urn2:extension>
               <urn2:localNumber>985-2239</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:witnessPhone>
            <urn2:userInfo>
               <urn2:personName>
                  <urn2:familyName>Skagerberg</urn2:familyName>
                  <urn2:givenName>Karl</urn2:givenName>
                  <urn2:nameType>
                     <urn2:code>nameCode</urn2:code>
                     <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                     <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                     <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                     <urn2:displayName>nameCode</urn2:displayName>
                     <urn2:originalText>nameCode</urn2:originalText>
                  </urn2:nameType>
                  <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
                  <urn2:fullName>Kasrl S. Skagerberg</urn2:fullName>
               </urn2:personName>
               <urn2:userName>kskagerb</urn2:userName>
               <urn2:org>
                  <urn2:description>${#Project#LocalHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#LocalHCDescription}</urn2:name>
               </urn2:org>
               <urn2:roleCoded>
                  <urn2:code>307969004</urn2:code>
                  <urn2:codeSystem>2.16.840.1.113883.6.96</urn2:codeSystem>
                  <urn2:codeSystemName>SNOMED_CT</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>Public Health</urn2:displayName>
                  <urn2:originalText>Public Health</urn2:originalText>
               </urn2:roleCoded>
            </urn2:userInfo>
            <urn2:authorized>true</urn2:authorized>
            <urn2:purposeOfDisclosureCoded>
               <urn2:code>PUBLICHEALTH</urn2:code>
               <urn2:codeSystem>2.16.840.1.113883.3.18.7.1</urn2:codeSystem>
               <urn2:codeSystemName>nhin-purpose</urn2:codeSystemName>
               <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
               <urn2:displayName>Use or disclosure of Psychotherapy Notes</urn2:displayName>
               <urn2:originalText>Use or disclosure of Psychotherapy Notes</urn2:originalText>
            </urn2:purposeOfDisclosureCoded>
            <urn2:samlAuthnStatement>
               <urn2:authInstant>2009-04-16T13:15:39Z</urn2:authInstant>
               <urn2:sessionIndex>987</urn2:sessionIndex>
               <urn2:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn2:authContextClassRef>
               <urn2:subjectLocalityAddress>1.1.1.1</urn2:subjectLocalityAddress>
               <urn2:subjectLocalityDNSName>connectopensource.org</urn2:subjectLocalityDNSName>
            </urn2:samlAuthnStatement>
            <urn2:samlAuthzDecisionStatement>
               <urn2:decision>Permit</urn2:decision>
               <urn2:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn2:resource>
               <urn2:action>TestSaml</urn2:action>
               <urn2:evidence>
                  <urn2:assertion>
                     <urn2:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn2:id>
                     <urn2:issueInstant>2009-04-16T13:10:39.093Z</urn2:issueInstant>
                     <urn2:version>2.0</urn2:version>
                     <urn2:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn2:issuerFormat>
                     <urn2:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn2:issuer>
                     <urn2:conditions>
                        <urn2:notBefore>2009-04-16T13:10:39.093Z</urn2:notBefore>
                        <urn2:notOnOrAfter>2009-12-31T12:00:00.000Z</urn2:notOnOrAfter>
                     </urn2:conditions>
                     <urn2:accessConsentPolicy>urn:oid:1.2.3.4</urn2:accessConsentPolicy>
                     <urn2:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn2:instanceAccessConsentPolicy>
                  </urn2:assertion>
               </urn2:evidence>
            </urn2:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn2:nhinTargetCommunity>
               <urn2:homeCommunity>
                  <urn2:description>${#Project#RemoteHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#RemoteHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#RemoteHCDescription}</urn2:name>
               </urn2:homeCommunity>
            </urn2:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayRetrieveRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="8a234c0b-bcd4-4681-a043-a1f09f685a72"/>
            <con:assertion type="SOAP Fault Assertion" id="e0767e41-19f7-496b-919d-ec151958e802"/>
            <con:assertion type="Schema Compliance" disabled="true" id="fc4837ff-8b05-4832-9e1d-df637e5f299e">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc Repository ID" type="XPath Match" id="52ff871a-8cf6-46d2-8ed1-05b4de84ec3f">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:RepositoryUniqueId[1]</path>
                <content>${#Project#DRRepoID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc ID" type="XPath Match" id="94ba075f-1803-43b5-a5e8-43082b92669f">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:DocumentUniqueId[1]</path>
                <content>${#Project#DRDocID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Document Data" type="GroovyScriptAssertion" id="ed79985b-1f19-4da1-bec5-1d60c8c1c8b2">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
					def holder = groovyUtils.getXmlHolder( messageExchange.responseContent )
					holder.namespaces["ns"]="urn:ihe:iti:xds-b:2007"
					def docData = holder["//ns:RetrieveDocumentSetResponse[1]/ns:DocumentResponse[1]/ns:Document[1]"]
					log.info docData.toString()
					assert (docData.size() != 0)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitydocretrieve/EntityDocRetrievePortType/RespondingGateway_CrossGatewayRetrieveRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="cc3812c3-77b7-49ad-acd6-8d68091a7820">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="837f4e46-0ed2-4b1f-8da7-261fcad448be">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="ac245657-defc-4c72-8050-904a8579cc1a">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g1.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){
	     	//commented out until code updated to return correct value as per spec	     	
	     	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
     }	
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
         	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )	 		
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	    
      } 
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="b66960ac-e391-41f2-8607-ed42ccdd568d">
        <con:settings/>
        <con:config>
          <script><![CDATA[import java.util.regex.*
context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g1.@UserID" )
	     }
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}	
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
  			def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	  
	}
 }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="7d2b855f-ecbb-48e3-832b-a1b9d2497f78">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/RetrieveDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/2_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>CorrectedRemoteHCID</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:46:25Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-39</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Retrieve</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>500000000^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>ihe:RepositoryUniqueId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@value</con:name>
          <con:value>homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Report Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:36:25</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:36:25Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Distribution" searchProperties="true" id="5783cde4-97f8-4dfb-bdda-ea9d97aee5d1">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="5f570c7b-b6a2-4f34-af0a-198870b3b714">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Admin Distribution" type="request" id="b15beb8d-3fce-4309-a782-fcbeb3d20663">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdministrativeDistribution_Binding_Soap12_g1</con:interface>
          <con:operation>SendAlertMessage</con:operation>
          <con:request name="Admin Distribution" id="97dbaf7d-3013-4db8-aa8d-8daa0ec303be">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityAdminDist}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:emergency:EDXL:DE:1.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g1" testCase="Admin Distribution">
      <urn:RespondingGateway_SendAlertMessage>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253987546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>${#TestCase#UserId}</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>80584001</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Psychiatrist</urn1:displayName>
                  <urn1:originalText>Psychiatrist</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PSYCHOTHERAPY</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-09-01T13:00:00.000Z</urn1:authInstant>
               <urn1:sessionIndex>mySessionIndex</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>mySubjectLocalityAddress</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>mySubjectLocalityDns</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>myAuthzDecisionStatementResource</urn1:resource>
               <urn1:action>myAuthzDecisionStatementAction</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>AuthzDecisionStatementEvidenceAssertionId</urn1:id>
                     <urn1:issueInstant>2009-09-02T14:00:00.000Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuer>CN=Mr Saml User,OU=SU,O=Mr SAML Org,L=Chantilly,ST=VA,C=US</urn1:issuer>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>urn:oid:1.2.3.4</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:243113487404</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:159355901562</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:383675305350</urn1:signatureValue>
            </urn1:samlSignature>
            </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn2:EDXLDistribution>
            <urn2:distributionID>633990682441061250</urn2:distributionID>
            <urn2:senderID>actor@2.16.840.1.113883.3.166</urn2:senderID>
            <urn2:dateTimeSent>2010-08-14T12:18:13.512375-08:00</urn2:dateTimeSent>
            <urn2:distributionStatus>Actual</urn2:distributionStatus>
            <urn2:distributionType>Update</urn2:distributionType>
            <urn2:combinedConfidentiality>Public</urn2:combinedConfidentiality>
            <!--Optional:-->
            <urn2:language>?</urn2:language>
            <!--Zero or more repetitions:-->
            <urn2:senderRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:senderRole>
            <!--Zero or more repetitions:-->
            <urn2:recipientRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:recipientRole>
            <!--Zero or more repetitions:-->
            <urn2:keyword>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:keyword>
            <!--Zero or more repetitions:-->
            <urn2:distributionReference>?</urn2:distributionReference>
            <!--Zero or more repetitions:-->
            <urn2:explicitAddress>
               <urn2:explicitAddressScheme>modified_IHEIntendedRecipient</urn2:explicitAddressScheme>
               <!--1 or more repetitions:-->
               <urn2:explicitAddressValue>^^^^^^^^^2.16.840.1.113883.3.166|0000000001</urn2:explicitAddressValue>
            </urn2:explicitAddress>
            <!--Zero or more repetitions:-->
            <urn2:targetArea>
               <!--Zero or more repetitions:-->
               <urn2:circle>?</urn2:circle>
               <!--Zero or more repetitions:-->
               <urn2:polygon>?</urn2:polygon>
               <!--Zero or more repetitions:-->
               <urn2:country>?</urn2:country>
               <!--Zero or more repetitions:-->
               <urn2:subdivision>?</urn2:subdivision>
               <!--Zero or more repetitions:-->
               <urn2:locCodeUN>?</urn2:locCodeUN>
            </urn2:targetArea>
            <!--Zero or more repetitions:-->
            <urn2:contentObject>
               <!--Optional:-->
               <urn2:contentDescription>PH Alert Message</urn2:contentDescription>
               <!--Zero or more repetitions:-->
               <urn2:contentKeyword>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:contentKeyword>
               <!--Optional:-->
               <urn2:incidentID>TEST</urn2:incidentID>
               <!--Optional:-->
               <urn2:incidentDescription>This is a test message</urn2:incidentDescription>
               <!--Zero or more repetitions:-->
               <urn2:originatorRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:originatorRole>
               <!--Zero or more repetitions:-->
               <urn2:consumerRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:consumerRole>
               <!--Optional:-->
               <urn2:confidentiality>Public</urn2:confidentiality>
               <!--You have a CHOICE of the next 2 items at this level-->
		<urn2:nonXMLContent>
                  <urn2:mimeType>application/pdf</urn2:mimeType>
                  <!--Optional:-->
                  <urn2:size>19</urn2:size>
                  <!--Optional:-->
                  <urn2:digest>?</urn2:digest>
                  <!--Optional:-->
                  <urn2:uri>?</urn2:uri>
                  <!--Optional:-->
                  <urn2:contentData>LDLIHAPIISDALKDF902383K1182K4J49DFNF3KR0482HJ1029F393</urn2:contentData>
               </urn2:nonXMLContent>
               <!--You may enter ANY elements at this point-->
            </urn2:contentObject>
         </urn2:EDXLDistribution>
      </urn:RespondingGateway_SendAlertMessage>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="Delay" type="delay" id="f527e8d2-8c77-4917-8a30-68bf67386c84">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="c74eb94a-66f7-4571-ba28-11cebec043b2">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 4 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 1 and direction="Entity Inbound" and remoteHcid="1.1"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 2 and direction="Nhin Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 3 and direction="Nhin Inbound" and remoteHcid="1.1"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 4 and direction="Adapter Outbound" and remoteHcid="1.1"')[0]
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:36:38Z</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:46:38Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:36:38</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DDQ Result Request" searchProperties="true" id="e2056df8-1549-480f-b6d0-4bfbc1b9c05a">
      <con:description>Document Query Deferred Result Request</con:description><con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="a7ebdf40-b0db-45ac-b994-ffc8c4a43e25">
        <con:settings/>
        <con:config><script>log.info("clear-audit-logs")
context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Clear and add DeferredXCAResponseTable" id="b11b3f32-d20f-4c49-900c-0664df49b10d"><con:settings/><con:config><script>context.withSql(context.findProperty('DocRepositoryDB')) { sql -> 
	def table = context.findProperty('DeferredXCAResponseTable')
	def adHocQueryRequestId = context.findProperty( "AdHocQueryRequestId" )
	def deferredResponseEndpoint = context.findProperty("DeferredResponseEndpoint")

	sql.execute('delete from ' + table)

	def insertSql = "insert into " + table + " (AdHocQueryRequestId, DeferredResponseEndpoint) values (?, ?)"
	sql.executeUpdate(insertSql, [adHocQueryRequestId, deferredResponseEndpoint])
}</script></con:config></con:testStep>
      
      
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="507e5670-5b60-4087-9dd2-65a17337bcf4">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Query Deferred Results Request" type="request" id="09970714-0719-4469-beab-ffa5ed8d5d55">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocQueryDeferredResultBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayQueryDeferredEntity</con:operation>
          <con:request name="Document Query Deferred Results Request" id="b27cc914-3135-4535-965f-6ddaf098c21a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DDQReqResults}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon">
	<soap:Header/>
	<soap:Body>
		<urn:RespondingGateway_CrossGatewayQueryResponse>
			<urn1:AdhocQueryResponse status="?" requestId="urn:uuid:48463b77-6c7f-4203-bc07-abcbba578a8c">
				<urn2:RegistryObjectList>
					<urn2:ExtrinsicObject home="urn:oid:1.1" id="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" isOpaque="false" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1" status="Active">
						<urn2:Slot name="creationTime">
							<urn2:ValueList>
								<urn2:Value>20080627174924</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="hash">
							<urn2:ValueList>
								<urn2:Value>ac0eec55d17eaa9c24054f8a7ecc5d3caa45d9f0</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="urn:recipient:intendedRecipient">
							<urn2:ValueList>
								<urn2:Value>Scott Borst</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="languageCode">
							<urn2:ValueList>
								<urn2:Value>en-US</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="legalAuthenticator">
							<urn2:ValueList>
								<urn2:Value>legal</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="serviceStartTime">
							<urn2:ValueList>
								<urn2:Value>20070911040000</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="serviceStopTime">
							<urn2:ValueList>
								<urn2:Value>20080627040000</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="size">
							<urn2:ValueList>
								<urn2:Value>26934</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="sourcePatientId">
							<urn2:ValueList>
								<urn2:Value>D123402^^^&amp;1.1&amp;ISO</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="sourcePatientInfo">
							<urn2:ValueList>
								<urn2:Value>PID-3|pid1^^^domain</urn2:Value>
								<urn2:Value>PID-5|Schnur^Anna^^^</urn2:Value>
								<urn2:Value>PID-7|19560813</urn2:Value>
								<urn2:Value>PID-8|F</urn2:Value>
								<urn2:Value>PID-11|312 HILL ROAD^^HILLSBORO^MO^37660^US</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="URI">
							<urn2:ValueList>
								<urn2:Value>1.123402.11111</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="repositoryUniqueId">
							<urn2:ValueList>
								<urn2:Value>1</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Name>
							<urn2:LocalizedString value="Schnur CONNECT TESTGATEWAY Document 1"/>
						</urn2:Name>
						<urn2:Description>
							<urn2:LocalizedString value="Document 1 Schnur CONNECT TESTGATEWAY comments"/>
						</urn2:Description>
						<urn2:Classification classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:6e9f10bc-7b28-4418-adb9-47eba8368cfa" nodeRepresentation="">
							<urn2:Slot name="authorPerson">
								<urn2:ValueList>
									<urn2:Value>Axolotl Elysium</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorInstitution">
								<urn2:ValueList>
									<urn2:Value>Test Two Workgroup</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorRole">
								<urn2:ValueList>
									<urn2:Value>Primary Care Provider</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorSpecialty">
								<urn2:ValueList>
									<urn2:Value>General</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:db512054-02bf-4cf1-a93f-fea41cae7306" nodeRepresentation="34133-9">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="Summarization of Episode Note"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:782105e7-1009-410d-96f5-947100f2a892" nodeRepresentation="Confidential">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>Confidential</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="Confidential"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:4cb843df-62e8-40d8-9d34-5962e4341694" nodeRepresentation="CDAR2/IHE 1.0">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>formatCodeScheme_value</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="formatCodeDisplayName_value"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:21483517-b682-41f7-aacd-88c417ce414b" nodeRepresentation="UTF-8">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>UTF-8</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="UTF-8"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:bb096f4e-fda4-4ec2-b9df-604e0aaa06ab" nodeRepresentation="test">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>test</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="test"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" id="urn:uuid:8584f81a-bfeb-4f4f-b504-8b95c4c18da8" nodeRepresentation="test">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>test</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="test"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:ExternalIdentifier id="urn:uuid:d7f26d9b-0219-4f96-b2e3-5cebb4681443" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" registryObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" value="1.123401.55555">
							<urn2:Name>
								<urn2:LocalizedString value="XDSDocumentEntry.uniqueId"/>
							</urn2:Name>
						</urn2:ExternalIdentifier>
						<urn2:ExternalIdentifier id="urn:uuid:679a47ea-47fa-4139-9073-c413e39e8286" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" registryObject="urn:uuid:5526dafd-9ed5-4da8-bc2e-8772d6f0f8e2" value="D123401^^^&amp;2.2&amp;ISO">
							<urn2:Name>
								<urn2:LocalizedString value="XDSDocumentEntry.patientId"/>
							</urn2:Name>
						</urn2:ExternalIdentifier>
					</urn2:ExtrinsicObject>
					<urn2:ExtrinsicObject home="urn:oid:1.1" id="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" isOpaque="false" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1" status="Active">
						<urn2:Slot name="creationTime">
							<urn2:ValueList>
								<urn2:Value>20080627174924</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="hash">
							<urn2:ValueList>
								<urn2:Value>ac0eec55d17eaa9c24054f8a7ecc5d3caa45d9f0</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="urn:recipient:intendedRecipient">
							<urn2:ValueList>
								<urn2:Value>Scott Borst</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="languageCode">
							<urn2:ValueList>
								<urn2:Value>en-US</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="legalAuthenticator">
							<urn2:ValueList>
								<urn2:Value>legal</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="serviceStartTime">
							<urn2:ValueList>
								<urn2:Value>20070911040000</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="serviceStopTime">
							<urn2:ValueList>
								<urn2:Value>20080627040000</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="size">
							<urn2:ValueList>
								<urn2:Value>26934</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="sourcePatientId">
							<urn2:ValueList>
								<urn2:Value>D123402^^^&amp;1.1&amp;ISO</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="sourcePatientInfo">
							<urn2:ValueList>
								<urn2:Value>PID-3|pid1^^^domain</urn2:Value>
								<urn2:Value>PID-5|Schnur^Anna^^^</urn2:Value>
								<urn2:Value>PID-7|19560813</urn2:Value>
								<urn2:Value>PID-8|F</urn2:Value>
								<urn2:Value>PID-11|312 HILL ROAD^^HILLSBORO^MO^37660^US</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="URI">
							<urn2:ValueList>
								<urn2:Value>1.123402.11111</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Slot name="repositoryUniqueId">
							<urn2:ValueList>
								<urn2:Value>1</urn2:Value>
							</urn2:ValueList>
						</urn2:Slot>
						<urn2:Name>
							<urn2:LocalizedString value="Schnur CONNECT TESTGATEWAY Document 1"/>
						</urn2:Name>
						<urn2:Description>
							<urn2:LocalizedString value="Document 1 Schnur CONNECT TESTGATEWAY comments"/>
						</urn2:Description>
						<urn2:Classification classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:fb8df9f2-6481-4153-9d73-87ca66c8a452" nodeRepresentation="">
							<urn2:Slot name="authorPerson">
								<urn2:ValueList>
									<urn2:Value>Axolotl Elysium</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorInstitution">
								<urn2:ValueList>
									<urn2:Value>Test Two Workgroup</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorRole">
								<urn2:ValueList>
									<urn2:Value>Primary Care Provider</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Slot name="authorSpecialty">
								<urn2:ValueList>
									<urn2:Value>General</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:f8f471a6-c888-494d-a1b6-1369afb8fb33" nodeRepresentation="34133-9">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="Summarization of Episode Note"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:fe1fbfd4-3385-4c83-a303-a9b7cb8de8c6" nodeRepresentation="Confidential">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>Confidential</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="Confidential"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:2b565f62-f40d-4e4d-af73-beb1a772e5b1" nodeRepresentation="CDAR2/IHE 1.0">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>formatCodeScheme_value</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="formatCodeDisplayName_value"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:6cc0547e-39c0-4fda-9b69-b3496440bc32" nodeRepresentation="UTF-8">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>UTF-8</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="UTF-8"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:09633b2e-7930-4e3d-a3b7-caf4947f58e6" nodeRepresentation="test">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>test</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="test"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:Classification classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" id="urn:uuid:9fd9995d-ccfc-41da-8049-8ec6d4e6f0b5" nodeRepresentation="test">
							<urn2:Slot name="codingScheme">
								<urn2:ValueList>
									<urn2:Value>test</urn2:Value>
								</urn2:ValueList>
							</urn2:Slot>
							<urn2:Name>
								<urn2:LocalizedString value="test"/>
							</urn2:Name>
						</urn2:Classification>
						<urn2:ExternalIdentifier id="urn:uuid:b5a70638-2e5b-45e2-9491-3f45c0874ed2" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" registryObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" value="1.123401.66666">
							<urn2:Name>
								<urn2:LocalizedString value="XDSDocumentEntry.uniqueId"/>
							</urn2:Name>
						</urn2:ExternalIdentifier>
						<urn2:ExternalIdentifier id="urn:uuid:8cb5c29e-aa4c-42cc-a06b-53584e418eb3" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" registryObject="urn:uuid:1377798a-6dec-4e67-9dc4-e3423b5fe55c" value="D123401^^^&amp;2.2&amp;ISO">
							<urn2:Name>
								<urn2:LocalizedString value="XDSDocumentEntry.patientId"/>
							</urn2:Name>
						</urn2:ExternalIdentifier>
					</urn2:ExtrinsicObject>
				</urn2:RegistryObjectList>
			</urn1:AdhocQueryResponse>
			<urn:assertion>
				<urn3:messageId>${#Project#MessageID}</urn3:messageId>
				<urn3:homeCommunity xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
					<urn3:description>${#Project#LocalHCDescription}</urn3:description>
					<urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
					<urn3:name>${#Project#LocalHCDescription}</urn3:name>
				</urn3:homeCommunity>
				<urn3:userInfo xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
					<urn3:personName>
						<urn3:familyName>Skagerberg</urn3:familyName>
						<urn3:givenName>Karl</urn3:givenName>
						<urn3:nameType>
							<urn3:code>nameCode</urn3:code>
							<urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
							<urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
							<urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
							<urn3:displayName>nameCode</urn3:displayName>
							<urn3:originalText>nameCode</urn3:originalText>
						</urn3:nameType>
						<urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
						<urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
					</urn3:personName>
					<urn3:userName>UID=kskagerberg</urn3:userName>
					<urn3:org>
						<urn3:description>${#Project#LocalHCDescription}</urn3:description>
						<urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
						<urn3:name>${#Project#LocalHCDescription}</urn3:name>
					</urn3:org>
					<urn3:roleCoded>
						<urn3:code>307969004</urn3:code>
						<urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
						<urn3:displayName>Public Health</urn3:displayName>
						<urn3:originalText>Public Health</urn3:originalText>
					</urn3:roleCoded>
				</urn3:userInfo>
				<urn3:authorized xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">true</urn3:authorized>
				<urn3:purposeOfDisclosureCoded xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
					<urn3:code>PUBLICHEALTH</urn3:code>
					<urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
					<urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
					<urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
				</urn3:purposeOfDisclosureCoded>
				<urn3:samlAuthnStatement xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
					<urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
					<urn3:sessionIndex>987</urn3:sessionIndex>
					<urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
					<urn3:subjectLocalityAddress>1.1.1.1</urn3:subjectLocalityAddress>
					<urn3:subjectLocalityDNSName>connectopensource.org</urn3:subjectLocalityDNSName>
				</urn3:samlAuthnStatement>
				<urn3:samlAuthzDecisionStatement xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
					<urn3:decision>Permit</urn3:decision>
					<urn3:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
					<urn3:action>TestSaml</urn3:action>
					<urn3:evidence>
						<urn3:assertion>
							<urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
							<urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
							<urn3:version>2.0</urn3:version>
							<urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
							<urn3:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn3:issuer>
							<urn3:conditions>
								<urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
								<urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
							</urn3:conditions>
							<urn3:accessConsentPolicy>urn:oid:1.2.3.4</urn3:accessConsentPolicy>
							<urn3:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn3:instanceAccessConsentPolicy>
						</urn3:assertion>
					</urn3:evidence>
				</urn3:samlAuthzDecisionStatement>
			</urn:assertion>
			<urn:NhinTargetCommunities>
				<urn3:nhinTargetCommunity>
					<urn3:homeCommunity>
						<urn3:description>${#Project#RemoteHCDescription}</urn3:description>
						<urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
						<urn3:name>${#Project#RemoteHCDescription}</urn3:name>
					</urn3:homeCommunity>
				</urn3:nhinTargetCommunity>
			</urn:NhinTargetCommunities>
		</urn:RespondingGateway_CrossGatewayQueryResponse>
	</soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="6fbcad09-48ed-49ce-bd84-d71b1ccd924e"/>
            <con:assertion type="Schema Compliance" id="693a20b9-1f4b-48b1-9a02-3e613f90aade">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="100346c9-e0be-466a-9bd6-37fb9b81e49d"/>
            <con:assertion name="DocID Match" type="GroovyScriptAssertion" id="0a54b025-bdd7-4d1c-9985-f072cc0bc343" disabled="true">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
				def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
				holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
				holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

				def documentID = context.findProperty('DQDocID')
				def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
				assert (documentID == msgDocID)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="85a300b1-5c2e-4dbb-85f9-f9fe8ba7ff11">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="67aa3959-514d-4f2b-9d0f-9970f3e89923">
        <con:settings/>
        <con:config><script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'docquerydeferredresultsoption', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
     }
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'docquerydeferredresultsoption', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="8d5ad1ed-12ed-4676-8704-112212abf239">
        <con:settings/>
        <con:config><script><![CDATA[context.withSql('AuditRepoDB') {sql ->
log.info("auditing-outbound-22")
def sql22outbound = 'SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"'
log.info(sql22outbound)
def nhinAuditMessage_22_Outbound = sql.firstRow(sql22outbound)[0]

def sql22userid = 'SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"'
log.info(sql22userid)
def userId_Outbound= sql.firstRow(sql22userid)[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
    assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
    //assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
    assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
    assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
    assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
    assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
    assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
    assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
    parsedXmlMessage.ActiveParticipant[0].each{ node ->
            assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
            if(!node.@UserName.isEmpty()){
                assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
            }
        assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
         if(!node.RoleIDCode.isEmpty()){
            assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
            assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
            assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
         }
    }
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
    parsedXmlMessage.ActiveParticipant[1].each{ node ->
        assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
        assert(!node.@AlternativeUserID.isEmpty())
        assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
        assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
        assert(!node.@NetworkAccessPointTypeCode.isEmpty())
        def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
        assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
        assert(!node.@NetworkAccessPointID.isEmpty())
        def NetworkAccessPointID = node.@NetworkAccessPointID
        if (NetworkAccessPointTypeCode == 1) {

            assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )

        } else {

            def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
            def matcher = (NetworkAccessPointID =~ x)
            assert matcher.matches()

        }
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
        assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
        assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )
     }
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
    parsedXmlMessage.ActiveParticipant[2].each{ node ->
    log.info("ActiveParticipant_Dest_g1.@UserID" + "==" +node.@UserID)
         assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )
         if(!node.@UserName.isEmpty()){
            assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
         }
        assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
        assert(!node.@NetworkAccessPointTypeCode.isEmpty())
        def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
        assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
        assert(!node.@NetworkAccessPointID.isEmpty())
        def NetworkAccessPointID = node.@NetworkAccessPointID
        if (NetworkAccessPointTypeCode == 1) {

            assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )

        } else {

            def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
            def matcher = (NetworkAccessPointID =~ x)
            assert matcher.matches()

        }
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
        assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
        assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )
    }
}
parsedXmlMessage.AuditSourceIdentification.find{
        if(!it.@AuditEnterpriseSiteID.isEmpty()){
            assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
        }
        if(!it.@AuditSourceTypeCode.isEmpty()){
            assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
        }
        if(!it.@AuditSourceID.isEmpty()){
            assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )
        }
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
    parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
         assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
         assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
            assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )

          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
        assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
        assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
    }
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
    parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
         //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
         assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
         assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
        assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
        assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

        byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()
        def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
        assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))

        parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{
            def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
            assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
            assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
            def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
            def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
            def remoteHCIDWithPrefix
            if(remoteHCID.startsWith("urn:oid:")){
                remoteHCIDWithPrefix= remoteHCID
            }
            else{
                remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
            }
            assert decodedData2 == remoteHCIDWithPrefix
            assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )

        }
    }
  }
}]]></script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="75b2adae-f3cc-463e-99f8-7c00902f7917">
        <con:settings/>
        <con:config><script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
    assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
    //assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
    assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
    assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
    assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
    assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
    assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
    assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
    parsedXmlMessage.ActiveParticipant[0].each{ node ->
         assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
        assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
        assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
        assert(!node.@NetworkAccessPointTypeCode.isEmpty())
        def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
        assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
        assert(!node.@NetworkAccessPointID.isEmpty())
        def NetworkAccessPointID = node.@NetworkAccessPointID
        if (NetworkAccessPointTypeCode == 1) {

            assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )

        } else {

            def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
            def matcher = (NetworkAccessPointID =~ x)
            assert matcher.matches()

        }
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
        assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
        assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )
    }
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
    parsedXmlMessage.ActiveParticipant[1].each{ node ->
         assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g1.@UserID" )
         if(!node.@UserName.isEmpty()){
            assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
         }
         assert(!node.@AlternativeUserID.isEmpty())
        assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
        assert(!node.@NetworkAccessPointTypeCode.isEmpty())
        def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
        assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
        assert(!node.@NetworkAccessPointID.isEmpty())
        def NetworkAccessPointID = node.@NetworkAccessPointID
        if (NetworkAccessPointTypeCode == 1) {

            assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )

        } else {

            def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
            def matcher = (NetworkAccessPointID =~ x)
            assert matcher.matches()

        }
            assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
        assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
        assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )
    }
}
parsedXmlMessage.AuditSourceIdentification.find{
        if(!it.@AuditEnterpriseSiteID.isEmpty()){
            assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
        }
        if(!it.@AuditSourceTypeCode.isEmpty()){
            log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
            assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
        }
        if(!it.@AuditSourceID.isEmpty()){
            assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )
        }
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
    parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
         assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
         assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
         assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
            assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
            assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
            assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
    }
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
    parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
         //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
        assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
        assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
            assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
            assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
            assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

        if(!node.ParticipantObjectQuery.text().isEmpty()){
                byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()
            def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
            assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
        }
        parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{
            def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
            assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
            assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
            def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
            def localHCID = testRunner.testCase.testSuite.project.getPropertyValue("LocalHCID")
            def localHCIDWithPrefix
            if(localHCID.startsWith("urn:oid:")){
                localHCIDWithPrefix= localHCID
            }
            else{
                localHCIDWithPrefix = "urn:oid:"+localHCID
            }
            assert decodedData2 == localHCIDWithPrefix
            assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )

        }
    }
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'docquerydeferredresultsoption',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="f69775a3-9f5b-4e4a-b9a0-09fb7bb77f31">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG1ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DDQResultsRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        
        
        
        
        
        
        
        <con:property><con:name>&lt;!--Destination--></con:name><con:value/></con:property><con:property><con:name>&lt;!--Human</con:name><con:value>Requestor--></con:value></con:property><con:property><con:name>&lt;!--Source--></con:name><con:value/></con:property><con:property><con:name>&lt;--Document</con:name><con:value>--></con:value></con:property><con:property><con:name>&lt;--Patient--></con:name><con:value/></con:property><con:property><con:name>&lt;--RESPONDER--></con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ActiveParticipant.@AlternativeUserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        
        <con:property><con:name>ActiveParticipant.@UserID</con:name><con:value>CN=localhost</con:value></con:property><con:property><con:name>ActiveParticipant.@UserIsRequestor</con:name><con:value>true</con:value></con:property><con:property><con:name>ActiveParticipant.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@code</con:name><con:value>307969004</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name><con:value>SNOMED_CT</con:value></con:property><con:property><con:name>ActiveParticipant.RoleIDCode.@displayName</con:name><con:value>Human Requestor</con:value></con:property>
        
        
        
        <con:property><con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name><con:value>localhost</con:value></con:property>
        
        <con:property><con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@UserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        <con:property><con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name><con:value>false</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name><con:value>110152</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name><con:value>Destination</con:value></con:property><con:property><con:name>ActiveParticipant_Dest_g0.@UserID</con:name><con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/DocumentQueryDeferredResponse</con:value></con:property>
        
        
        
        
        <con:property><con:name>ActiveParticipant_Dest_g1.@UserID</con:name><con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/DocumentQueryDeferredResponse</con:value></con:property>
        
        <con:property><con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@AlternativeUserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name><con:value>192.168.1.2</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserID</con:name><con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value></con:property><con:property><con:name>ActiveParticipant_Source.@UserIsRequestor</con:name><con:value>true</con:value></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>ActiveParticipant_Source.@UserName</con:name><con:value>Karl Skagerberg</con:value></con:property><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name><con:value>110153</con:value></con:property><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name><con:value>Source</con:value></con:property><con:property><con:name>AdHocQueryRequestId</con:name><con:value>urn:uuid:48463b77-6c7f-4203-bc07-abcbba578a8c</con:value></con:property><con:property><con:name>auditLogStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        <con:property><con:name>AuditMessage.xmlns</con:name><con:value>http://nhinc.services.com/schema/auditmessage</con:value></con:property><con:property><con:name>AuditOff</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name><con:value>DoD</con:value></con:property>
        
        
        
        
        
        
        <con:property><con:name>AuditSourceIdentification.@AuditSourceID</con:name><con:value>urn:oid:1.1</con:value></con:property><con:property><con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name><con:value>1010</con:value></con:property><con:property><con:name>DeferredResponseEndpoint</con:name><con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/DocumentQueryDeferredResponse</con:value></con:property><con:property><con:name>DeferredXCAResponseTable</con:name><con:value>deferredxcaresponse</con:value></con:property><con:property><con:name>DocRepositoryDB</con:name><con:value>docrepository</con:value></con:property>
        
        
        
        
        <con:property><con:name>endDate</con:name><con:value>2016-05-12T17:46:11Z</con:value></con:property><con:property><con:name>EventIdentification.@EventActionCode</con:name><con:value>E</con:value></con:property><con:property><con:name>EventIdentification.@EventDateTime</con:name><con:value>2015-04-02T13:47:30.199Z</con:value></con:property><con:property><con:name>EventIdentification.@EventOutcomeIndicator</con:name><con:value>0</con:value></con:property><con:property><con:name>EventIdentification.EventID.@code</con:name><con:value>110112</con:value></con:property><con:property><con:name>EventIdentification.EventID.@codeSystemName</con:name><con:value>DCM</con:value></con:property><con:property><con:name>EventIdentification.EventID.@displayName</con:name><con:value>Query</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@code</con:name><con:value>ITI-38</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name><con:value>IHE Transactions</con:value></con:property><con:property><con:name>EventIdentification.EventTypeCode.@displayName</con:name><con:value>Cross Gateway Query</con:value></con:property><con:property><con:name>EventIdentification_Responder.EventID.@displayName</con:name><con:value>Export</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2016-06-11T00:00:00Z</con:value></con:property><con:property><con:name>FullPatientID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        
        <con:property><con:name>parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID</con:name><con:value>D123401</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name><con:value>D123402^^^&amp;1.1&amp;ISO</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name><con:value>1</con:value></con:property>
        
        
        
        
        <con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name><con:value>2</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name><con:value>RFC-3881</con:value></con:property>
        
        
        
        <con:property><con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name><con:value>Patient Number</con:value></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name><con:value>D123401</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name><con:value>2</con:value></con:property>
        
        <con:property><con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name><con:value>24</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name><con:value>QueryEncoding</con:value></con:property>
        
        
        
        
      <con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name><con:value>UTF-8</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name><con:value>urn:ihe:iti:xca:2010:homeCommunityId</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name><con:value>ITI-38</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name><con:value>IHE Transactions</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name><con:value>Cross Gateway Query</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name><con:value>1.1</con:value></con:property><con:property><con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponderActiveParticipant_Dest.@AlternativeUserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponderActiveParticipant_Dest.@UserID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sigDate</con:name><con:value>05/12/2016 17:36:11</con:value></con:property><con:property><con:name>startDate</con:name><con:value>2016-05-12T17:36:11Z</con:value></con:property><con:property><con:name>EventTypeDDQ</con:name><con:value>docquerydeferredresultsoption</con:value></con:property><con:property><con:name>&lt;!--</con:name><con:value>event identifiation --></con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:properties>
      <con:property>
        <con:name>Endpoint-DocRetrieve</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentRetrieve/3_0/EntityService/EntityDocRetrieve</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DSDeferredResp</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityAdminDist</con:name>
        <con:value>http://localhost:8080/Gateway/AdminDistribution/2_0/AdministrativeDistribution_Service</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityXDRRequest</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDREntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/2_0/EntityService/EntityDocSubmissionUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DocQuery</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentQuery/3_0/EntityService/EntityDocQueryUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscovery</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
      </con:property>
    <con:property><con:name>Endpoint-DDQReqResults</con:name><con:value>http://localhost:8080/Gateway/DocumentQuery/3_0/EntityService/EntityDeferredResultOptionResponse</con:value></con:property></con:properties>
    <con:setupScript/>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="g0" id="1273c8d5-ccef-40c7-81fe-7694df2894a5">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Req" searchProperties="true" id="94e4f365-297e-4c77-aba9-1de42c5decb5">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="557091a6-d63d-4ef5-901c-8d794f4188b7">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="5ba344c0-9a81-460c-9989-dd72f2173120">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Req" type="request" id="eff8f56f-58c6-4a3b-8e58-0a3e6ee0750b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncRequest_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncRequest</con:operation>
          <con:request incomingWss="" name="Doc Submission Deferred Req" outgoingWss="" useWsAddressing="true" wssPasswordType="" id="63af1f8a-563c-40b8-a921-9f236a6c015a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityXDRRequest}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission Deferred Request">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->

               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList>

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="98357dea-4634-462e-9efe-28fadaf622d6"/>
            <con:assertion type="SOAP Fault Assertion" id="12323a86-24ab-4e89-a453-c5b8a83a37b0"/>
            <con:assertion name="Match content of [@status]" type="XPath Match" id="d5490b4a-4298-48ed-ac96-09eddabffe01">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
							//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:RequestAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="12fc9897-7d71-4bc7-acf2-97672a3f09cd">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="236560f0-9a32-498a-8af6-196cd4d69576">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincentityxdr:async:request:ProvideAndRegisterDocumentSet-bAsyncRequest_RequestMessage" generateMessageId="true" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="83801d0e-0b15-4380-ab1f-09dc2a3648aa">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="9b286e1c-cf4f-4a95-971b-c012ef67150f">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="5e60d3a7-c46d-47b2-9e22-58e240ebd788">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for Human Requestor details
if (!parsedXmlMessage.ActiveParticipant[0].UserID.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

// ParticipantObjectIdentification Patient details
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
// check for  ParticipantObjectIdentification Submission Set details
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	assert(!node.@ParticipantObjectID.isEmpty())
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	
		assert(!node.@ParticipantObjectIDTypeCode.isEmpty())		 
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="b016e4a1-5c25-4bec-9d67-f693aea04f4f">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())

parsedXmlMessage.EventIdentification.find{
assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
    	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="1439f06b-94f2-4172-a9d5-05967d7789bb">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRRequest_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:49:04Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:39:04</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:39:04Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission Deferred Resp" searchProperties="true" id="fffd46f0-f42b-442d-a5f4-3c91df14ea93">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="676eb591-0268-48a9-b4b3-6ea15f2b23b9">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="9f183909-94eb-4526-9d42-ca41132a1ebb">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission Deferred Resp" type="request" id="e54c0271-bbdd-4a97-82f7-8b2e2ac234f2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDRAsyncResponse_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-bAsyncResponse</con:operation>
          <con:request name="Doc Submission Deferred Resp" id="deddfda3-80d7-456b-90ee-5c1e68c2da1e">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DSDeferredResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission Deferred Resp">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
               <urn1:prefix>Ms.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>?addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
               <urn1:prefix>Mr.</urn1:prefix>
               <urn1:suffix>?</urn1:suffix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                     <!--Zero or more repetitions:-->
                     <urn1:translation/>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Karl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>?</urn1:prefix>
                  <urn1:suffix>?</urn1:suffix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <!--Optional:-->
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy notes</urn1:originalText>
               <!--Zero or more repetitions:-->
               <urn1:translation/>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <!--Optional:-->
                     <urn1:version>2.0</urn1:version>
                     <!--Optional:-->
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <!--Optional:-->
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <!--Optional:-->
                     <urn1:conditions>
                        <!--Optional:-->
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <!--Optional:-->
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <!--Zero or more repetitions:-->
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <!--Zero or more repetitions:-->
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:721645965035</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:146207300753</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:783710993742</urn1:signatureValue>
            </urn1:samlSignature>
            <!--Optional:-->
            <urn1:samlIssuer>
               <!--Optional:-->
               <urn1:issuer>?</urn1:issuer>
               <!--Optional:-->
               <urn1:issuerFormat>?</urn1:issuerFormat>
            </urn1:samlIssuer>
            <!--Optional:-->
            <urn1:messageId>?</urn1:messageId>
            <!--1 or more repetitions:-->
           <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn:RegistryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" requestId="?"><!--Optional:-->
            <urn2:ResponseSlotList>
               <!--Zero or more repetitions:-->
               <urn3:Slot name="?" slotType="?">
                  <urn3:ValueList>
                     <urn3:Value>?</urn3:Value>
                  </urn3:ValueList>
               </urn3:Slot>
            </urn2:ResponseSlotList>
            <!--Optional:-->
            <urn2:RegistryErrorList highestSeverity="?">
               <!--1 or more repetitions:-->
               <urn2:RegistryError codeContext="?" errorCode="?" severity="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" location="?">?</urn2:RegistryError>
            </urn2:RegistryErrorList>
         </urn:RegistryResponse>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetResponseRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="4071ced1-b41a-41f9-b31c-748e15bb6f97"/>
            <con:assertion type="Schema Compliance" id="ed2b1ee6-bbe5-4f86-9802-9a33ebb0bdf8">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="02fef744-920a-4730-be81-5074df791300"/>
            <con:assertion type="XPath Match" id="1e3d1438-8da6-4a26-8234-e9132fd91411">
              <con:configuration>
                <path>declare namespace ns10='http://www.hhs.gov/healthit/nhin';
//ns10:XDRAcknowledgement[1]/ns10:message[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:ResponseAccepted</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="f585e599-f471-4560-8294-341b4f084dda">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="1beb8e26-5072-49a0-ac2f-43a76017455b">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="23846261-1d7e-4ecb-9e98-70448e072b83">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
		assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

//Audit Source details
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
   }
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="5694160b-8f78-4cb8-9c25-70394a42c2b9">
        <con:settings/>
        <con:config>
          <script>context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmissionDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
	     assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() &amp;&amp; parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID_g0" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmissionDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="4ca5b153-decf-40b8-8599-f9e62947e97b">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g0</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID_g1</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/NhinService/XDRResponse_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:49:18Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:39:18</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:39:18Z</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Submission" searchProperties="true" id="fb0a6077-5978-4615-ae36-a77a19ceef7d">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="a6bf2189-f4b7-424b-834c-fd4846263567">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="6504b682-61da-4ddf-aabe-307659c097d3">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Doc Submission" type="request" id="29f4a6f6-7da9-485f-a6fe-0aac2b25df4d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityXDR_Binding</con:interface>
          <con:operation>ProvideAndRegisterDocumentSet-b</con:operation>
          <con:request incomingWss="" name="Doc Submission" outgoingWss="" wssPasswordType="" id="2f92ba8e-5aff-40cb-947c-dca7d071a584">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-XDREntity}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:urn3="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:urn4="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn5="urn:ihe:iti:xds-b:2007">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Submission">
      <urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
         <urn:assertion>
            <urn1:messageId>${#Project#messageID}</urn1:messageId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253-98-7546</urn1:SSN>
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>

         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>

         <urn:ProvideAndRegisterDocumentSetRequest>
            <urn2:SubmitObjectsRequest id="123" comment="comme">
               <!--Optional:-->

               <urn4:RegistryObjectList>
                  <urn4:ExtrinsicObject id="Document01" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                     <urn4:Slot name="creationTime">
                        <urn4:ValueList>
                           <urn4:Value>20051224</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="languageCode">
                        <urn4:ValueList>
                           <urn4:Value>en-us</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStartTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230800</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="serviceStopTime">
                        <urn4:ValueList>
                           <urn4:Value>200412230801</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientId">
                        <urn4:ValueList>
                           <urn4:Value>ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Slot name="sourcePatientInfo">
                        <urn4:ValueList>
                           <urn4:Value>PID-3|ST-1000^^^&amp;1.3.6.1.4.1.21367.2003.3.9&amp;ISO</urn4:Value>
                           <urn4:Value>PID-5|Doe^John^^^</urn4:Value>
                           <urn4:Value>PID-7|19560527</urn4:Value>
                           <urn4:Value>PID-8|M</urn4:Value>
                           <urn4:Value>PID-11|100 Main St^^Metropolis^Il^44130^USA</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description/>
                     <urn4:Classification id="cl01" classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="Document01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Gerald Smitty</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Parma Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Attending</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl02" classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="Document01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon classCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl03" classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="Document01" nodeRepresentation="1.3.6.1.4.1.21367.2006.7.101">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon confidentialityCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Clinical-Staff"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl04" classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="Document01" nodeRepresentation="CDAR2/IHE 1.0">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon formatCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="CDAR2/IHE 1.0"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl05" classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="Document01" nodeRepresentation="Outpatient">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon healthcareFacilityTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl06" classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="Document01" nodeRepresentation="General Medicine">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon practiceSettingCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="General Medicine"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:Classification id="cl07" classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="Document01" nodeRepresentation="34108-1">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>LOINC</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="Outpatient Evaluation And Management"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei01" registryObject="Document01" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei02" registryObject="Document01" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" value="1.3.6.1.4.1.21367.2005.3.9999.32">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:ExtrinsicObject>
                  <urn4:RegistryPackage id="SubmissionSet01">
                     <urn4:Slot name="submissionTime">
                        <urn4:ValueList>
                           <urn4:Value>20041225235050</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                     <urn4:Name>
                        <urn4:LocalizedString value="Physical"/>
                     </urn4:Name>
                     <urn4:Description>
                        <urn4:LocalizedString value="Annual physical"/>
                     </urn4:Description>
                     <urn4:Classification id="cl08" classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="SubmissionSet01">
                        <urn4:Slot name="authorPerson">
                           <urn4:ValueList>
                              <urn4:Value>Sherry Dopplemeyer</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorInstitution">
                           <urn4:ValueList>
                              <urn4:Value>Cleveland Clinic</urn4:Value>
                              <urn4:Value>Berea Community</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorRole">
                           <urn4:ValueList>
                              <urn4:Value>Purn4ary Surgon</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Slot name="authorSpecialty">
                           <urn4:ValueList>
                              <urn4:Value>Orthopedic</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                     </urn4:Classification>
                     <urn4:Classification id="cl09" classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="SubmissionSet01" nodeRepresentation="History and Physical">
                        <urn4:Slot name="codingScheme">
                           <urn4:ValueList>
                              <urn4:Value>Connect-a-thon contentTypeCodes</urn4:Value>
                           </urn4:ValueList>
                        </urn4:Slot>
                        <urn4:Name>
                           <urn4:LocalizedString value="History and Physical"/>
                        </urn4:Name>
                     </urn4:Classification>
                     <urn4:ExternalIdentifier id="ei03" registryObject="SubmissionSet01" identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="1.3.6.1.4.1.21367.2005.3.9999.33">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei04" registryObject="SubmissionSet01" identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="3670984664">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.sourceId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                     <urn4:ExternalIdentifier id="ei05" registryObject="SubmissionSet01" identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO">
                        <urn4:Name>
                           <urn4:LocalizedString value="XDSSubmissionSet.patientId"/>
                        </urn4:Name>
                     </urn4:ExternalIdentifier>
                  </urn4:RegistryPackage>
                  <urn4:Classification id="cl10" classifiedObject="SubmissionSet01" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd"/>
                  <urn4:Association id="as01" associationType="HasMember" sourceObject="SubmissionSet01" targetObject="Document01">
                     <urn4:Slot name="SubmissionSetStatus">
                        <urn4:ValueList>
                           <urn4:Value>Original</urn4:Value>
                        </urn4:ValueList>
                     </urn4:Slot>
                  </urn4:Association>
               </urn4:RegistryObjectList>

            </urn2:SubmitObjectsRequest>
            <!--1 or more repetitions:-->
            <urn5:Document id="Document01">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</urn5:Document>
         </urn:ProvideAndRegisterDocumentSetRequest>
      </urn:RespondingGateway_ProvideAndRegisterDocumentSetRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="6ce41004-3e1b-4d47-834f-e747c107057f"/>
            <con:assertion type="SOAP Fault Assertion" id="e4dee3d8-6ff1-45cc-b167-a253dda9310d"/>
            <con:assertion type="XPath Match" id="1e50ce52-abdc-4afc-8071-cb42e37d6300">
              <con:configuration>
                <path>declare namespace ns11='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
							//ns11:RegistryResponse[1]/@status</path>
                <content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="c287e8ce-2743-4a82-baf3-b526918755bc">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="{urn:gov:hhs:fha:nhinc:nhincentityxdr}ProvideAndRegisterDocumentSet-b" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="e0b66121-0e5a-4874-b1a3-bd93bb2bf01f">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="2eb71bf5-f7f8-4bb7-a788-fc4eda18b04d">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="b137b49d-1e0d-45f2-8175-0eef0ace57bb">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
		assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
     	if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     assert(!node.@AlternativeUserID.isEmpty())	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="10dac1ef-639e-4ec9-83fc-c4ddb2675455">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDocSubmission') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
          assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserName" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
     	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole" )
	     assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName" )
  	}
 }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'DocSubmission',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="21700a1e-f627-4441-8495-e96cba53fd72">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/DocumentSubmissionAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Submission</con:name>
          <con:value>Set --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/1_1/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentSubmission/2_0/DocumentRepositoryXDR_Service</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:49:30Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-41</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Provide and Register Document Set-b</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>SELF-5^^^&amp;1.3.6.1.4.1.21367.2005.3.7&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectID</con:name>
          <con:value>1.3.6.1.4.1.21367.2005.3.9999.33</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>20</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE XDS Metadata</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Set.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>submission set classificationNode</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:39:30</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:39:30Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Req" searchProperties="true" id="2d01ba9b-8e2f-4495-9afb-0df274e6ff49">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="809a434a-ba0b-48e1-98db-e52ff6b22075">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="ea9936bd-e33a-4c67-ba61-0c53799aaba4">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Req" type="request" id="a49a8d24-19ba-4232-a4fa-a58cc9365089">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncReqBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncReq</con:operation>
          <con:request name="Patient Discovery Deferred Req" useWsAddressing="true" id="59496b2d-d746-43b6-8d11-e74f36bb3a59">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncReq}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery Deferred Req">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#RemoteHCID}" extension="-abd3453dcd24wkkks545"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#LocalPatientID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
                   <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.337</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <!--Optional:-->
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="7472b85b-18a5-4867-946b-25e8e6d79d09"/>
            <con:assertion type="SOAP Fault Assertion" id="5e2e1f22-a597-4ebb-8a3a-8c50e65f8ce6"/>
            <con:assertion name="Verify Receiver" type="XPath Match" id="146d2cd3-4770-4db4-ac42-722b4b130daa">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:receiver[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>1.1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Sender" type="XPath Match" id="5d456bb9-7c1f-4b49-addd-42aa2e56ab91">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:sender[1]/ns3:device[1]/ns3:asAgent[1]/ns3:representedOrganization[1]/ns3:id[1]/@root</path>
                <content>2.2</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify Message" type="XPath Match" id="eedb31ff-6dab-47b6-9ad3-09759933b3d5">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
							//ns3:MCCI_IN000002UV01[1]/ns3:acknowledgement[1]/ns3:acknowledgementDetail[1]/ns3:text[1]/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Verify RelatesTo" type="XPath Match" id="77a9decb-9562-4bc0-a47c-4873d44096a1">
              <con:configuration>
                <path>declare namespace ns1='http://www.w3.org/2005/08/addressing';
							//ns1:RelatesTo[1]/text()</path>
                <content>uuid:6666666666.66666.666.66</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="37eac785-f03d-44b0-8cf5-f577561f5003">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncreq:ProcessPatientDiscoveryAsyncReqAsyncRequest" addDefaultTo="true" messageID="uuid:6666666666.66666.666.66" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="08bfe32b-d471-4632-8e32-ccc096d5eb35">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="0fa073f7-7cd1-403b-a396-78420ded9acd">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="78db50a3-68b0-4313-8744-ef3fc4d76df4">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty()){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	
	}
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2) - ACK" id="eed36b62-ed58-45fd-93a0-cf1d7669b31c">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefReq') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
		assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty()){
	// Patient details will not be populated for PD Deferred 
 }
 
 
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredReq',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="e03f4cb1-1cd7-40ad-96eb-ef9aba1a53b2">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredRequestAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncReq</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:49:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:39:42</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:39:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery Deferred Resp" searchProperties="true" id="62a59f14-2e37-40a3-90c8-4afd3041d32d">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="5239df91-5bfe-424b-a952-f22ba8e4c481">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="939c30ab-2f67-4b36-a926-95c306f26a2b">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery Deferred Resp" type="request" id="53ed50fb-ec85-4d41-b161-a0cc67d1266f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryAsyncRespBindingSoap</con:interface>
          <con:operation>ProcessPatientDiscoveryAsyncResp</con:operation>
          <con:request name="Patient Discovery Deferred Resp" id="86fe14f0-3efd-42df-b492-e8b4e34cf120">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header xmlns:add="SoapUI_Test/ValidationSuite/2-EndToEndSelfTest-soapui-project.xml">
      <add:Action>urn:gov:hhs:fha:nhinc:entitypatientdiscoveryasyncresp:ProcessPatientDiscoveryAsyncRespAsyncRequest</add:Action>
      <add:MessageID>uuid:12bcfc1e-f422-4d1d-af99-ff83d050313e</add:MessageID>
      <add:RelatesTo>uuid:6666666666.66666.666.66</add:RelatesTo>
      <add:To>${#TestSuite#Endpoint-PatientDiscoveryAsyncResp}</add:To>
   </soap:Header>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery Deferred Resp">
      <urn:RespondingGateway_PRPA_IN201306UV02Request>
         <urn:PRPA_IN201306UV02 ITSVersion="XML_1.0">
            <urn:id root="2.2" extension="-5a3e95b1:11d1fa33d45:-8e45"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201306UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <!--1 or more repetitions:-->
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="1.1"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="1.1"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:code codeSystem="2.16.840.1.113883.1.6" code="PRPA_TE201306UV"/>
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="2.2"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:subject typeCode="SUBJ">
                  <urn:registrationEvent classCode="REG" moodCode="EVN">
                     <urn:id nullFlavor="NA"/>
                     <urn:statusCode code="active"/>
                     <urn:subject1 typeCode="SBJ">
                        <urn:patient classCode="PAT">
                           <urn:id extension="D123402" root="2.2"/>
                           <urn:statusCode code="SD"/>
                           <urn:patientPerson>
                              <urn:name>
                                 <urn:family partType="FAM">Younger</urn:family>
                                 <urn:given partType="GIV">Gallow</urn:given>
                              </urn:name>
                              <urn:administrativeGenderCode code="M"/>
                              <urn:birthTime value="19630804"/>
                              <urn:addr>
                                 <urn:city>LEESBURG</urn:city>
                                 <urn:state>VA</urn:state>
                                 <urn:postalCode>20176</urn:postalCode>
                              </urn:addr>
                           </urn:patientPerson>
                           <urn:providerOrganization determinerCode="" classCode="">
                              <urn:id root="2.2"/>
                              <urn:contactParty xsi:nil="true" classCode="CON" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                           </urn:providerOrganization>
                        </urn:patient>
                     </urn:subject1>
                     <urn:custodian typeCode="">
                        <urn:assignedEntity classCode="">
                           <urn:id root="2.2"/>
                        </urn:assignedEntity>
                     </urn:custodian>
                  </urn:registrationEvent>
               </urn:subject>
               <urn:queryAck>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:queryResponseCode code="OK"/>
                  <urn:resultTotalQuantity value="1"/>
                  <urn:resultCurrentQuantity value="1"/>
                  <urn:resultRemainingQuantity value="0"/>
               </urn:queryAck>
               <urn:queryByParameter>
                  <urn:queryId extension="-abd3453dcd24wkkks545" root="2.2"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="M"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="19630804"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectId>
                        <urn:value extension="D123401" root="1.1"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">Younger</urn:family>
                           <urn:given partType="GIV">Gallow</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201306UV02>
         <urn:assertion>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>LEESBURG</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>20176</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19990627</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>Test HCID1</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>HCID1</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>YOUNGER</urn1:familyName>
               <urn1:givenName>GALLOW</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>123456789</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>D123401^^^&amp;amp;2.16.840.1.113883.3.337&amp;amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>Test HCID1</urn1:description>
                  <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
                  <urn1:name>HCID1</urn1:name>
               </urn1:org>
               <!--Optional:-->
               <urn1:roleCoded>
                  <urn1:code>Code</urn1:code>
                  <urn1:codeSystem>CodeSystem</urn1:codeSystem>
                  <urn1:codeSystemName>CodeSystemName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>codeSystemVersion</urn1:codeSystemVersion>
                  <urn1:displayName>displayName</urn1:displayName>
                  <urn1:originalText>originalText</urn1:originalText>
                  <!--Zero or more repetitions:-->
                  <urn1:translation/>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>authorized</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTHKIERAN</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <!--Optional:-->
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:1157111506023</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:136268302631</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:880867232879</urn1:signatureValue>
            </urn1:samlSignature>
            <urn1:relatesToList>${#Project#MessageID}</urn1:relatesToList>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201306UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="d23d84a9-90a1-4651-b7f7-c5ee3e05df7f"/>
            <con:assertion type="SOAP Fault Assertion" id="58071050-c5a4-43c1-8f9c-2032530b7e78"/>
            <con:assertion name="Match content of [typeCode/@code]" type="XPath Match" id="56388bd0-8df3-4576-aa21-9f6a8b019832">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:typeCode[1]/@code</path>
                <content>CA</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Match content of [acknowledgementDetail/text/text()]" type="XPath Match" id="dde5d85d-287e-47d2-bd13-5a19547a4b4d">
              <con:configuration>
                <path>declare namespace ns2='urn:hl7-org:v3';//ns2:MCCI_IN000002UV01[1]/ns2:acknowledgement[1]/ns2:acknowledgementDetail[1]/ns2:text/text()</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Schema Compliance" type="Schema Compliance" id="910aa0b1-5123-4d97-96bd-a18fa26b61ec">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="6f005d6f-024c-4e56-9ab9-3b777dad061b">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="75840f83-2ae6-4898-8c2e-6c61104588a2">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1) - ACK" id="a64fd02f-ac34-4384-9815-70d9fef3616d">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
 
//check for Query Parameters ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
		if (!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given.text() == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="ce303fca-52cb-4503-bdc0-af4bc5bc7df5">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePDDefRes') + '" and relatesTo= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

//assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

//check for ActiveParticipant Source details
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if (!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}

//check for ActiveParticipant Destination details
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}

parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){		
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

//check for Patient ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
}
 
//check for Query Parameter ParticipantObjectIdentification
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	    		 
		 if(!node.@ParticipantObjectID.isEmpty()){
			assert node.@ParticipantObjectID == context.findProperty ( "queryId.@extension" )
		}
		 
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )

	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscoveryDeferredResp',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="c7ab3e32-d116-488c-a1b8-c0fb1d788113">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryDeferredResponseAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingDB</con:name>
          <con:value>assigningauthoritydb</con:value>
        </con:property>
        <con:property>
          <con:name>AAMappingTable</con:name>
          <con:value>aa_to_home_community_mapping</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscoveryAsyncResp</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>AQUserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgDB</con:name>
          <con:value>asyncmsgs</con:value>
        </con:property>
        <con:property>
          <con:name>AsyncMsgTable</con:name>
          <con:value>asyncmsgrepo</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>BirthTime</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>City</con:name>
          <con:value>Melbourne</con:value>
        </con:property>
        <con:property>
          <con:name>Country</con:name>
          <con:value>US</con:value>
        </con:property>
        <con:property>
          <con:name>DBHost</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>DBPass</con:name>
          <con:value>nhincpass</con:value>
        </con:property>
        <con:property>
          <con:name>DBPort</con:name>
          <con:value>3306</con:value>
        </con:property>
        <con:property>
          <con:name>DBUser</con:name>
          <con:value>nhincuser</con:value>
        </con:property>
        <con:property>
          <con:name>DOB</con:name>
          <con:value>19800516</con:value>
        </con:property>
        <con:property>
          <con:name>DQDocID</con:name>
          <con:value>1.123401.11111</con:value>
        </con:property>
        <con:property>
          <con:name>DQPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>DRDocID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>DRRepoID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>DynamicDQDocID</con:name>
          <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:49:53Z</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-AuditLogQuery</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocQuery</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityDocQueryUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-DocRetrieve</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityDocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-EntityXDRRequest</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityProxyService/EntityXDRRequest</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Notify</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
          <con:value>http://localhost:8080/CONNECTGateway/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Reidentification</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubjectDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Subscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value>
        </con:property>
        <con:property>
          <con:name>Endpoint-Unsubscribe</con:name>
          <con:value>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ExpirationDate</con:name>
          <con:value>20100520</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FamilyName</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>Gender</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>GivenName</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>LocalAA</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalConfigDir</con:name>
          <con:value>C:/SelfTest/EndToEndSelfTest</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCDescription</con:name>
          <con:value>InternalTest1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalHCID</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>LocalPatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>MPIDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
        </con:property>
        <con:property>
          <con:name>NHINGatewayConfigDir</con:name>
          <con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
        </con:property>
        <con:property>
          <con:name>NotificationEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionID</con:name>
          <con:value>-f7c1a5d:1204e50e42e:-79eb</con:value>
        </con:property>
        <con:property>
          <con:name>NotifySubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123402^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationDB</con:name>
          <con:value>patientcorrelationdb</con:value>
        </con:property>
        <con:property>
          <con:name>PatientCorrelationTable</con:name>
          <con:value>correlatedidentifiers</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymAA</con:name>
          <con:value>ABC</con:value>
        </con:property>
        <con:property>
          <con:name>PseudonymPatientID</con:name>
          <con:value>PSEUDO001</con:value>
        </con:property>
        <con:property>
          <con:name>PurposeOfDisclosure</con:name>
          <con:value>Mental</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RealAA</con:name>
          <con:value>1.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>RealPatientID</con:name>
          <con:value>D1234010050</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteAA</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCDescription</con:name>
          <con:value>InternalTest2</con:value>
        </con:property>
        <con:property>
          <con:name>RemoteHCID</con:name>
          <con:value>2.2</con:value>
        </con:property>
        <con:property>
          <con:name>RemotePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:39:53</con:value>
        </con:property>
        <con:property>
          <con:name>SSN</con:name>
          <con:value>123456789</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:39:53Z</con:value>
        </con:property>
        <con:property>
          <con:name>State</con:name>
          <con:value>FL</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
        <con:property>
          <con:name>StreetAddress</con:name>
          <con:value>123 Johnson Rd</con:value>
        </con:property>
        <con:property>
          <con:name>SubjectID</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>SubscribePatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionDB</con:name>
          <con:value>subscriptionrepository</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionEndpoint</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationProducerService/HiemSubscription</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionManagerEndpointAddress</con:name>
          <con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/SubscriptionManagerService/HiemUnsubscribe</con:value>
        </con:property>
        <con:property>
          <con:name>SubscriptionTable</con:name>
          <con:value>subscription</con:value>
        </con:property>
        <con:property>
          <con:name>UniquePatientId</con:name>
          <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>UnSubscriptionID</con:name>
          <con:value>3e74139f-5271-4db1-98c0-88748fa3e4e3</con:value>
        </con:property>
        <con:property>
          <con:name>ZipCode</con:name>
          <con:value>12345</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Patient Discovery" searchProperties="true" id="a2f144ec-2c70-4d77-a7ea-81f9a550fee7">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="a3e2a1c5-113e-4b35-ac9b-68d12c1974b8">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="2318a243-e44c-442e-b138-a5a8b716f983">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="clear correlations table" type="groovy" id="fecaa138-e608-4f78-956b-50aafd6eb321">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
			sql.execute('delete from ' + context.findProperty('PatientCorrelationTable'))
			}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Patient Discovery" type="request" id="3661c0c3-cb7f-4bfe-9989-6d77f18562e8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityPatientDiscoveryBindingSoap</con:interface>
          <con:operation>RespondingGateway_PRPA_IN201305UV02</con:operation>
          <con:request name="Patient Discovery" id="3aa80ef3-92c3-4da3-8f26-cb9cbd674dfd">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-PatientDiscovery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:hl7-org:v3" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Patient Discovery">
      <urn:RespondingGateway_PRPA_IN201305UV02Request>
         <urn:PRPA_IN201305UV02 ITSVersion="XML_1.0">
            <urn:id root="1.1" extension="-5a3e95b1:11d1fa33d45:-7f9b"/>
            <urn:creationTime value="20091116084800"/>
            <urn:interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201305UV02"/>
            <urn:processingCode code="T"/>
            <urn:processingModeCode code="T"/>
            <urn:acceptAckCode code="AL"/>
            <urn:receiver typeCode="RCV">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#RemoteHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:receiver>
            <urn:sender typeCode="SND">
               <urn:device classCode="DEV" determinerCode="INSTANCE">
                  <urn:id root="1.2.345.678.999"/>
                  <urn:asAgent classCode="AGNT">
                     <urn:representedOrganization classCode="ORG" determinerCode="INSTANCE">
                        <urn:id root="${#Project#LocalHCID}"/>
                     </urn:representedOrganization>
                  </urn:asAgent>
               </urn:device>
            </urn:sender>
            <urn:controlActProcess classCode="CACT" moodCode="EVN">
               <urn:authorOrPerformer typeCode="AUT">
                  <urn:assignedDevice>
                     <urn:id root="${#Project#LocalAA}"/>
                  </urn:assignedDevice>
               </urn:authorOrPerformer>
               <urn:queryByParameter>
                  <urn:queryId root="${#Project#LocalHCID}" extension="${#TestCase#queryId.@extension}"/>
                  <urn:statusCode code="new"/>
                  <urn:responseModalityCode code="R"/>
                  <urn:responsePriorityCode code="I"/>
                  <urn:parameterList>
                     <urn:livingSubjectAdministrativeGender>
                        <urn:value code="${#Project#Gender}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.administrativeGender</urn:semanticsText>
                     </urn:livingSubjectAdministrativeGender>
                     <urn:livingSubjectBirthTime>
                        <urn:value value="${#Project#BirthTime}"/>
                        <urn:semanticsText representation="TXT">LivingSubject.birthTime</urn:semanticsText>
                     </urn:livingSubjectBirthTime>
                     <urn:livingSubjectName>
                        <urn:value>
                           <urn:family partType="FAM">${#Project#FamilyName}</urn:family>
                           <urn:given partType="GIV">${#Project#GivenName}</urn:given>
                        </urn:value>
                        <urn:semanticsText representation="TXT">LivingSubject.name</urn:semanticsText>
                     </urn:livingSubjectName>
                     <urn:livingSubjectId>
                        <urn:value root="${#Project#LocalAA}" extension="${#Project#SubjectID}"/>
                        <urn:semanticsText representation="TXT"/>
                     </urn:livingSubjectId>
                  </urn:parameterList>
               </urn:queryByParameter>
            </urn:controlActProcess>
         </urn:PRPA_IN201305UV02>
         <urn:assertion>
            <urn1:messageId>${#Project#MessageID}</urn1:messageId>
            <urn1:nationalProviderId>1234567890</urn1:nationalProviderId>         
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>${#Project#City}</urn1:city>
               <urn1:country>${#Project#Country}</urn1:country>
               <urn1:state>${#Project#State}</urn1:state>
               <urn1:streetAddress>${#Project#StreetAddress}</urn1:streetAddress>
               <urn1:zipCode>${#Project#ZipCode}</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>${#Project#DOB}</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>${#Project#FamilyName}</urn1:familyName>
               <urn1:givenName>${#Project#GivenName}</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>FJ</urn1:secondNameOrInitials>
               <urn1:fullName>Joe Smith</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1234</urn1:extension>
               <urn1:localNumber>3456789</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Melbourne</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>123 Johnson Rd</urn1:streetAddress>
               <urn1:zipCode>12345</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Hughes</urn1:familyName>
               <urn1:givenName>Howie</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>HH</urn1:secondNameOrInitials>
               <urn1:fullName>Howie Hughes</urn1:fullName>
               <urn1:prefix>Dr</urn1:prefix>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>123</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1546</urn1:extension>
               <urn1:localNumber>4567892</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>${#Project#SSN}</urn1:SSN>
            <urn1:uniquePatientId>${#Project#UniquePatientId}</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>Frankfort</urn1:city>
               <urn1:country>US</urn1:country>
               <urn1:state>MN</urn1:state>
               <urn1:streetAddress>432 Jackson St</urn1:streetAddress>
               <urn1:zipCode>65498</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Ugble</urn1:familyName>
               <urn1:givenName>Gary</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>GU</urn1:secondNameOrInitials>
               <urn1:fullName>Gary Ugble</urn1:fullName>
               <urn1:prefix>Mr</urn1:prefix>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>987</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>6549</urn1:extension>
               <urn1:localNumber>2222222</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
                 <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>G</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
                  <urn1:prefix>Mrs</urn1:prefix>
               </urn1:personName>
               <urn1:userName>kskagerb</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>307969004</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Public Health</urn1:displayName>
                  <urn1:originalText>Public Health</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PUBLICHEALTH</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Use or disclosure of Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-04-16T13:15:39Z</urn1:authInstant>
               <urn1:sessionIndex>987</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>1.1.1.1</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>connectopensource.org</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn1:resource>
               <urn1:action>TestSaml</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn1:id>
                     <urn1:issueInstant>2009-04-16T13:10:39.093Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn1:issuer>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>Claim-Ref-1234</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>Claim-Instance-1</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
               <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_PRPA_IN201305UV02Request>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="6952878b-36ae-48f5-aa03-aeb0f80ef4f8"/>
            <con:assertion disabled="true" type="Schema Compliance" id="1cf3cc8b-c524-4b2e-af89-9f66c809603d">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="ea0394fb-f52f-4087-877f-2b6698687a19"/>
            <con:assertion name="Check for existance of [ns3:controlActProcess]" type="XPath Match" id="9d056e33-b55e-46f8-a730-71f18e7a3022">
              <con:configuration>
                <path>declare namespace ns3='urn:hl7-org:v3';
				exists( //ns3:PRPA_IN201306UV02/ns3:controlActProcess)</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Given Name XPath Match" type="XPath Match" id="f4985565-a1d9-43f6-8010-bbe086a4ba0f">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:given[1]</path>
                <content>${#Project#GivenName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Family Name XPath Match" type="XPath Match" id="a1e47daa-d850-4f59-a190-e4fc24f406da">
              <con:configuration>
                <path>declare namespace ns1='urn:hl7-org:v3';
				//ns1:PRPA_IN201306UV02[1]/ns1:controlActProcess[1]/ns1:subject[1]/ns1:registrationEvent[1]/ns1:subject1[1]/ns1:patient[1]/ns1:patientPerson[1]/ns1:name[1]/ns1:family[1]</path>
                <content>${#Project#FamilyName}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="count correlations (1)" type="groovy" id="a775155b-36e7-4814-bfb7-8304a4ac8adb">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('PatientCorrelationTable'))[0]
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="ca6df12d-066a-4557-a5c6-755af3f7c18e">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="c5eb777c-ace8-40f7-be9f-836ad52b1295">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="8c223388-6880-43a4-a30b-32ae0b7de073">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	     
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )     
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="09234c99-45e4-44f3-ba6a-32b175c0f9b9">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound = sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypePD') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty()) 

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}

if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     if(!node.@UserID.isEmpty()){
	     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	    	assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )	    
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())	    
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}

if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	    	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Responder.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
	}
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode" )	     
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole" )
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName" )
	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){	 		
	 		byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()			
			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))			
			parsedParticipantObjectQuery.queryId.find{				
				assert it.@root == context.findProperty( "queryId.@root" )
				assert it.@extension == context.findProperty ( "queryId.@extension" )
			}
			assert parsedParticipantObjectQuery.statusCode.@code == context.findProperty( "statusCode.@code" )
			assert parsedParticipantObjectQuery.responseModalityCode.@code == context.findProperty( "responseModalityCode.@code" )
			assert parsedParticipantObjectQuery.responsePriorityCode.@code == context.findProperty( "responsePriorityCode.@code" )
			parsedParticipantObjectQuery.parameterList.livingSubjectAdministrativeGender.find{
				assert it.value.@code == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.value.@code" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectAdministrativeGender.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectBirthTime.find{
				assert it.value.@value == context.findProperty ( "parameterList.livingSubjectBirthTime.value.@value" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectBirthTime.semanticsText" )
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectId.find{
				assert it.value.@root == context.findProperty ( "parameterList.livingSubjectId.value.@root" )
				assert it.value.@extension == context.findProperty ( "parameterList.livingSubjectId.value.@extension" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectId.semanticsText.@representation" )				
			}
			parsedParticipantObjectQuery.parameterList.livingSubjectName.find{
				assert it.value.family.@partType == context.findProperty ( "parameterList.livingSubjectName.value.family.@partType" )
				assert it.value.family.text() == context.findProperty ( "parameterList.livingSubjectName.value.family" )
				assert it.value.given.@partType == context.findProperty ( "parameterList.livingSubjectName.value.given.@partType" )
				assert it.value.given == context.findProperty ( "parameterList.livingSubjectName.value.given" )
				assert it.semanticsText.@representation == context.findProperty ( "parameterList.livingSubjectName.semanticsText.@representation" )
				assert it.semanticsText.text() == context.findProperty ( "parameterList.livingSubjectName.semanticsText" )
			}			
	 	}
	}
  }
}

nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'PatientDiscovery',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="f34648bf-0072-446d-9bc9-26a4334e4201">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/PatientDiscoveryAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>checks --></con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/PatientDiscovery/1_0/NhinService/NhinPatientDiscovery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor.inbound</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:50:05Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText</con:name>
          <con:value>LivingSubject.administrativeGender</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectAdministrativeGender.value.@code</con:name>
          <con:value>M</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText</con:name>
          <con:value>LivingSubject.birthTime</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectBirthTime.value.@value</con:name>
          <con:value>19630804</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@extension</con:name>
          <con:value>1111</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectId.value.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText</con:name>
          <con:value>LivingSubject.name</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.semanticsText.@representation</con:name>
          <con:value>TXT</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family</con:name>
          <con:value>Younger</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.family.@partType</con:name>
          <con:value>FAM</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given</con:name>
          <con:value>Gallow</con:value>
        </con:property>
        <con:property>
          <con:name>parameterList.livingSubjectName.value.given.@partType</con:name>
          <con:value>GIV</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>1111^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0idXJuOmdvdjpoaHM6ZmhhOm5oaW5jOmNvbW1vbjpwYXRpZW50Y29ycmVsYXRpb25mYWNhZGUiIHhtbG5zOm5zNT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectID</con:name>
          <con:value>a797fa28-45fd-4a29-867d-32f3301e73fe</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectDetail.@value</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxuczM6Q09SRUVudmVsb3BlUmVhbFRpbWVSZXF1ZXN0IHhtbG5zOm5zMj0iaHR0cDovL3d3dy5jYXFoLm9yZy9TT0FQL1dTREwvQ09SRVJ1bGUyLjIuMC54c2QiIHhtbG5zOm5zMz0idXJuOm9yZzpjYXFoOnNvYXA6d3NkbDpjb3JlcnVsZTJfMl8wIj48UGF5bG9hZFR5cGU+WDEyXzI3MF9SZXF1ZXN0XzAwNTAxMFgyNzlBMTwvUGF5bG9hZFR5cGU+PFByb2Nlc3NpbmdNb2RlPlJlYWxUaW1lPC9Qcm9jZXNzaW5nTW9kZT48UGF5bG9hZElEPmY4MWQ0ZmFlLTdkZWMtMTFkMC1hNzY1LTAwYTBjOTFlNmJmNjwvUGF5bG9hZElEPjxUaW1lU3RhbXA+MjAwNy0wOC0zMFQxMDoyMDozNFo8L1RpbWVTdGFtcD48U2VuZGVySUQ+SG9zcGl0YWxBPC9TZW5kZXJJRD48UmVjZWl2ZXJJRD5QYXllckI8L1JlY2VpdmVySUQ+PENPUkVSdWxlVmVyc2lvbj4yLjIuMDwvQ09SRVJ1bGVWZXJzaW9uPjxQYXlsb2FkPjwvUGF5bG9hZD48L25zMzpDT1JFRW52ZWxvcGVSZWFsVGltZVJlcXVlc3Q+</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-55</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Patient Discovery</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectName.@value</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxxdWVyeUJ5UGFyYW1ldGVyIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6bnMyPSJ1cm46aGw3LW9yZzpzZHRjIiB4bWxuczpuczM9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIHhtbG5zOm5zND0idXJuOmdvdjpoaHM6ZmhhOm5oaW5jOmNvbW1vbjpwYXRpZW50Y29ycmVsYXRpb25mYWNhZGUiIHhtbG5zOm5zNT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS8wOC9hZGRyZXNzaW5nIj48cXVlcnlJZCByb290PSIxLjEiIGV4dGVuc2lvbj0iLWFiZDM0NTNkY2QyNHdra2tzNTQ1Ii8+PHN0YXR1c0NvZGUgY29kZT0ibmV3Ii8+PHJlc3BvbnNlTW9kYWxpdHlDb2RlIGNvZGU9IlIiLz48cmVzcG9uc2VQcmlvcml0eUNvZGUgY29kZT0iSSIvPjxwYXJhbWV0ZXJMaXN0PjxsaXZpbmdTdWJqZWN0QWRtaW5pc3RyYXRpdmVHZW5kZXI+PHZhbHVlIGNvZGU9Ik0iLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmFkbWluaXN0cmF0aXZlR2VuZGVyPC9zZW1hbnRpY3NUZXh0PjwvbGl2aW5nU3ViamVjdEFkbWluaXN0cmF0aXZlR2VuZGVyPjxsaXZpbmdTdWJqZWN0QmlydGhUaW1lPjx2YWx1ZSB2YWx1ZT0iMTk2MzA4MDQiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0LmJpcnRoVGltZTwvc2VtYW50aWNzVGV4dD48L2xpdmluZ1N1YmplY3RCaXJ0aFRpbWU+PGxpdmluZ1N1YmplY3RJZD48dmFsdWUgcm9vdD0iMS4xIiBleHRlbnNpb249IjExMTEiLz48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIi8+PC9saXZpbmdTdWJqZWN0SWQ+PGxpdmluZ1N1YmplY3ROYW1lPjx2YWx1ZT48ZmFtaWx5IHBhcnRUeXBlPSJGQU0iPllvdW5nZXI8L2ZhbWlseT48Z2l2ZW4gcGFydFR5cGU9IkdJViI+R2FsbG93PC9naXZlbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92YWx1ZT48c2VtYW50aWNzVGV4dCByZXByZXNlbnRhdGlvbj0iVFhUIj5MaXZpbmdTdWJqZWN0Lm5hbWU8L3NlbWFudGljc1RleHQ+PC9saXZpbmdTdWJqZWN0TmFtZT48L3BhcmFtZXRlckxpc3Q+PC9xdWVyeUJ5UGFyYW1ldGVyPg==</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectQuery.@value</con:name>
          <con:value>test</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Query.ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Responder.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@extension</con:name>
          <con:value>-abd3453dcd24wkkks545</con:value>
        </con:property>
        <con:property>
          <con:name>queryId.@root</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>responseModalityCode.@code</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>responsePriorityCode.@code</con:name>
          <con:value>I</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:40:05</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:40:05Z</con:value>
        </con:property>
        <con:property>
          <con:name>statusCode.@code</con:name>
          <con:value>new</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Query" searchProperties="true" id="9ef7d334-39f5-4693-a2ce-bc5609f8a972">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="4ef2fd74-65fd-4311-8b81-2f18dde6f174">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="c92e32f6-6248-42bb-b95d-1ba03e96a99d">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="update config" type="groovy" id="b5d8f64c-b7a3-4266-b2a3-67a407f1ce13">
        <con:settings/>
        <con:config>
          <script>nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'), "gateway.properties", "documentQueryQuerySelf", "false", log);</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear Correlation Table &amp; Add Correlation" type="groovy" id="6b961654-413d-490c-8206-6e045dab9a3b">
        <con:settings/>
        <con:config>
          <script>context.withSql('PatientCorrelationDB') { sql -> 
		def table = context.findProperty('PatientCorrelationTable')

		sql.execute('delete from ' + table)

		def localAA = context.findProperty( "LocalAA" )
		def localPatientID = context.findProperty("LocalPatientID")
		def remoteAA = context.findProperty( "RemoteAA" )
		def remotePatientID = context.findProperty("RemotePatientID")
		def insertSql = "insert into " + table + " (correlationId, PatientAssigningAuthorityId, PatientId, CorrelatedPatientAssignAuthId, CorrelatedPatientId) " + 
		"values (1, ?, ?, ?, ?)"
		sql.executeUpdate(insertSql, [localAA, localPatientID, remoteAA, remotePatientID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Clear AA Mapping Table &amp; Add Mapping" type="groovy" id="b87ff79b-714d-40c9-b78a-f5027a5a3c63">
        <con:settings/>
        <con:config>
          <script>context.withSql('AAMappingDB') { sql -> 
		def table = context.findProperty('AAMappingTable')

		sql.execute('delete from ' + table)

		def remoteAA = context.findProperty( "RemoteAA" )
		def remoteHCID = context.findProperty("RemoteHCID")
		def insertSql = "insert into " + table + " (id, assigningauthorityid, homecommunityid) " + 
		"values (1, ?, ?)"
		sql.executeUpdate(insertSql, [remoteAA, remoteHCID])
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Query" type="request" id="fbb81c35-cba9-4c73-b8cd-354abb25965b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocQueryBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayQuery</con:operation>
          <con:request name="Document Query" id="4f05b7b6-a9c2-4b12-8f01-1b09e249f668">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocQuery}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Query">
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="LeafClass" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'${#Project#DQPatientID}^^^&amp;${#Project#LocalAA}&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
         <urn2:Slot name="$XDSDocumentEntryClassCode">
            <urn2:ValueList>
                    <urn2:Value>34133-9</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryClassCodeScheme">
                  <urn2:ValueList>
                     <urn2:Value>2.16.840.1.113883.6.1</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:messageId>${#Project#MessageID}</urn3:messageId>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>AddrCity</urn3:city>
               <urn3:country>AddrCountry</urn3:country>
               <urn3:state>AddrState</urn3:state>
               <urn3:streetAddress>AddrStreet</urn3:streetAddress>
               <urn3:zipCode>AddrZip</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>06/04/1959 05:21:00</urn3:dateOfBirth>
            <urn3:explanationNonClaimantSignature>Electronic</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>false</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>false</urn3:haveSignature>
            <urn3:haveWitnessSignature>false</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>${#Project#LocalHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#LocalHCDescription}</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sandy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
               <urn3:fullName>Sandy S. Smith</urn3:fullName>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5436</urn3:extension>
               <urn3:localNumber>253-6849</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Addr2City</urn3:city>
               <urn3:country>Addr2Country</urn3:country>
               <urn3:state>Addr2State</urn3:state>
               <urn3:streetAddress>Addr2Street</urn3:streetAddress>
               <urn3:zipCode>Addr2Zip</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sammy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>s</urn3:secondNameOrInitials>
               <urn3:fullName>Sammy S. Smith</urn3:fullName>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5424</urn3:extension>
               <urn3:localNumber>542-6823</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>253-98-7546</urn3:SSN>
            <urn3:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>addrCode</urn3:code>
                  <urn3:codeSystem>addrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>addrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>addrCode</urn3:displayName>
                  <urn3:originalText>addrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Burnell</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>FL</urn3:state>
               <urn3:streetAddress>825 North</urn3:streetAddress>
               <urn3:zipCode>32184</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Scott</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S.</urn3:secondNameOrInitials>
               <urn3:fullName>Scott S. Smith</urn3:fullName>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>8432</urn3:extension>
               <urn3:localNumber>985-2239</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>Skagerberg</urn3:familyName>
                  <urn3:givenName>Karl</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>nameCode</urn3:code>
                     <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                     <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                     <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                     <urn3:displayName>nameCode</urn3:displayName>
                     <urn3:originalText>nameCode</urn3:originalText>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
                  <urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
               </urn3:personName>
               <urn3:userName>kskagerberg</urn3:userName>
               <urn3:org>
                  <urn3:description>${#Project#LocalHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#LocalHCDescription}</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>307969004</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Public Health</urn3:displayName>
                  <urn3:originalText>Public Health</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PUBLICHEALTH</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:samlAuthnStatement>
               <urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
               <urn3:sessionIndex>987</urn3:sessionIndex>
               <urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
               <urn3:subjectLocalityAddress>1.1.1.1</urn3:subjectLocalityAddress>
               <urn3:subjectLocalityDNSName>connectopensource.org</urn3:subjectLocalityDNSName>
            </urn3:samlAuthnStatement>
         <urn3:samlAuthzDecisionStatement>
               <urn3:decision>Permit</urn3:decision>
               <urn3:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
               <urn3:action>TestSaml</urn3:action>
               <urn3:evidence>
                  <urn3:assertion>
                     <urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
                     <urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
                     <urn3:version>2.0</urn3:version>
                     <urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
                     <urn3:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn3:issuer>
                     <urn3:conditions>
                        <urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
                        <urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
                     </urn3:conditions>
                     <urn3:accessConsentPolicy>urn:oid:1.2.3.4</urn3:accessConsentPolicy>
                     <urn3:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn3:instanceAccessConsentPolicy>
                  </urn3:assertion>
               </urn3:evidence>
            </urn3:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn3:nhinTargetCommunity>
               <urn3:homeCommunity>
                  <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
               </urn3:homeCommunity>
            </urn3:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="f094a9a0-0b37-4547-b653-3fc549802034"/>
            <con:assertion type="Schema Compliance" id="69cac337-b115-49b5-bd3d-c635af7c0117">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion" id="0c14ff2e-c2de-42fc-8ced-fc2b7015cccf"/>
            <con:assertion name="DocID Match" type="GroovyScriptAssertion" id="69b79389-d51b-4067-bef3-e4b03f7f712c">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
				def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
				holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
				holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

				def documentID = context.findProperty('DQDocID')
				def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
				assert (documentID == msgDocID)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait for Audit table to populate" id="c0d6ca87-6ea1-47e7-b7bf-5e1da8ba06b2">
        <con:settings/>
        <con:config>
          <delay>1500</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="d0a30f1e-d90a-48b8-8eb6-1ebfb6ad8004">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="a97b6b6a-cbae-48c3-ad2e-13bcd7bc2f05">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	    	if(!node.@UserName.isEmpty()){	    
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	    	}
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->	    	     
     	assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	 }
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->	    
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )   
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
   	    	
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
}
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )    	
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )	     
          assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

	 	byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   		def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))
   		assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		  		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="60bc9f4d-1f6d-48f8-b30d-626c8951c3cc">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDQ') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())   

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source.@UserID" )	     
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->		
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest_g0.@UserID" )
   	     if(!node.@UserName.isEmpty()){
	     	assert node.@UserName == context.findProperty( "ActiveParticipant_Dest.@UserNamee" )
	     }
	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Dest.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){
			log.info "inside auditsourcetype code" + it.@AuditSourceTypeCode
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )      
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )	     
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )
	}	
 }
 if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     //assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
		assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" ) 
     	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )

		if(!node.ParticipantObjectQuery.text().isEmpty()){    
    			byte[] participantobjectQueryDecoded = node.ParticipantObjectQuery.text().decodeBase64()   
   			def parsedParticipantObjectQuery = new XmlSlurper().parseText(new String(participantobjectQueryDecoded))  
   			assert parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.text().contains(context.findProperty( "parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID" ))
   		}   		
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def localHCID = testRunner.testCase.testSuite.project.getPropertyValue("LocalHCID")
	 		def localHCIDWithPrefix 
	 		if(localHCID.startsWith("urn:oid:")){
	 			localHCIDWithPrefix= localHCID
	 		}
	 		else{
	 			localHCIDWithPrefix = "urn:oid:"+localHCID
	 		}
  			assert decodedData2 == localHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )
	 		
	 	} 
  	}
  }
}


nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'QueryForDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="082740b2-ac86-48bf-b550-38f7fbe5c244">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/QueryDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--RESPONDER--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/3_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:50:18Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>E</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110112</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>FullPatientID</con:name>
          <con:value>'D123401^^^&amp;amp;1.1&amp;amp;ISO'</con:value>
        </con:property>
        <con:property>
          <con:name>parsedParticipantObjectQuery.AdhocQuery.Slot.ValueList.Value.PatientID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>D123401^^^&amp;2.2&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>D123401</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>24</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>QueryEncoding</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>UTF-8</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>urn:ihe:iti:xca:2010:homeCommunityId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>ITI-38</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Query</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxBZGhvY1F1ZXJ5UmVxdWVzdCB4bWx....</con:value>
        </con:property>
        <con:property>
          <con:name>ResponderActiveParticipant_Dest.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentQuery/2_0/NhinService/RespondingGateway_Query_Service/DocQuery</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:40:18</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:40:18Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document Retrieve" searchProperties="true" id="057be88f-5e6a-47ef-96d8-6ffdef5db6a6">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="1f442a2e-40ee-48cb-ad8b-643fc6ee9edc">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait to Clear Audit logs" id="acb268c7-8b7a-4483-9165-41e2e523adca">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep name="Document Retrieve" type="request" id="c97198c8-448c-4153-9c9c-e57740dc5fb8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>EntityDocRetrieveBindingSoap</con:interface>
          <con:operation>RespondingGateway_CrossGatewayRetrieve</con:operation>
          <con:request incomingWss="" name="Document Retrieve" outgoingWss="" wssPasswordType="" id="7b44ca2b-3c44-4fe2-b9ef-3ae0206930d6">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-DocRetrieve}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:ihe:iti:xds-b:2007" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Document Retrieve">
      <urn:RespondingGateway_CrossGatewayRetrieveRequest>
         <urn1:RetrieveDocumentSetRequest>
            <urn1:DocumentRequest>
               <urn1:HomeCommunityId>${#Project#RemoteHCID}</urn1:HomeCommunityId>
               <urn1:RepositoryUniqueId>${#Project#DRRepoID}</urn1:RepositoryUniqueId>
               <urn1:DocumentUniqueId>${#Project#DRDocID}</urn1:DocumentUniqueId>
            </urn1:DocumentRequest>
         </urn1:RetrieveDocumentSetRequest>
         <urn:assertion>
            <urn2:messageId>${#Project#MessageID}</urn2:messageId>
            <urn2:address>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>AddrCity</urn2:city>
               <urn2:country>AddrCountry</urn2:country>
               <urn2:state>AddrState</urn2:state>
               <urn2:streetAddress>AddrStreet</urn2:streetAddress>
               <urn2:zipCode>AddrZip</urn2:zipCode>
            </urn2:address>
            <urn2:dateOfBirth>06/04/1959 05:21:00</urn2:dateOfBirth>
            <urn2:explanationNonClaimantSignature>Electronic</urn2:explanationNonClaimantSignature>
            <urn2:haveSecondWitnessSignature>false</urn2:haveSecondWitnessSignature>
            <urn2:haveSignature>false</urn2:haveSignature>
            <urn2:haveWitnessSignature>false</urn2:haveWitnessSignature>
            <urn2:homeCommunity>
               <urn2:description>${#Project#LocalHCDescription}</urn2:description>
               <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
               <urn2:name>${#Project#LocalHCDescription}</urn2:name>
            </urn2:homeCommunity>
            <urn2:personName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sandy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
               <urn2:fullName>Sandy S. Smith</urn2:fullName>
            </urn2:personName>
            <urn2:phoneNumber>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5436</urn2:extension>
               <urn2:localNumber>253-6849</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:phoneNumber>
            <urn2:secondWitnessAddress>
               <urn2:addressType>
                  <urn2:code>AddrCode</urn2:code>
                  <urn2:codeSystem>AddrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>AddrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>AddrCode</urn2:displayName>
                  <urn2:originalText>AddrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Addr2City</urn2:city>
               <urn2:country>Addr2Country</urn2:country>
               <urn2:state>Addr2State</urn2:state>
               <urn2:streetAddress>Addr2Street</urn2:streetAddress>
               <urn2:zipCode>Addr2Zip</urn2:zipCode>
            </urn2:secondWitnessAddress>
            <urn2:secondWitnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Sammy</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>s</urn2:secondNameOrInitials>
               <urn2:fullName>Sammy S. Smith</urn2:fullName>
            </urn2:secondWitnessName>
            <urn2:secondWitnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>5424</urn2:extension>
               <urn2:localNumber>542-6823</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:secondWitnessPhone>
            <urn2:SSN>253-98-7546</urn2:SSN>
            <urn2:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn2:uniquePatientId>
            <urn2:witnessAddress>
               <urn2:addressType>
                  <urn2:code>addrCode</urn2:code>
                  <urn2:codeSystem>addrCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>addrCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>addrCode</urn2:displayName>
                  <urn2:originalText>addrCode</urn2:originalText>
               </urn2:addressType>
               <urn2:city>Burnell</urn2:city>
               <urn2:country>USA</urn2:country>
               <urn2:state>FL</urn2:state>
               <urn2:streetAddress>825 North</urn2:streetAddress>
               <urn2:zipCode>32184</urn2:zipCode>
            </urn2:witnessAddress>
            <urn2:witnessName>
               <urn2:familyName>Smith</urn2:familyName>
               <urn2:givenName>Scott</urn2:givenName>
               <urn2:nameType>
                  <urn2:code>nameCode</urn2:code>
                  <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>nameCode</urn2:displayName>
                  <urn2:originalText>nameCode</urn2:originalText>
               </urn2:nameType>
               <urn2:secondNameOrInitials>S.</urn2:secondNameOrInitials>
               <urn2:fullName>Scott S. Smith</urn2:fullName>
            </urn2:witnessName>
            <urn2:witnessPhone>
               <urn2:areaCode>321</urn2:areaCode>
               <urn2:countryCode>1</urn2:countryCode>
               <urn2:extension>8432</urn2:extension>
               <urn2:localNumber>985-2239</urn2:localNumber>
               <urn2:phoneNumberType>
                  <urn2:code>phoneCode</urn2:code>
                  <urn2:codeSystem>phoneCodeSyst</urn2:codeSystem>
                  <urn2:codeSystemName>phoneCodeSystName</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>phoneCode</urn2:displayName>
                  <urn2:originalText>phoneCode</urn2:originalText>
               </urn2:phoneNumberType>
            </urn2:witnessPhone>
            <urn2:userInfo>
               <urn2:personName>
                  <urn2:familyName>Skagerberg</urn2:familyName>
                  <urn2:givenName>Karl</urn2:givenName>
                  <urn2:nameType>
                     <urn2:code>nameCode</urn2:code>
                     <urn2:codeSystem>nameCodeSyst</urn2:codeSystem>
                     <urn2:codeSystemName>nameCodeSystName</urn2:codeSystemName>
                     <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                     <urn2:displayName>nameCode</urn2:displayName>
                     <urn2:originalText>nameCode</urn2:originalText>
                  </urn2:nameType>
                  <urn2:secondNameOrInitials>S</urn2:secondNameOrInitials>
                  <urn2:fullName>Kasrl S. Skagerberg</urn2:fullName>
               </urn2:personName>
               <urn2:userName>kskagerb</urn2:userName>
               <urn2:org>
                  <urn2:description>${#Project#LocalHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#LocalHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#LocalHCDescription}</urn2:name>
               </urn2:org>
               <urn2:roleCoded>
                  <urn2:code>307969004</urn2:code>
                  <urn2:codeSystem>2.16.840.1.113883.6.96</urn2:codeSystem>
                  <urn2:codeSystemName>SNOMED_CT</urn2:codeSystemName>
                  <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
                  <urn2:displayName>Public Health</urn2:displayName>
                  <urn2:originalText>Public Health</urn2:originalText>
               </urn2:roleCoded>
            </urn2:userInfo>
            <urn2:authorized>true</urn2:authorized>
            <urn2:purposeOfDisclosureCoded>
               <urn2:code>PUBLICHEALTH</urn2:code>
               <urn2:codeSystem>2.16.840.1.113883.3.18.7.1</urn2:codeSystem>
               <urn2:codeSystemName>nhin-purpose</urn2:codeSystemName>
               <urn2:codeSystemVersion>1.0</urn2:codeSystemVersion>
               <urn2:displayName>Use or disclosure of Psychotherapy Notes</urn2:displayName>
               <urn2:originalText>Use or disclosure of Psychotherapy Notes</urn2:originalText>
            </urn2:purposeOfDisclosureCoded>
            <urn2:samlAuthnStatement>
               <urn2:authInstant>2009-04-16T13:15:39Z</urn2:authInstant>
               <urn2:sessionIndex>987</urn2:sessionIndex>
               <urn2:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn2:authContextClassRef>
               <urn2:subjectLocalityAddress>1.1.1.1</urn2:subjectLocalityAddress>
               <urn2:subjectLocalityDNSName>connectopensource.org</urn2:subjectLocalityDNSName>
            </urn2:samlAuthnStatement>
            <urn2:samlAuthzDecisionStatement>
               <urn2:decision>Permit</urn2:decision>
               <urn2:resource>https://1.1.1.1:8181/SamlReceiveService/SamlProcessWS</urn2:resource>
               <urn2:action>TestSaml</urn2:action>
               <urn2:evidence>
                  <urn2:assertion>
                     <urn2:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn2:id>
                     <urn2:issueInstant>2009-04-16T13:10:39.093Z</urn2:issueInstant>
                     <urn2:version>2.0</urn2:version>
                     <urn2:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn2:issuerFormat>
                     <urn2:issuer>CN=SAML User,OU=connect,O=FHA,L=Melbourne,ST=FL,C=US</urn2:issuer>
                     <urn2:conditions>
                        <urn2:notBefore>2009-04-16T13:10:39.093Z</urn2:notBefore>
                        <urn2:notOnOrAfter>2009-12-31T12:00:00.000Z</urn2:notOnOrAfter>
                     </urn2:conditions>
                     <urn2:accessConsentPolicy>urn:oid:1.2.3.4</urn2:accessConsentPolicy>
                     <urn2:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn2:instanceAccessConsentPolicy>
                  </urn2:assertion>
               </urn2:evidence>
            </urn2:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:NhinTargetCommunities>
            <urn2:nhinTargetCommunity>
               <urn2:homeCommunity>
                  <urn2:description>${#Project#RemoteHCDescription}</urn2:description>
                  <urn2:homeCommunityId>${#Project#RemoteHCID}</urn2:homeCommunityId>
                  <urn2:name>${#Project#RemoteHCDescription}</urn2:name>
               </urn2:homeCommunity>
            </urn2:nhinTargetCommunity>
         </urn:NhinTargetCommunities>
      </urn:RespondingGateway_CrossGatewayRetrieveRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="594b9218-52c9-456e-95da-a9975f5cd3d0"/>
            <con:assertion type="SOAP Fault Assertion" id="1f995372-ec3b-430a-96d8-4d00880dfdfc"/>
            <con:assertion type="Schema Compliance" disabled="true" id="23844467-6948-4a9c-a588-dfefc4e989d4">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc Repository ID" type="XPath Match" id="53019ece-40b9-43d6-9fcd-3edba1c013df">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:RepositoryUniqueId[1]</path>
                <content>${#Project#DRRepoID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Doc ID" type="XPath Match" id="128f4d3a-b660-4afc-b75a-fbdc0e1c413e">
              <con:configuration>
                <path>declare namespace ns5='urn:ihe:iti:xds-b:2007';
					//ns5:RetrieveDocumentSetResponse[1]/ns5:DocumentResponse[1]/ns5:DocumentUniqueId[1]</path>
                <content>${#Project#DRDocID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              </con:configuration>
            </con:assertion>
            <con:assertion name="Document Data" type="GroovyScriptAssertion" id="f1c42ac1-8505-43ad-bd09-011ede3352dd">
              <con:configuration>
                <scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
					def holder = groovyUtils.getXmlHolder( messageExchange.responseContent )
					holder.namespaces["ns"]="urn:ihe:iti:xds-b:2007"
					def docData = holder["//ns:RetrieveDocumentSetResponse[1]/ns:DocumentResponse[1]/ns:Document[1]"]
					log.info docData.toString()
					assert (docData.size() != 0)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig action="urn:gov:hhs:fha:nhinc:entitydocretrieve/EntityDocRetrievePortType/RespondingGateway_CrossGatewayRetrieveRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="68e2946f-56b6-4a5f-b1ce-8e67c15b6967">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="1dbff829-fbb6-4825-ae7b-f224906e0299">
        <con:settings/>
        <con:config>
          <script>if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "true")
{
context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 2 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where direction="Inbound" and remoteHcid="1.1"')[0]	
}
	testRunner.gotoStepByName( "VerifyMessage-NhinOutbound-InitiatingGateway(1.1)")
}
else if (  nhinc.FileUtils.readProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments', log) == "false")
{
 	context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 0 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	}
	testRunner.gotoStepByName( "Success")
}
else
{
 	testRunner.fail( "Incorrect AuditLogging property found for this service testcase" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-InitiatingGateway(1.1)" id="372eef26-aef0-4f64-beff-53da0cca6b66">
        <con:settings/>
        <con:config>
          <script><![CDATA[context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_22_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def userId_Outbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Outbound" and remoteHcid="2.2"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_22_Outbound)

assert(!userId_Outbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node -> 
	    	assert node.@UserID == context.findProperty( "ActiveParticipant.@UserID" )
	     if(!node.@UserName.isEmpty()){
        		assert node.@UserName == context.findProperty( "ActiveParticipant.@UserName" )
	     }
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant.@UserIsRequestor" )
	     if(!node.RoleIDCode.isEmpty()){
   	     	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant.RoleIDCode.@code" )
	     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant.RoleIDCode.@codeSystemName" )
	   		assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant.RoleIDCode.@displayName" )
	     }
	}
  }
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g0.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[2].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[2].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
   	     assert(!node.@AlternativeUserID.isEmpty())
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
         	assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if(!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){
	     	//commented out until code updated to return correct value as per spec	     	
	     	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectID" )
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCode" )
   	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code" )
    		assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName" )
    		assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName" )	     
     }	
 }
if (!parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[1].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[1].each{ node ->
	     assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectID" )
   	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
	     assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
         	assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )	 		
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
	 		def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	    
      } 
  }
}]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VerifyMessage-NhinOutbound-RespondingGateway(2.2)" id="3edfbc1b-0808-4dfc-8fac-5a5f0eee87a9">
        <con:settings/>
        <con:config>
          <script><![CDATA[import java.util.regex.*
context.withSql('AuditRepoDB') {sql ->
def nhinAuditMessage_11_Outbound = sql.firstRow('SELECT CONVERT(message USING utf8) FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def userId_Inbound= sql.firstRow('SELECT userId FROM ' + context.findProperty('AuditRepoTable') + ' where eventType = "'+ context.findProperty('EventTypeDR') + '" and messageId= "'+context.findProperty('MessageID') + '" and direction="Inbound" and remoteHcid="1.1"')[0]
def parsedXmlMessage = new XmlSlurper().parseText(nhinAuditMessage_11_Outbound)

assert(!userId_Inbound.isEmpty())  

parsedXmlMessage.EventIdentification.find{
	assert it.@EventActionCode == context.findProperty( "EventIdentification_Responder.@EventActionCode" )
	//assert it.@EventDateTime == context.findProperty( "EventIdentification.@EventDateTime" )
     assert it.@EventOutcomeIndicator == context.findProperty( "EventIdentification.@EventOutcomeIndicator" )
	assert it.EventID.@code == context.findProperty( "EventIdentification_Responder.EventID.@code" )
	assert it.EventID.@codeSystemName == context.findProperty( "EventIdentification.EventID.@codeSystemName" )
	assert it.EventID.@displayName == context.findProperty( "EventIdentification_Responder.EventID.@displayName" )
	assert it.EventTypeCode.@code == context.findProperty( "EventIdentification.EventTypeCode.@code" )
	assert it.EventTypeCode.@codeSystemName == context.findProperty( "EventIdentification.EventTypeCode.@codeSystemName" )
	assert it.EventTypeCode.@displayName == context.findProperty( "EventIdentification.EventTypeCode.@displayName" )	
}
if (!parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[0].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[0].each{ node ->	     
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Source_g0.@UserID" )	     
     	assert(!node.@AlternativeUserID.isEmpty())     	
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Source.@UserIsRequestor" )
     	assert node.@UserName == context.findProperty( "ActiveParticipant_Source.@UserName" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Source.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Source.RoleIDCode.@displayName" )	     
	}
}
if (!parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName.isEmpty() && parsedXmlMessage.ActiveParticipant[1].RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )){
	parsedXmlMessage.ActiveParticipant[1].each{ node ->
	     assert node.@UserID == context.findProperty( "ActiveParticipant_Dest.@UserID" )
     	assert node.@UserIsRequestor == context.findProperty( "ActiveParticipant_Dest.@UserIsRequestor" )
     	assert(!node.@NetworkAccessPointTypeCode.isEmpty())
   	 	def NetworkAccessPointTypeCode = node.@NetworkAccessPointTypeCode
   	 	assert NetworkAccessPointTypeCode == 1 || NetworkAccessPointTypeCode == 2
     	assert(!node.@NetworkAccessPointID.isEmpty())
     	def NetworkAccessPointID = node.@NetworkAccessPointID
     	if (NetworkAccessPointTypeCode == 1) {

     		assert node.@NetworkAccessPointID == context.findProperty( "ActiveParticipant_Destination.@NetworkAccessPointID" )
     		
     	} else {

     		def x = ~/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/
     		def matcher = (NetworkAccessPointID =~ x)  
			assert matcher.matches()
     		
     	}
          assert node.RoleIDCode.@code == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@code" )
     	assert node.RoleIDCode.@codeSystemName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@codeSystemName" )
     	assert node.RoleIDCode.@displayName == context.findProperty( "ActiveParticipant_Dest.RoleIDCode.@displayName" )	     
	}
}
parsedXmlMessage.AuditSourceIdentification.find{
		if(!it.@AuditEnterpriseSiteID.isEmpty()){
			assert it.@AuditEnterpriseSiteID == context.findProperty( "AuditSourceIdentification.@AuditEnterpriseSiteID" )
		}
		if(!it.@AuditSourceTypeCode.isEmpty()){			
			assert it.@AuditSourceTypeCode == context.findProperty( "AuditSourceIdentification.@AuditSourceTypeCode" )
		}
		if(!it.@AuditSourceID.isEmpty()){
			assert it.@AuditSourceID == context.findProperty( "AuditSourceIdentification.@AuditSourceID" )	
		}
}
if (!parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode.isEmpty() && parsedXmlMessage.ParticipantObjectIdentification[0].@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )){
	parsedXmlMessage.ParticipantObjectIdentification[0].each{ node ->
	     if(!node.@ParticipantObjectID.isEmpty()){	     
	     //	assert node.@ParticipantObjectID == context.findProperty( "ParticipantObjectIdentification_Query.@ParticipantObjectID" )	     	
	     }
	     assert node.@ParticipantObjectTypeCode == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode" )
   	    	assert node.@ParticipantObjectTypeCodeRole == context.findProperty( "ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole" )
    		assert node.ParticipantObjectIDTypeCode.@code == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code" )
     	assert node.ParticipantObjectIDTypeCode.@codeSystemName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName" )
     	assert node.ParticipantObjectIDTypeCode.@displayName == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName" )
	          	 	
	 	if(!node.ParticipantObjectQuery.text().isEmpty()){
	 		assert node.ParticipantObjectQuery.text() == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectQuery" )	
	 	}	
		parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].each{			
			def decodedData1 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@value.text().decodeBase64())
  			assert decodedData1 == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value" )
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[0].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type" )
	 		def decodedData2 = new String (parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@value.text().decodeBase64())
  			def remoteHCID = testRunner.testCase.testSuite.project.getPropertyValue("RemoteHCID")
	 		def remoteHCIDWithPrefix 
	 		if(remoteHCID.startsWith("urn:oid:")){
	 			remoteHCIDWithPrefix= remoteHCID
	 		}
	 		else{
	 			remoteHCIDWithPrefix = "urn:oid:"+remoteHCID
	 		}
  			assert decodedData2 == remoteHCIDWithPrefix
	 		assert parsedXmlMessage.ParticipantObjectIdentification[1].ParticipantObjectDetail[1].@type == context.findProperty( "ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type" )	 		
	 	}	  
	}
 }
}
nhinc.FileUtils.updateProperty(context.findProperty('GatewayPropDir'),context.findProperty('auditLoggingStatusFileName'),'RetrieveDocuments',"false", log);
testRunner.gotoStepByName( "Clear Audit Logs")]]></script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Success" id="fd2ab37f-aa54-45f8-b97f-cf51d7abc808">
        <con:settings/>
        <con:config>
          <script/>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def propertiesFilename = projectPath + "/RetrieveDocumentAuditLog.properties"
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
 def props = new Properties()
 props.load(new FileInputStream(propertiesFile))
 props.each { key, value ->
     testCase.setPropertyValue(key, value)
 }
}</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>&lt;!--Destination--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;!--Human</con:name>
          <con:value>Requestor--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;!--Source--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>&lt;--Document</con:name>
          <con:value>--></con:value>
        </con:property>
        <con:property>
          <con:name>&lt;--Patient--></con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserID</con:name>
          <con:value>kskagerb</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@code</con:name>
          <con:value>307969004</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@codeSystemName</con:name>
          <con:value>SNOMED_CT</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant.RoleIDCode.@displayName</con:name>
          <con:value>Human Requestor</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@NetworkAccessPointTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserID</con:name>
          <con:value>http://www.w3.org/2005/08/addressing/anonymous</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserIsRequestor</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@code</con:name>
          <con:value>110152</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest.RoleIDCode.@displayName</con:name>
          <con:value>Destination</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Dest_Initiator.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@AlternativeUserID</con:name>
          <con:value>19233@192.168.1.2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointID</con:name>
          <con:value>localhost</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@NetworkAccessPointTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserIsRequestor</con:name>
          <con:value>false</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.@UserName</con:name>
          <con:value>Karl Skagerberg</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@code</con:name>
          <con:value>110153</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source.RoleIDCode.@displayName</con:name>
          <con:value>Source</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g0.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/2_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>ActiveParticipant_Source_g1.@UserID</con:name>
          <con:value>https://localhost:8181/Gateway/DocumentRetrieve/3_0/NhinService/RespondingGateway_Retrieve_Service/DocRetrieve</con:value>
        </con:property>
        <con:property>
          <con:name>AuditMessage.xmlns</con:name>
          <con:value>http://nhinc.services.com/schema/auditmessage</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
          <con:value>DoD</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
          <con:value>urn:oid:1.1</con:value>
        </con:property>
        <con:property>
          <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
          <con:value>1010</con:value>
        </con:property>
        <con:property>
          <con:name>CorrectedRemoteHCID</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:50:30Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventActionCode</con:name>
          <con:value>C</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventDateTime</con:name>
          <con:value>2015-04-02T13:47:30.199Z</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.@EventOutcomeIndicator</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@code</con:name>
          <con:value>110107</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@codeSystemName</con:name>
          <con:value>DCM</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventID.@displayName</con:name>
          <con:value>Import</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@code</con:name>
          <con:value>ITI-39</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@codeSystemName</con:name>
          <con:value>IHE Transactions</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification.EventTypeCode.@displayName</con:name>
          <con:value>Cross Gateway Retrieve</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.@EventActionCode</con:name>
          <con:value>R</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@code</con:name>
          <con:value>110106</con:value>
        </con:property>
        <con:property>
          <con:name>EventIdentification_Responder.EventID.@displayName</con:name>
          <con:value>Export</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectID</con:name>
          <con:value>500000000^^^&amp;1.1&amp;ISO</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCode</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail.@value</con:name>
          <con:value>ihe:RepositoryUniqueId</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectDetail_one.@value</con:name>
          <con:value>homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Patient Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectName</con:name>
          <con:value>anonymus</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectDataLifeCycle</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectID</con:name>
          <con:value>1.123407.777777</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectSensitivity</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCode</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.@ParticipantObjectTypeCodeRole</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@type</con:name>
          <con:value>Repository Unique Id</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail.@value</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@type</con:name>
          <con:value>ihe:homeCommunityID</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectDetail_1.@value</con:name>
          <con:value>urn:oid:2.2</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@code</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@codeSystemName</con:name>
          <con:value>RFC-3881</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectIDTypeCode.@displayName</con:name>
          <con:value>Report Number</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectName</con:name>
          <con:value>1.1</con:value>
        </con:property>
        <con:property>
          <con:name>ParticipantObjectIdentification_Document.ParticipantObjectQuery</con:name>
          <con:value>unknown</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:40:30</con:value>
        </con:property>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:40:30Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Distribution" searchProperties="true" id="30b2d3bb-0976-4d6a-b7f1-3d6b31875764">
      <con:settings/>
      <con:testStep type="groovy" name="Clear Audit Logs" id="56c3f188-fc85-4d80-acfd-208e905ef83e">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) { sql -> 
	sql.execute('delete from ' + context.findProperty('AuditRepoTable'))
	sql.execute('alter table ' + context.findProperty('AuditRepoTable') + ' AUTO_INCREMENT=1')
}</script>
        </con:config>
      </con:testStep>
      <con:testStep name="Admin Distribution" type="request" id="1c21463e-f9c7-4566-a226-14e11486b482">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>AdministrativeDistribution_Binding_Soap12_g0</con:interface>
          <con:operation>SendAlertMessage</con:operation>
          <con:request name="Admin Distribution" id="2e77c3ce-6ab8-4a7e-8d3b-3000dec48aa6">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#Endpoint-EntityAdminDist}</con:endpoint>
            <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:urn2="urn:oasis:names:tc:emergency:EDXL:DE:1.0">
   <soap:Header/>
   <soap:Body testSuite="Entity_g0" testCase="Admin Distribution">
      <urn:RespondingGateway_SendAlertMessage>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>AddrCity</urn1:city>
               <urn1:country>AddrCountry</urn1:country>
               <urn1:state>AddrState</urn1:state>
               <urn1:streetAddress>AddrStreet</urn1:streetAddress>
               <urn1:zipCode>AddrZip</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>06/04/1959 05:21:00</urn1:dateOfBirth>
            <urn1:explanationNonClaimantSignature>Electronic</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>false</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>false</urn1:haveSignature>
            <urn1:haveWitnessSignature>false</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>${#Project#LocalHCDescription}</urn1:description>
               <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
               <urn1:name>${#Project#LocalHCDescription}</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sandy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
               <urn1:fullName>Sandy S. Smith</urn1:fullName>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5436</urn1:extension>
               <urn1:localNumber>253-6849</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>AddrCode</urn1:code>
                  <urn1:codeSystem>AddrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>AddrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>AddrCode</urn1:displayName>
                  <urn1:originalText>AddrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Addr2City</urn1:city>
               <urn1:country>Addr2Country</urn1:country>
               <urn1:state>Addr2State</urn1:state>
               <urn1:streetAddress>Addr2Street</urn1:streetAddress>
               <urn1:zipCode>Addr2Zip</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Sammy</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>s</urn1:secondNameOrInitials>
               <urn1:fullName>Sammy S. Smith</urn1:fullName>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>5424</urn1:extension>
               <urn1:localNumber>542-6823</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>253987546</urn1:SSN>
            <!--1 or more repetitions:-->
            <urn1:uniquePatientId>500000000^^^&amp;1.1&amp;ISO</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>addrCode</urn1:code>
                  <urn1:codeSystem>addrCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>addrCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>addrCode</urn1:displayName>
                  <urn1:originalText>addrCode</urn1:originalText>
               </urn1:addressType>
               <urn1:city>Burnell</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>FL</urn1:state>
               <urn1:streetAddress>825 North</urn1:streetAddress>
               <urn1:zipCode>32184</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>Smith</urn1:familyName>
               <urn1:givenName>Scott</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>nameCode</urn1:code>
                  <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>nameCode</urn1:displayName>
                  <urn1:originalText>nameCode</urn1:originalText>
               </urn1:nameType>
               <urn1:secondNameOrInitials>S.</urn1:secondNameOrInitials>
               <urn1:fullName>Scott S. Smith</urn1:fullName>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>321</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>8432</urn1:extension>
               <urn1:localNumber>985-2239</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>phoneCode</urn1:code>
                  <urn1:codeSystem>phoneCodeSyst</urn1:codeSystem>
                  <urn1:codeSystemName>phoneCodeSystName</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>phoneCode</urn1:displayName>
                  <urn1:originalText>phoneCode</urn1:originalText>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>Skagerberg</urn1:familyName>
                  <urn1:givenName>Karl</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>nameCode</urn1:code>
                     <urn1:codeSystem>nameCodeSyst</urn1:codeSystem>
                     <urn1:codeSystemName>nameCodeSystName</urn1:codeSystemName>
                     <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                     <urn1:displayName>nameCode</urn1:displayName>
                     <urn1:originalText>nameCode</urn1:originalText>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>S</urn1:secondNameOrInitials>
                  <urn1:fullName>Kasrl S. Skagerberg</urn1:fullName>
               </urn1:personName>
               <urn1:userName>${#TestCase#UserId}</urn1:userName>
               <urn1:org>
                  <urn1:description>${#Project#LocalHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#LocalHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#LocalHCDescription}</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>80584001</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Psychiatrist</urn1:displayName>
                  <urn1:originalText>Psychiatrist</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PSYCHOTHERAPY</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:samlAuthnStatement>
               <urn1:authInstant>2009-09-01T13:00:00.000Z</urn1:authInstant>
               <urn1:sessionIndex>mySessionIndex</urn1:sessionIndex>
               <urn1:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn1:authContextClassRef>
               <urn1:subjectLocalityAddress>mySubjectLocalityAddress</urn1:subjectLocalityAddress>
               <urn1:subjectLocalityDNSName>mySubjectLocalityDns</urn1:subjectLocalityDNSName>
            </urn1:samlAuthnStatement>
            <urn1:samlAuthzDecisionStatement>
               <urn1:decision>Permit</urn1:decision>
               <urn1:resource>myAuthzDecisionStatementResource</urn1:resource>
               <urn1:action>myAuthzDecisionStatementAction</urn1:action>
               <urn1:evidence>
                  <urn1:assertion>
                     <urn1:id>AuthzDecisionStatementEvidenceAssertionId</urn1:id>
                     <urn1:issueInstant>2009-09-02T14:00:00.000Z</urn1:issueInstant>
                     <urn1:version>2.0</urn1:version>
                     <urn1:issuer>CN=Mr Saml User,OU=SU,O=Mr SAML Org,L=Chantilly,ST=VA,C=US</urn1:issuer>
                     <urn1:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn1:issuerFormat>
                     <urn1:conditions>
                        <urn1:notBefore>2009-04-16T13:10:39.093Z</urn1:notBefore>
                        <urn1:notOnOrAfter>2009-12-31T12:00:00.000Z</urn1:notOnOrAfter>
                     </urn1:conditions>
                     <urn1:accessConsentPolicy>urn:oid:1.2.3.4</urn1:accessConsentPolicy>
                     <urn1:instanceAccessConsentPolicy>urn:oid:1.2.3.4.123456789</urn1:instanceAccessConsentPolicy>
                  </urn1:assertion>
               </urn1:evidence>
            </urn1:samlAuthzDecisionStatement>
            <urn1:samlSignature>
               <!--Optional:-->
               <urn1:keyInfo>
                  <!--Optional:-->
                  <urn1:rsaKeyValueModulus>cid:921853060605</urn1:rsaKeyValueModulus>
                  <!--Optional:-->
                  <urn1:rsaKeyValueExponent>cid:507157468547</urn1:rsaKeyValueExponent>
               </urn1:keyInfo>
               <!--Optional:-->
               <urn1:signatureValue>cid:175264679488</urn1:signatureValue>
            </urn1:samlSignature>
         </urn:assertion>
         <!--Optional:-->
         <urn:nhinTargetCommunities>
            <!--1 or more repetitions:-->
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>${#Project#RemoteHCDescription}</urn1:description>
                  <urn1:homeCommunityId>${#Project#RemoteHCID}</urn1:homeCommunityId>
                  <urn1:name>${#Project#RemoteHCDescription}</urn1:name>
               </urn1:homeCommunity>
               <urn1:list>?</urn1:list>
               <urn1:region>?</urn1:region>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
         <urn2:EDXLDistribution>
            <urn2:distributionID>633990682441061250</urn2:distributionID>
            <urn2:senderID>actor@2.16.840.1.113883.3.166</urn2:senderID>
            <urn2:dateTimeSent>2010-08-14T12:18:13.512375-08:00</urn2:dateTimeSent>
            <urn2:distributionStatus>Actual</urn2:distributionStatus>
            <urn2:distributionType>Update</urn2:distributionType>
            <urn2:combinedConfidentiality>Public</urn2:combinedConfidentiality>
            <!--Optional:-->
            <urn2:language>?</urn2:language>
            <!--Zero or more repetitions:-->
            <urn2:senderRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:senderRole>
            <!--Zero or more repetitions:-->
            <urn2:recipientRole>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:recipientRole>
            <!--Zero or more repetitions:-->
            <urn2:keyword>
               <urn2:valueListUrn>?</urn2:valueListUrn>
               <!--1 or more repetitions:-->
               <urn2:value>?</urn2:value>
            </urn2:keyword>
            <!--Zero or more repetitions:-->
            <urn2:distributionReference>?</urn2:distributionReference>
            <!--Zero or more repetitions:-->
            <urn2:explicitAddress>
               <urn2:explicitAddressScheme>modified_IHEIntendedRecipient</urn2:explicitAddressScheme>
               <!--1 or more repetitions:-->
               <urn2:explicitAddressValue>^^^^^^^^^2.16.840.1.113883.3.166|0000000001</urn2:explicitAddressValue>
            </urn2:explicitAddress>
            <!--Zero or more repetitions:-->
            <urn2:targetArea>
               <!--Zero or more repetitions:-->
               <urn2:circle>?</urn2:circle>
               <!--Zero or more repetitions:-->
               <urn2:polygon>?</urn2:polygon>
               <!--Zero or more repetitions:-->
               <urn2:country>?</urn2:country>
               <!--Zero or more repetitions:-->
               <urn2:subdivision>?</urn2:subdivision>
               <!--Zero or more repetitions:-->
               <urn2:locCodeUN>?</urn2:locCodeUN>
            </urn2:targetArea>
            <!--Zero or more repetitions:-->
            <urn2:contentObject>
               <!--Optional:-->
               <urn2:contentDescription>PH Alert Message</urn2:contentDescription>
               <!--Zero or more repetitions:-->
               <urn2:contentKeyword>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:contentKeyword>
               <!--Optional:-->
               <urn2:incidentID>TEST</urn2:incidentID>
               <!--Optional:-->
               <urn2:incidentDescription>This is a test message</urn2:incidentDescription>
               <!--Zero or more repetitions:-->
               <urn2:originatorRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:originatorRole>
               <!--Zero or more repetitions:-->
               <urn2:consumerRole>
                  <urn2:valueListUrn>?</urn2:valueListUrn>
                  <!--1 or more repetitions:-->
                  <urn2:value>?</urn2:value>
               </urn2:consumerRole>
               <!--Optional:-->
               <urn2:confidentiality>Public</urn2:confidentiality>
               <!--You have a CHOICE of the next 2 items at this level-->
    <urn2:nonXMLContent>
                  <urn2:mimeType>application/pdf</urn2:mimeType>
                  <!--Optional:-->
                  <urn2:size>19</urn2:size>
                  <!--Optional:-->
                  <urn2:digest>?</urn2:digest>
                  <!--Optional:-->
                  <urn2:uri>?</urn2:uri>
                  <!--Optional:-->
                  <urn2:contentData>LDLIHAPIISDALKDF902383K1182K4J49DFNF3KR0482HJ1029F393</urn2:contentData>
               </urn2:nonXMLContent>
               <!--You may enter ANY elements at this point-->
            </urn2:contentObject>
         </urn2:EDXLDistribution>
      </urn:RespondingGateway_SendAlertMessage>
   </soap:Body>
</soap:Envelope>]]></con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep name="Delay" type="delay" id="560ff13a-4a92-4f92-8675-53d0726b9b29">
        <con:settings/>
        <con:config>
          <delay>60000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify Audit Logs" id="bf71d9b4-c6df-4bf3-9592-ca407e105d0a">
        <con:settings/>
        <con:config>
          <script>context.withSql(context.findProperty('AuditRepoDB')) {sql ->
	assert 4 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable'))[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 1 and direction="Entity Inbound" and remoteHcid="1.1"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 2 and direction="Nhin Outbound" and remoteHcid="2.2"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 3 and direction="Nhin Inbound" and remoteHcid="1.1"')[0]
	assert 1 == sql.firstRow('select count(*) from ' + context.findProperty('AuditRepoTable') + ' where id = 4 and direction="Adapter Outbound" and remoteHcid="1.1"')[0]
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>nhinc.FileUtils.backupConfiguration(context.findProperty('GatewayPropDir'), log);
nhinc.FileUtils.setG0ConnectionInfo(context.expand(context.testCase.testSuite.project.resourceRoot), context.findProperty('GatewayPropDir'), log);</con:setupScript>
      <con:tearDownScript>nhinc.FileUtils.restoreConfiguration(context.findProperty('GatewayPropDir'), log);</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>startDate</con:name>
          <con:value>2016-05-12T17:40:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>endDate</con:name>
          <con:value>2016-05-12T17:50:42Z</con:value>
        </con:property>
        <con:property>
          <con:name>sigDate</con:name>
          <con:value>05/12/2016 17:40:42</con:value>
        </con:property>
        <con:property>
          <con:name>expireDate</con:name>
          <con:value>2016-06-11T00:00:00Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>Endpoint-DocQuery</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentQuery/2_0/EntityService/EntityDocQueryUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DocRetrieve</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentRetrieve/2_0/EntityService/EntityDocRetrieve</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-DSDeferredResp</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityAdminDist</con:name>
        <con:value>http://localhost:8080/Gateway/AdminDistribution/1_0/AdministrativeDistribution_Service</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-EntityXDRRequest</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscovery</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityPatientDiscovery</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncReq</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredRequestUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-PatientDiscoveryAsyncResp</con:name>
        <con:value>http://localhost:8080/Gateway/PatientDiscovery/1_0/EntityService/EntityPatientDiscoveryDeferredResponseUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDREntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentSubmission/1_1/EntityService/EntityDocSubmissionUnsecured</con:value>
      </con:property>
      <con:property>
        <con:name>Endpoint-XDSEntity</con:name>
        <con:value>http://localhost:8080/Gateway/DocumentDataSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:value>
      </con:property>
    </con:properties>
    <con:setupScript/>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">http://localhost:${HttpDefaultPort}/Gateway/DocumentDataSubmission/1_0/EntityService/EntityDocDataSubmissionUnsecured</con:endpoint></con:endpointStrategy><con:properties>
    <con:property>
      <con:name>AAMappingDB</con:name>
      <con:value>assigningauthoritydb</con:value>
    </con:property>
    <con:property>
      <con:name>AAMappingTable</con:name>
      <con:value>aa_to_home_community_mapping</con:value>
    </con:property>
    <con:property>
      <con:name>AsyncMsgDB</con:name>
      <con:value>asyncmsgs</con:value>
    </con:property>
    <con:property>
      <con:name>AsyncMsgTable</con:name>
      <con:value>asyncmsgrepo</con:value>
    </con:property>
    <con:property>
      <con:name>auditLoggingStatusFileName</con:name>
      <con:value>audit.properties</con:value>
    </con:property>
    <con:property>
      <con:name>AuditRepoDB</con:name>
      <con:value>auditrepo</con:value>
    </con:property>
    <con:property>
      <con:name>AuditRepoTable</con:name>
      <con:value>auditrepository</con:value>
    </con:property>
    <con:property>
      <con:name>BirthTime</con:name>
      <con:value>19630804</con:value>
    </con:property>
    <con:property>
      <con:name>City</con:name>
      <con:value>Melbourne</con:value>
    </con:property>
    <con:property>
      <con:name>Country</con:name>
      <con:value>US</con:value>
    </con:property>
    <con:property>
      <con:name>DBHost</con:name>
      <con:value>localhost</con:value>
    </con:property>
    <con:property>
      <con:name>DBPass</con:name>
      <con:value>nhincpass</con:value>
    </con:property>
    <con:property>
      <con:name>DBPort</con:name>
      <con:value>3306</con:value>
    </con:property>
    <con:property>
      <con:name>DBUser</con:name>
      <con:value>nhincuser</con:value>
    </con:property>
    <con:property>
      <con:name>DeferredPatientDiscoveryReqMessageID</con:name>
      <con:value>urn:uuid:6666666666.66666.666.66</con:value>
    </con:property>
    <con:property>
      <con:name>DOB</con:name>
      <con:value>19800516</con:value>
    </con:property>
    <con:property>
      <con:name>DQDocID</con:name>
      <con:value>1.123401.55555</con:value>
    </con:property>
    <con:property>
      <con:name>DQPatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>DRDocID</con:name>
      <con:value>1.123407.777777</con:value>
    </con:property>
    <con:property>
      <con:name>DRRepoID</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:property>
      <con:name>DynamicDQDocID</con:name>
      <con:value>103.8.9284320.020.3590.75^1266324032288</con:value>
    </con:property>
    <con:property>
      <con:name>ExpirationDate</con:name>
      <con:value>20100520</con:value>
    </con:property>
    <con:property>
      <con:name>FamilyName</con:name>
      <con:value>Younger</con:value>
    </con:property>
    <con:property>
      <con:name>GatewayPropDir</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>Gender</con:name>
      <con:value>M</con:value>
    </con:property>
    <con:property>
      <con:name>GivenName</con:name>
      <con:value>Gallow</con:value>
    </con:property>
    <con:property>
      <con:name>LocalAA</con:name>
      <con:value>1.1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalHCDescription</con:name>
      <con:value>InternalTest1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalHCID</con:name>
      <con:value>1.1</con:value>
    </con:property>
    <con:property>
      <con:name>LocalPatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>NotifySubscriptionID</con:name>
      <con:value>f2064549-c802-41be-bb0d-6319c6437072</con:value>
    </con:property>
    <con:property>
      <con:name>PatientCorrelationDB</con:name>
      <con:value>patientcorrelationdb</con:value>
    </con:property>
    <con:property>
      <con:name>PatientCorrelationTable</con:name>
      <con:value>correlatedidentifiers</con:value>
    </con:property>
    <con:property>
      <con:name>project.name</con:name>
      <con:value>EntityValidation</con:value>
    </con:property>
    <con:property>
      <con:name>PurposeOfDisclosure</con:name>
      <con:value>Mental</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteAA</con:name>
      <con:value>2.2</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteHCDescription</con:name>
      <con:value>InternalTest2</con:value>
    </con:property>
    <con:property>
      <con:name>RemoteHCID</con:name>
      <con:value>2.2</con:value>
    </con:property>
    <con:property>
      <con:name>RemotePatientID</con:name>
      <con:value>D123401</con:value>
    </con:property>
    <con:property>
      <con:name>SSN</con:name>
      <con:value>123456789</con:value>
    </con:property>
    <con:property>
      <con:name>State</con:name>
      <con:value>FL</con:value>
    </con:property>
    <con:property>
      <con:name>StreetAddress</con:name>
      <con:value>123 Johnson Rd</con:value>
    </con:property>
    <con:property>
      <con:name>SubjectID</con:name>
      <con:value>1111</con:value>
    </con:property>
    <con:property>
      <con:name>UniquePatientId</con:name>
      <con:value>1111^^^&amp;amp;1.1&amp;amp;ISO</con:value>
    </con:property>
    <con:property>
      <con:name>UnSubscriptionID</con:name>
      <con:value>664f3c6e-ea88-4dae-a88e-b58661d8c253</con:value>
    </con:property>
    <con:property>
      <con:name>ZipCode</con:name>
      <con:value>12345</con:value>
    </con:property>
    <con:property>
      <con:name>MessageID</con:name>
      <con:value>urn:uuid:6666666666.66666.666.66</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmissionDefReq</con:name>
      <con:value>DocSubmissionDeferredReq</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmissionDefRes</con:name>
      <con:value>DocSubmissionDeferredResp</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocSubmission</con:name>
      <con:value>DocSubmission</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDocDataSubmission</con:name>
      <con:value>DocDataSubmission</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePDDefReq</con:name>
      <con:value>PatientDiscoveryDeferredReq</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePDDefRes</con:name>
      <con:value>PatientDiscoveryDeferredResp</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypePD</con:name>
      <con:value>PatientDiscovery</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDQ</con:name>
      <con:value>QueryForDocuments</con:value>
    </con:property>
    <con:property>
      <con:name>EventTypeDR</con:name>
      <con:value>RetrieveDocuments</con:value>
    </con:property>
    <con:property>
      <con:name>AuditSourceIdentification.@AuditEnterpriseSiteID</con:name>
      <con:value>DoD</con:value>
    </con:property>
    <con:property>
      <con:name>AuditSourceIdentification.@AuditSourceID</con:name>
      <con:value>urn:oid:1.1</con:value>
    </con:property>
    <con:property>
      <con:name>AuditSourceIdentification.@AuditSourceTypeCode</con:name>
      <con:value>1010</con:value>
    </con:property>
  <con:property><con:name>EventTypeDDQ</con:name><con:value>docquerydeferredresultsoption</con:value></con:property></con:properties>
  <con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileInputStream(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}


TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
  afterRun: { testRunner, runContext -> },
  afterStep: { testRunner, runContext, result -> },
  beforeStep: { testRunner, runContext -> },
  beforeStep: { testRunner, runContext, testStep -> },
  beforeRun: { testRunner, runContext -> 
    use (org.codehaus.groovy.runtime.TimeCategory) {
      def startDate = 5.minutes.ago
      def endDate = 5.minutes.from.now
      def expireDate = 30.days.from.now

      def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
      def dfSig = "MM/dd/yyyy' 'HH:mm:ss"

      runContext.testCase.setPropertyValue("startDate", startDate.format(df))
      runContext.testCase.setPropertyValue("endDate", endDate.format(df))
      runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
      runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
    }
  }   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
    return delegate.getProperty(propertyName) ?:
                delegate.testCase.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.project.getPropertyValue(propertyName) ?:
                com.eviware.soapui.SoapUI.globalProperties.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
  def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
  def host = delegate.findProperty('DBHost')
  def port = delegate.findProperty('DBPort')
  def user = delegate.findProperty('DBUser')
  def pass = delegate.findProperty('DBPass')
  
  def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
  def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
  try {
     block(sql)
  } finally {
    sql.close()
  }
}

import javax.management.remote.JMXConnectorFactory as JmxFactory
import javax.management.remote.JMXServiceURL as JmxUrl
import javax.management.remote.*;

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.setGatewayStandard = { standard ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  log.info "Value of the Param Name -->"+name;
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
  def serverUrl = 'service:jmx:rmi://' + jmxHost + ':' + jmxPort + '/jndi/rmi://' + jmxHost + ':' + jmxPort + 
'/jmxrmi';
  log.info "Standard value-->"+standard
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
    if (standard){
  	config.setStandardMode();
  	log.info "Inside STD"
  }
  else{
  	log.info "Inside PASS"
     config.setPassthruMode();	
  }
  server.close();
  return true;
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.isStandard = { serviceName, direction ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  log.info "Value of the Param Name -->"+name;
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
  def serverUrl = 'service:jmx:rmi://' + jmxHost + ':' + jmxPort + '/jndi/rmi://' + jmxHost + ':' + jmxPort + 
'/jmxrmi';
   
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
  def isStandard = config.isStandard(serviceName, direction);
  server.close();
  return isStandard;
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.setGatewayStandard = { standard, serviceName, direction ->
  def username = delegate.findProperty("ASUsername");
  def password = delegate.findProperty("ASPassword");
  def jmxHost = delegate.findProperty("JMXHost");
  def jmxPort = delegate.findProperty("JMXPort");
  log.info "Value of the Param Name -->"+name;
  // use jmx to set passthru mode
  def env = [
    (JMXConnector.CREDENTIALS): (String[])[username, password]
  ];
  def serverUrl = 'service:jmx:rmi://' + jmxHost + ':' + jmxPort + '/jndi/rmi://' + jmxHost + ':' + jmxPort + 
'/jmxrmi';
  log.info "Standard value-->"+standard
  def server = JmxFactory.connect(new JmxUrl(serverUrl), env);
  def config = new GroovyMBean(server.MBeanServerConnection, 'org.connectopensource.mbeans:type=Configuration');
  //set the Gateway to Standard Mode
    if (standard){
  	config.setStandardMode(serviceName, direction);
  	log.info "Inside STD"
  }
  else{
  	log.info "Inside PASS"
     config.setPassthruMode(serviceName, direction);	
  }
  server.close();
  return true;
}</con:afterLoadScript>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>